{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/lib/db.ts"],"sourcesContent":["import type { SpreadsheetData, SpreadsheetInfo } from '@/types/spreadsheet';\n\nconst DB_NAME = 'OfflineSheetDB';\nconst DB_VERSION = 1;\nconst SPREADSHEET_STORE_NAME = 'spreadsheets';\n\ninterface DBResult<T> {\n  success: boolean;\n  data?: T;\n  error?: string;\n}\n\nfunction openDB(): Promise<IDBDatabase> {\n  return new Promise((resolve, reject) => {\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\n\n    request.onerror = () => reject(request.error);\n    request.onsuccess = () => resolve(request.result);\n\n    request.onupgradeneeded = (event) => {\n      const db = (event.target as IDBOpenDBRequest).result;\n      if (!db.objectStoreNames.contains(SPREADSHEET_STORE_NAME)) {\n        const store = db.createObjectStore(SPREADSHEET_STORE_NAME, { keyPath: 'id' });\n        store.createIndex('name', 'name', { unique: false });\n        store.createIndex('updatedAt', 'updatedAt', { unique: false });\n      }\n    };\n  });\n}\n\nexport async function saveSpreadsheet(spreadsheet: SpreadsheetData): Promise<DBResult<void>> {\n  try {\n    const db = await openDB();\n    const transaction = db.transaction(SPREADSHEET_STORE_NAME, 'readwrite');\n    const store = transaction.objectStore(SPREADSHEET_STORE_NAME);\n    \n    return new Promise((resolve, reject) => {\n      const request = store.put(spreadsheet);\n      request.onsuccess = () => resolve({ success: true });\n      request.onerror = () => reject(request.error);\n      transaction.oncomplete = () => db.close();\n      transaction.onerror = () => reject(transaction.error);\n    });\n  } catch (error) {\n    return { success: false, error: error instanceof Error ? error.message : String(error) };\n  }\n}\n\nexport async function getSpreadsheet(id: string): Promise<DBResult<SpreadsheetData>> {\n  try {\n    const db = await openDB();\n    const transaction = db.transaction(SPREADSHEET_STORE_NAME, 'readonly');\n    const store = transaction.objectStore(SPREADSHEET_STORE_NAME);\n    \n    return new Promise((resolve, reject) => {\n      const request = store.get(id);\n      request.onsuccess = () => resolve({ success: true, data: request.result as SpreadsheetData });\n      request.onerror = () => reject(request.error);\n      transaction.oncomplete = () => db.close();\n      transaction.onerror = () => reject(transaction.error);\n    });\n  } catch (error) {\n    return { success: false, error: error instanceof Error ? error.message : String(error) };\n  }\n}\n\nexport async function getAllSpreadsheetInfo(): Promise<DBResult<SpreadsheetInfo[]>> {\n try {\n    const db = await openDB();\n    const transaction = db.transaction(SPREADSHEET_STORE_NAME, 'readonly');\n    const store = transaction.objectStore(SPREADSHEET_STORE_NAME);\n    const index = store.index('updatedAt'); // Sort by most recently updated\n    \n    return new Promise<DBResult<SpreadsheetInfo[]>>((resolve, reject) => {\n      const spreadsheetsInfo: SpreadsheetInfo[] = [];\n      // Iterate in reverse to get newest first\n      const cursorRequest = index.openCursor(null, \"prev\"); \n\n      cursorRequest.onsuccess = (event) => {\n        const cursor = (event.target as IDBRequest<IDBCursorWithValue>).result;\n        if (cursor) {\n          const { id, name, createdAt, updatedAt } = cursor.value as SpreadsheetData;\n          spreadsheetsInfo.push({ id, name, createdAt, updatedAt });\n          cursor.continue();\n        } else {\n          resolve({ success: true, data: spreadsheetsInfo });\n        }\n      };\n      cursorRequest.onerror = () => reject(cursorRequest.error);\n      transaction.oncomplete = () => db.close();\n      transaction.onerror = () => reject(transaction.error);\n    });\n  } catch (error) {\n    return { success: false, error: error instanceof Error ? error.message : String(error) };\n  }\n}\n\nexport async function deleteSpreadsheet(id: string): Promise<DBResult<void>> {\n  try {\n    const db = await openDB();\n    const transaction = db.transaction(SPREADSHEET_STORE_NAME, 'readwrite');\n    const store = transaction.objectStore(SPREADSHEET_STORE_NAME);\n\n    return new Promise((resolve, reject) => {\n      const request = store.delete(id);\n      request.onsuccess = () => resolve({ success: true });\n      request.onerror = () => reject(request.error);\n      transaction.oncomplete = () => db.close();\n      transaction.onerror = () => reject(transaction.error);\n    });\n  } catch (error) {\n    return { success: false, error: error instanceof Error ? error.message : String(error) };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/types/spreadsheet.ts"],"sourcesContent":["\nexport interface CellStyle {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  textAlign?: 'left' | 'center' | 'right';\n  hasBorder?: boolean; // For \"Format as Table\"\n  fontSize?: string; // e.g., '10pt', '12px'\n  fontFamily?: string; // e.g., 'Arial', 'Verdana'\n  // backgroundColor?: string; // Removed as per user request\n  // color?: string; // Removed as per user request\n}\n\nexport interface CellAddress {\n  sheetId: string;\n  rowIndex: number;\n  colIndex: number;\n}\n\nexport interface SelectionRange {\n  start: CellAddress;\n  end: CellAddress;\n}\n\nexport interface CellData {\n  id: string; // e.g., \"A1\", \"B2\"\n  rawValue?: string | number; // Content entered by user, could be \"123\", \"abc\", or \"=SUM(A1:A2)\"\n  value?: string | number | boolean; // Calculated value or display value for non-formulas\n  style?: CellStyle;\n  formula?: string; // If rawValue starts with '=', this holds the formula part, e.g., \"SUM(A1:A2)\"\n  // For merged cells, only the top-left cell of a merge has content.\n  // Other cells within the merge might be placeholders or have specific props.\n  isMerged?: boolean; // Indicates if this cell is part of a merged area (but not the top-left)\n  mergeMaster?: CellAddress; // If isMerged, points to the top-left master cell\n  colSpan?: number; // If this is the top-left cell of a merge\n  rowSpan?: number; // If this is the top-left cell of a merge\n}\n\nexport type RowData = CellData[]; // An array of cells representing a row\n\nexport type PredefinedStyleKey = 'lightRedFillDarkRedText' | 'yellowFillDarkYellowText' | 'greenFillDarkGreenText';\n\nexport interface ConditionalFormatRule {\n  id: string;\n  range: SelectionRange;\n  type: 'greaterThan' | 'lessThan' | 'equalTo';\n  value: number;\n  styleKey: PredefinedStyleKey;\n}\n\nexport interface SheetData {\n  id: string;\n  name: string;\n  cells: CellData[][];\n  rowCount: number;\n  columnCount: number;\n  columnWidths?: number[];\n  rowHeights?: number[];\n  conditionalFormatRules?: ConditionalFormatRule[];\n  mergedCells?: SelectionRange[]; // Stores ranges of merged cells\n}\n\nexport interface SpreadsheetInfo {\n  id:string;\n  name: string;\n  createdAt: number;\n  updatedAt: number;\n}\n\nexport interface SpreadsheetData extends SpreadsheetInfo {\n  sheets: SheetData[];\n  activeSheetId: string;\n}\n\nexport const DEFAULT_ROW_COUNT = 100;\nexport const DEFAULT_COLUMN_COUNT = 50;\nexport const DEFAULT_COLUMN_WIDTH = 120;\nexport const DEFAULT_ROW_HEIGHT = 28;\n\n\n// Helper to generate cell ID like \"A1\", \"B2\"\nexport function getCellId(rowIndex: number, colIndex: number): string {\n  let colName = \"\";\n  let n = colIndex;\n  do {\n    colName = String.fromCharCode((n % 26) + 65) + colName;\n    n = Math.floor(n / 26) - 1;\n  } while (n >= 0);\n  return `${colName}${rowIndex + 1}`;\n}\n\nexport function createEmptyCell(rowIndex: number, colIndex: number): CellData {\n  return {\n    id: getCellId(rowIndex, colIndex),\n    rawValue: '',\n    value: '', // Initialize value to empty string for display\n    colSpan: 1,\n    rowSpan: 1,\n    isMerged: false,\n  };\n}\n\nexport function createInitialSheet(id: string, name: string): SheetData {\n  const cells: CellData[][] = [];\n  for (let i = 0; i < DEFAULT_ROW_COUNT; i++) {\n    const row: CellData[] = [];\n    for (let j = 0; j < DEFAULT_COLUMN_COUNT; j++) {\n      row.push(createEmptyCell(i, j));\n    }\n    cells.push(row);\n  }\n  const columnWidths = Array(DEFAULT_COLUMN_COUNT).fill(DEFAULT_COLUMN_WIDTH);\n  const rowHeights = Array(DEFAULT_ROW_COUNT).fill(DEFAULT_ROW_HEIGHT);\n  return {\n    id,\n    name,\n    cells,\n    rowCount: DEFAULT_ROW_COUNT,\n    columnCount: DEFAULT_COLUMN_COUNT,\n    columnWidths,\n    rowHeights,\n    conditionalFormatRules: [],\n    mergedCells: [],\n  };\n}\n\n// Helper to check if a cell address is within a selection range\nexport function isCellAddressInRange(address: CellAddress, range: SelectionRange): boolean {\n  const minR = Math.min(range.start.rowIndex, range.end.rowIndex);\n  const maxR = Math.max(range.start.rowIndex, range.end.rowIndex);\n  const minC = Math.min(range.start.colIndex, range.end.colIndex);\n  const maxC = Math.max(range.start.colIndex, range.end.colIndex);\n  return address.rowIndex >= minR && address.rowIndex <= maxR &&\n         address.colIndex >= minC && address.colIndex <= maxC;\n}\n"],"names":[],"mappings":";;;;;;;;;;AA0EO,MAAM,oBAAoB;AAC1B,MAAM,uBAAuB;AAC7B,MAAM,uBAAuB;AAC7B,MAAM,qBAAqB;AAI3B,SAAS,UAAU,QAAgB,EAAE,QAAgB;IAC1D,IAAI,UAAU;IACd,IAAI,IAAI;IACR,GAAG;QACD,UAAU,OAAO,YAAY,CAAC,AAAC,IAAI,KAAM,MAAM;QAC/C,IAAI,KAAK,KAAK,CAAC,IAAI,MAAM;IAC3B,QAAS,KAAK,EAAG;IACjB,OAAO,GAAG,UAAU,WAAW,GAAG;AACpC;AAEO,SAAS,gBAAgB,QAAgB,EAAE,QAAgB;IAChE,OAAO;QACL,IAAI,UAAU,UAAU;QACxB,UAAU;QACV,OAAO;QACP,SAAS;QACT,SAAS;QACT,UAAU;IACZ;AACF;AAEO,SAAS,mBAAmB,EAAU,EAAE,IAAY;IACzD,MAAM,QAAsB,EAAE;IAC9B,IAAK,IAAI,IAAI,GAAG,IAAI,mBAAmB,IAAK;QAC1C,MAAM,MAAkB,EAAE;QAC1B,IAAK,IAAI,IAAI,GAAG,IAAI,sBAAsB,IAAK;YAC7C,IAAI,IAAI,CAAC,gBAAgB,GAAG;QAC9B;QACA,MAAM,IAAI,CAAC;IACb;IACA,MAAM,eAAe,MAAM,sBAAsB,IAAI,CAAC;IACtD,MAAM,aAAa,MAAM,mBAAmB,IAAI,CAAC;IACjD,OAAO;QACL;QACA;QACA;QACA,UAAU;QACV,aAAa;QACb;QACA;QACA,wBAAwB,EAAE;QAC1B,aAAa,EAAE;IACjB;AACF;AAGO,SAAS,qBAAqB,OAAoB,EAAE,KAAqB;IAC9E,MAAM,OAAO,KAAK,GAAG,CAAC,MAAM,KAAK,CAAC,QAAQ,EAAE,MAAM,GAAG,CAAC,QAAQ;IAC9D,MAAM,OAAO,KAAK,GAAG,CAAC,MAAM,KAAK,CAAC,QAAQ,EAAE,MAAM,GAAG,CAAC,QAAQ;IAC9D,MAAM,OAAO,KAAK,GAAG,CAAC,MAAM,KAAK,CAAC,QAAQ,EAAE,MAAM,GAAG,CAAC,QAAQ;IAC9D,MAAM,OAAO,KAAK,GAAG,CAAC,MAAM,KAAK,CAAC,QAAQ,EAAE,MAAM,GAAG,CAAC,QAAQ;IAC9D,OAAO,QAAQ,QAAQ,IAAI,QAAQ,QAAQ,QAAQ,IAAI,QAChD,QAAQ,QAAQ,IAAI,QAAQ,QAAQ,QAAQ,IAAI;AACzD","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/contexts/SpreadsheetContext.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { Dispatch, ReactNode, SetStateAction} from 'react';\nimport { createContext, useState, useEffect, useCallback, useRef }\nfrom 'react';\nimport type { SpreadsheetData, SheetData, CellData, CellStyle, CellAddress, SelectionRange, ConditionalFormatRule, PredefinedStyleKey } from '@/types/spreadsheet';\nimport { getSpreadsheet, saveSpreadsheet as dbSaveSpreadsheet } from '@/lib/db';\nimport { useToast } from '@/hooks/use-toast';\nimport { createEmptyCell, getCellId, DEFAULT_COLUMN_WIDTH, DEFAULT_ROW_COUNT, DEFAULT_COLUMN_COUNT, createInitialSheet as createInitialSheetUtil, DEFAULT_ROW_HEIGHT, isCellAddressInRange } from '@/types/spreadsheet';\nimport { v4 as uuidv4 } from 'uuid';\nimport { create, all, type Matrix, type MathNode } from 'mathjs';\n\nconst MAX_UNDO_HISTORY = 20;\nconst MAX_FORMULA_RECURSION_DEPTH = 20;\nconst CUSTOM_FUNCTION_REGEX = /^([A-Z_][A-Z0-9_]*)\\((.*)\\)$/i;\nconst CELL_REF_REGEX = /^[A-Z]+[1-9]\\d*$/i;\nconst RANGE_REF_REGEX = /^([A-Z]+[1-9]\\d*):([A-Z]+[1-9]\\d*)$/i;\nconst NUMERIC_LITERAL_REGEX = /^-?\\d+(\\.\\d+)?$/;\n\n\nfunction parseCellId(id: string): { rowIndex: number; colIndex: number } | null {\n  if (!id || typeof id !== 'string') return null;\n  const match = id.toUpperCase().match(CELL_REF_REGEX);\n  if (!match) return null;\n\n  const lettersMatch = id.toUpperCase().match(/^([A-Z]+)/);\n  const numbersMatch = id.toUpperCase().match(/([1-9]\\d*)$/);\n\n  if (!lettersMatch || !numbersMatch) return null;\n\n  const colStr = lettersMatch[1];\n  const rowStr = numbersMatch[1];\n\n  let colIndex = 0;\n  for (let i = 0; i < colStr.length; i++) {\n    colIndex = colIndex * 26 + (colStr.charCodeAt(i) - 64);\n  }\n  colIndex -= 1;\n\n  const rowIndex = parseInt(rowStr, 10) - 1;\n\n  if (isNaN(colIndex) || isNaN(rowIndex) || colIndex < 0 || rowIndex < 0) return null;\n  return { rowIndex, colIndex };\n}\n\nlet actualEvaluateFormulaLogic: (\n  currentSpreadsheetData: SpreadsheetData,\n  sheetId: string,\n  formulaExpressionWithEquals: string,\n  visitedCellsInCurrentChain: Set<string>\n) => string | number;\n\n\nconst getResolvedCellValue = (\n    spreadsheetData: SpreadsheetData,\n    targetSheetId: string,\n    address: { rowIndex: number; colIndex: number },\n    visitedCellsInCurrentEvalPath: Set<string>\n  ): string | number => {\n    const cellIdForVisited = `${targetSheetId}:${getCellId(address.rowIndex, address.colIndex)}`;\n\n    if (visitedCellsInCurrentEvalPath.has(cellIdForVisited)) {\n      return \"#CIRCREF!\";\n    }\n    if (visitedCellsInCurrentEvalPath.size > MAX_FORMULA_RECURSION_DEPTH) {\n        return \"#CIRCREF!\";\n    }\n\n    const sheet = spreadsheetData.sheets.find(s => s.id === targetSheetId);\n    if (!sheet || address.rowIndex < 0 || address.rowIndex >= sheet.rowCount || address.colIndex < 0 || address.colIndex >= sheet.columnCount) {\n      return \"#REF!\";\n    }\n    const cell = sheet.cells[address.rowIndex]?.[address.colIndex];\n    if (!cell) {\n        return \"#REF!\"; // Should not happen if sheet.cells is always populated\n    }\n    \n    // Handle merged cells: if this cell is part of a merge and not the top-left, get value from top-left\n    if (cell.isMerged && cell.mergeMaster) {\n        if (cell.mergeMaster.rowIndex === address.rowIndex && cell.mergeMaster.colIndex === address.colIndex) {\n            // This IS the master cell, proceed as normal\n        } else {\n            // This is a subordinate merged cell, redirect to master\n            const newVisitedPathRedirect = new Set(visitedCellsInCurrentEvalPath);\n            // Add current cell to path before redirecting to avoid infinite loops if mergeMaster points back\n            newVisitedPathRedirect.add(cellIdForVisited); \n            return getResolvedCellValue(spreadsheetData, targetSheetId, cell.mergeMaster, newVisitedPathRedirect);\n        }\n    }\n\n    const raw = cell.rawValue;\n\n    if (raw === undefined || raw === null || String(raw).trim() === '') {\n        return 0; // Treat truly empty cells as 0 for formula evaluation\n    }\n\n    if (typeof raw === 'number') {\n        return raw;\n    }\n\n    if (typeof raw === 'string') {\n        if (raw.startsWith('=')) {\n            const newVisitedPath = new Set(visitedCellsInCurrentEvalPath);\n            newVisitedPath.add(cellIdForVisited);\n            if (typeof actualEvaluateFormulaLogic === 'function') {\n              return actualEvaluateFormulaLogic(spreadsheetData, targetSheetId, raw, newVisitedPath);\n            } else {\n              console.error(\"actualEvaluateFormulaLogic not yet defined when resolving cell value\");\n              return \"#ERROR!\";\n            }\n        }\n        const num = parseFloat(raw);\n        return isNaN(num) ? raw : num;\n    }\n    return String(raw);\n};\n\nconst resolveRangeToArray = (\n  rangeStr: string,\n  spreadsheetData: SpreadsheetData,\n  currentSheetId: string,\n  visitedCells: Set<string>\n): (string | number)[][] | string => {\n  const rangeMatch = rangeStr.toUpperCase().match(RANGE_REF_REGEX);\n  if (!rangeMatch) return \"#NAME?\"; // Excel often uses #NAME? for malformed range strings in functions\n\n  const startCellStr = rangeMatch[1];\n  const endCellStr = rangeMatch[2];\n\n  const startCoord = parseCellId(startCellStr);\n  const endCoord = parseCellId(endCellStr);\n  const currentSheet = spreadsheetData.sheets.find(s => s.id === currentSheetId);\n\n  if (!startCoord || !endCoord || !currentSheet) {\n    return \"#REF!\";\n  }\n\n  const minRow = Math.min(startCoord.rowIndex, endCoord.rowIndex);\n  const maxRow = Math.max(startCoord.rowIndex, endCoord.rowIndex);\n  const minCol = Math.min(startCoord.colIndex, endCoord.colIndex);\n  const maxCol = Math.max(startCoord.colIndex, endCoord.colIndex);\n\n  if (minRow < 0 || maxRow >= currentSheet.rowCount || minCol < 0 || maxCol >= currentSheet.columnCount) {\n    return \"#REF!\";\n  }\n\n  const result: (string | number)[][] = [];\n  for (let r = minRow; r <= maxRow; r++) {\n    const rowValues: (string | number)[] = [];\n    for (let c = minCol; c <= maxCol; c++) {\n      const cellVal = getResolvedCellValue(spreadsheetData, currentSheetId, { rowIndex: r, colIndex: c }, new Set(visitedCells));\n      rowValues.push(cellVal);\n    }\n    result.push(rowValues);\n  }\n  return result;\n};\n\nfunction parseCustomFunctionArgs(argsString: string): string[] {\n  if (argsString.trim() === \"\") return [];\n  let balance = 0;\n  let currentArg = \"\";\n  const args: string[] = [];\n  for (let i = 0; i < argsString.length; i++) {\n    const char = argsString[i];\n    if (char === '(') balance++;\n    else if (char === ')') balance--;\n\n    if (char === ',' && balance === 0) {\n      args.push(currentArg.trim());\n      currentArg = \"\";\n    } else {\n      currentArg += char;\n    }\n  }\n  args.push(currentArg.trim());\n  return args;\n}\n\nconst processAggregateArg = (\n    argString: string,\n    spreadsheetData: SpreadsheetData,\n    sheetId: string,\n    visitedCells: Set<string>\n  ): any | string => {\n\n    const trimmedArg = argString.trim();\n\n    if (NUMERIC_LITERAL_REGEX.test(trimmedArg)) {\n      return parseFloat(trimmedArg);\n    }\n    if (CELL_REF_REGEX.test(trimmedArg)) {\n      const coord = parseCellId(trimmedArg);\n      return coord ? getResolvedCellValue(spreadsheetData, sheetId, coord, new Set(visitedCells)) : \"#NAME?\";\n    }\n    if (RANGE_REF_REGEX.test(trimmedArg)) {\n      return resolveRangeToArray(trimmedArg, spreadsheetData, sheetId, new Set(visitedCells));\n    }\n    \n    // If it looks like an expression (contains operators or parentheses), evaluate it recursively\n    if (trimmedArg.includes('+') || trimmedArg.includes('-') || trimmedArg.includes('*') || trimmedArg.includes('/') || trimmedArg.includes('(') ) {\n       // Ensure we pass a *new* Set for visitedCells for this independent sub-evaluation leg\n       const subExpressionResult = actualEvaluateFormulaLogic(spreadsheetData, sheetId, '=' + trimmedArg, new Set(visitedCells));\n       return subExpressionResult;\n    }\n    \n    // If it's quoted text, return the text without quotes for functions.\n    // Math.js will handle unquoted text as symbols.\n    if ((trimmedArg.startsWith('\"') && trimmedArg.endsWith('\"')) || (trimmedArg.startsWith(\"'\") && trimmedArg.endsWith(\"'\"))) {\n      return trimmedArg.substring(1, trimmedArg.length - 1);\n    }\n\n    return trimmedArg; // Treat as potential symbol/text if not caught by other cases\n  };\n\n\nconst aggregateHelper = (\n  argValues: any[], // Already processed by processAggregateArg\n  processFn: (numbers: number[]) => number | string,\n  isCount: boolean = false\n): number | string => {\n  const flatValues = argValues.flat(Infinity);\n  \n  let firstError: string | null = null;\n  for (const val of flatValues) {\n    if (typeof val === 'string' && val.startsWith('#')) {\n      firstError = val;\n      break;\n    }\n  }\n  if (firstError) return firstError;\n\n  const numbers = flatValues.filter(val => {\n    if (typeof val === 'number' && isFinite(val)) return true;\n    // For COUNT, we don't want to parse numeric strings if they weren't already numbers.\n    // For SUM/AVERAGE/etc., Excel does parse numeric strings.\n    if (!isCount && typeof val === 'string' && NUMERIC_LITERAL_REGEX.test(val)) return true; \n    return false;\n  }).map(val => typeof val === 'number' ? val : parseFloat(val as string));\n\n  return processFn(numbers);\n};\n\nactualEvaluateFormulaLogic = (\n  currentSpreadsheetData: SpreadsheetData,\n  sheetId: string,\n  formulaExpressionWithEquals: string,\n  visitedCellsInCurrentChain: Set<string> \n): string | number => {\n  if (visitedCellsInCurrentChain.size > MAX_FORMULA_RECURSION_DEPTH) {\n    return \"#CIRCREF!\";\n  }\n\n  const currentSheet = currentSpreadsheetData.sheets.find(s => s.id === sheetId);\n  if (!currentSheet) return \"#REF!\";\n\n  const cleanExpression = formulaExpressionWithEquals.startsWith('=')\n    ? formulaExpressionWithEquals.substring(1).trim()\n    : formulaExpressionWithEquals.trim();\n\n  const topLevelFunctionMatch = cleanExpression.match(CUSTOM_FUNCTION_REGEX);\n\n  if (topLevelFunctionMatch) {\n    const functionName = topLevelFunctionMatch[1].toUpperCase();\n    const argsString = topLevelFunctionMatch[2];\n    const rawArgs = parseCustomFunctionArgs(argsString);\n\n    const resolvedArgValues = rawArgs.map(rawArg => \n        processAggregateArg(rawArg, currentSpreadsheetData, sheetId, new Set(visitedCellsInCurrentChain))\n    );\n    \n    // Check for errors in resolved arguments before passing to helper\n    for (const val of resolvedArgValues.flat(Infinity)) {\n        if (typeof val === 'string' && val.startsWith('#')) {\n            return val;\n        }\n    }\n\n    switch (functionName) {\n      case 'SUM':\n        return aggregateHelper(resolvedArgValues, nums => nums.reduce((acc, val) => acc + val, 0));\n      case 'AVERAGE':\n        return aggregateHelper(resolvedArgValues, nums => nums.length === 0 ? \"#DIV/0!\" : nums.reduce((acc, val) => acc + val, 0) / nums.length);\n      case 'COUNT':\n        return aggregateHelper(resolvedArgValues, nums => nums.length, true); // Pass true for isCount\n      case 'MAX':\n        return aggregateHelper(resolvedArgValues, nums => nums.length === 0 ? 0 : Math.max(...nums));\n      case 'MIN':\n        return aggregateHelper(resolvedArgValues, nums => nums.length === 0 ? 0 : Math.min(...nums));\n      case 'IF': {\n        if (resolvedArgValues.length < 2) return \"#N/A\"; // Not enough arguments\n        \n        let conditionResult: boolean;\n        const conditionValue = resolvedArgValues[0];\n\n        if (typeof conditionValue === 'string' && conditionValue.startsWith('#')) return conditionValue; // Propagate error from condition\n        \n        if (typeof conditionValue === 'number') conditionResult = conditionValue !== 0;\n        else if (typeof conditionValue === 'boolean') conditionResult = conditionValue;\n        else { // Try to interpret strings \"TRUE\" or \"FALSE\"\n            const upperCond = String(conditionValue).toUpperCase();\n            if (upperCond === \"TRUE\") conditionResult = true;\n            else if (upperCond === \"FALSE\") conditionResult = false;\n            else if (String(conditionValue).trim() === \"\") conditionResult = false; // Empty string condition is false\n            else return \"#VALUE!\"; // Cannot interpret condition\n        }\n        \n        const valueIfTrue = resolvedArgValues[1];\n        if (conditionResult) {\n            if (typeof valueIfTrue === 'string' && valueIfTrue.startsWith('#')) return valueIfTrue; // Propagate error\n            return valueIfTrue;\n        } else { // Condition is false\n            if (resolvedArgValues.length > 2) {\n                const valueIfFalse = resolvedArgValues[2];\n                if (typeof valueIfFalse === 'string' && valueIfFalse.startsWith('#')) return valueIfFalse; // Propagate error\n                return valueIfFalse;\n            }\n            return false; // Default Excel behavior if value_if_false is omitted\n        }\n      }\n    }\n  }\n\n  const mathInstance = create(all);\n  const scope: Record<string, any> = {};\n  \n  // Regex to find standalone cell references, not inside A1:B2 or part of function names\n  const cellRefRegexForScope = /(?<![A-Z0-9:])([A-Z]+[1-9]\\d*)(?![A-Z0-9:.(])/gi;\n  const uniqueCellRefs = new Set<string>();\n  let match;\n  while((match = cellRefRegexForScope.exec(cleanExpression)) !== null) {\n      uniqueCellRefs.add(match[1].toUpperCase());\n  }\n\n  for (const cellRef of uniqueCellRefs) {\n      const coord = parseCellId(cellRef);\n      if (coord) {\n          const val = getResolvedCellValue(currentSpreadsheetData, sheetId, coord, new Set(visitedCellsInCurrentChain));\n          scope[cellRef] = val; \n          if (typeof val === 'string' && val.startsWith('#')) { \n              return val;\n          }\n      } else {\n         // If it looked like a cell ref but parseCellId failed, it could be a named range or bad syntax\n         // For now, this path leads to #NAME? from math.js if 'cellRef' is used in expression\n      }\n  }\n  \n  const customFunctionsForMathJS: Record<string, (...args: any[]) => any> = {\n    SUM: (...args: any[]): number | string => {\n        const processedArgs = args.map(arg => {\n            if (arg && typeof arg === 'object' && (arg as any).isMatrix === true) return (arg as Matrix).toArray();\n            return arg;\n        });\n        return aggregateHelper(processedArgs, nums => nums.reduce((acc, val) => acc + val, 0));\n    },\n    AVERAGE: (...args: any[]): number | string => {\n        const processedArgs = args.map(arg => (arg && typeof arg === 'object' && (arg as any).isMatrix === true) ? (arg as Matrix).toArray() : arg);\n        return aggregateHelper(processedArgs, nums => nums.length === 0 ? \"#DIV/0!\" : nums.reduce((acc, val) => acc + val, 0) / nums.length);\n    },\n    COUNT: (...args: any[]): number | string => {\n        const processedArgs = args.map(arg => (arg && typeof arg === 'object' && (arg as any).isMatrix === true) ? (arg as Matrix).toArray() : arg);\n        return aggregateHelper(processedArgs, nums => nums.length, true);\n    },\n    MAX: (...args: any[]): number | string => {\n        const processedArgs = args.map(arg => (arg && typeof arg === 'object' && (arg as any).isMatrix === true) ? (arg as Matrix).toArray() : arg);\n        return aggregateHelper(processedArgs, nums => nums.length === 0 ? 0 : Math.max(...nums));\n    },\n    MIN: (...args: any[]): number | string => {\n        const processedArgs = args.map(arg => (arg && typeof arg === 'object' && (arg as any).isMatrix === true) ? (arg as Matrix).toArray() : arg);\n        return aggregateHelper(processedArgs, nums => nums.length === 0 ? 0 : Math.min(...nums));\n    },\n     IF: (condition: any, value_if_true: any, value_if_false?: any): any => {\n        let condResult: boolean;\n        if (typeof condition === 'string' && condition.startsWith('#')) return condition;\n        if (typeof condition === 'number') condResult = condition !== 0;\n        else if (typeof condition === 'boolean') condResult = condition;\n        else {\n            const upperCond = String(condition).toUpperCase();\n            if (upperCond === \"TRUE\") condResult = true;\n            else if (upperCond === \"FALSE\") condResult = false;\n            else if (String(condition).trim() === \"\") condResult = false;\n            else return \"#VALUE!\";\n        }\n\n        const trueValResolved = (value_if_true && typeof value_if_true === 'object' && (value_if_true as any)?.isMatrix === true) ? (value_if_true as Matrix).toArray().flat(Infinity)[0] : value_if_true;\n        if (typeof trueValResolved === 'string' && trueValResolved.startsWith('#')) return trueValResolved;\n        \n        let falseValResolved = value_if_false;\n        if (value_if_false !== undefined && typeof value_if_false === 'object' && (value_if_false as any)?.isMatrix === true) {\n            falseValResolved = (value_if_false as Matrix).toArray().flat(Infinity)[0];\n        }\n        if (typeof falseValResolved === 'string' && falseValResolved.startsWith('#')) return falseValResolved;\n\n        if (condResult) return trueValResolved;\n        else return value_if_false === undefined ? false : falseValResolved;\n    }\n  };\n  mathInstance.import(customFunctionsForMathJS, { override: true });\n\n  try {\n    const parsedNode: MathNode = mathInstance.parse(cleanExpression);\n    let evalResult = parsedNode.evaluate(scope);\n\n    if (evalResult === undefined || evalResult === null) return 0; // Default for undefined math.js results\n    if (typeof evalResult === 'number') return isFinite(evalResult) ? evalResult : \"#NUM!\";\n    if (typeof evalResult === 'string' && evalResult.startsWith('#')) return evalResult; // Propagate our errors\n    if ((evalResult as any)?.isMatrix === true) { // Handle matrix result from math.js (e.g. from array ops)\n        const matrixData = (evalResult as Matrix).toArray().flat(Infinity);\n        if (matrixData.length === 1) { // If matrix is 1x1, return its single value\n            const singleValue = matrixData[0];\n             if (typeof singleValue === 'number' && isFinite(singleValue)) return singleValue;\n             if (typeof singleValue === 'string' && singleValue.startsWith('#')) return singleValue;\n             return String(singleValue); // Convert to string if not number/error\n        }\n        return \"#VALUE!\"; // Cannot display a multi-value matrix in a single cell\n    }\n    // For other object types math.js might return (like units, fractions), try valueOf()\n    if (evalResult && typeof evalResult.valueOf === 'function' && typeof evalResult !== 'function') {\n        const primitiveResult = evalResult.valueOf();\n        if (typeof primitiveResult === 'number' && isFinite(primitiveResult)) return primitiveResult;\n        if (primitiveResult === undefined || primitiveResult === null) return 0;\n        return String(primitiveResult);\n    }\n    return String(evalResult); // Fallback: convert to string\n  } catch (error: any) {\n    const msgLower = String(error?.message || '').toLowerCase();\n    if (msgLower.includes(\"undefined symbol\") || msgLower.includes(\"unknown function\")) return \"#NAME?\";\n    if (msgLower.includes(\"division by zero\")) return \"#DIV/0!\";\n    if (msgLower.includes(\"value expected\") || msgLower.includes(\"typeerror\") || msgLower.includes(\"cannot convert\") || msgLower.includes(\"unexpected type of argument\") || msgLower.includes(\"dimension mismatch\")) return \"#VALUE!\";\n    if (msgLower.includes(\"incorrect number of arguments\")) return \"#N/A\";\n    return \"#ERROR!\";\n  }\n};\n\nfunction reevaluateSheetFormulas (spreadsheetData: SpreadsheetData, sheetToReevaluateId: string): SpreadsheetData {\n    const updatedSpreadsheet = JSON.parse(JSON.stringify(spreadsheetData)) as SpreadsheetData;\n    const sheetToUpdate = updatedSpreadsheet.sheets.find(s => s.id === sheetToReevaluateId);\n\n    if (sheetToUpdate) {\n      for (let r = 0; r < sheetToUpdate.rowCount; r++) {\n        if (!sheetToUpdate.cells[r]) sheetToUpdate.cells[r] = Array.from({ length: sheetToUpdate.columnCount }, (_, c) => createEmptyCell(r, c));\n        for (let c = 0; c < sheetToUpdate.columnCount; c++) {\n           if (!sheetToUpdate.cells[r][c]) sheetToUpdate.cells[r][c] = createEmptyCell(r,c);\n\n           const cell = sheetToUpdate.cells[r][c];\n           if (typeof cell.rawValue === 'string' && cell.rawValue.startsWith('=')) {\n                cell.formula = cell.rawValue;\n                // Pass a clone of the *current state* of updatedSpreadsheet for this specific eval\n                const spreadsheetForThisSpecificEval = JSON.parse(JSON.stringify(updatedSpreadsheet)) as SpreadsheetData;\n                cell.value = actualEvaluateFormulaLogic(spreadsheetForThisSpecificEval, sheetToReevaluateId, cell.formula, new Set());\n           } else { \n             cell.formula = undefined;\n             if (cell.rawValue === undefined || cell.rawValue === null || String(cell.rawValue).trim() === '') {\n                 cell.value = ''; \n             } else if (typeof cell.rawValue === 'number') {\n                 cell.value = cell.rawValue;\n             } else if (typeof cell.rawValue === 'string') {\n                 const num = parseFloat(cell.rawValue);\n                 cell.value = isNaN(num) ? cell.rawValue : num;\n             } else {\n                 cell.value = String(cell.rawValue);\n             }\n           }\n        }\n      }\n    }\n    return updatedSpreadsheet;\n  };\n\nconst getSheetFromData = (spreadsheetData: SpreadsheetData | null, sheetId: string | undefined): SheetData | null => {\n  if (!spreadsheetData || !sheetId) return null;\n  return spreadsheetData.sheets.find(s => s.id === sheetId) || null;\n};\n\nexport interface FormulaBarApi {\n  appendText: (text: string) => void;\n  replaceText: (oldTextSubString: string, newText: string) => void;\n  setText: (text: string) => void;\n  focus: () => void;\n  getValue: () => string;\n}\n\nexport interface SpreadsheetContextType {\n  spreadsheet: SpreadsheetData | null;\n  setSpreadsheet: Dispatch<SetStateAction<SpreadsheetData | null>>;\n  isLoading: boolean;\n  loadSpreadsheet: (id: string) => Promise<void>;\n  saveSpreadsheet: () => Promise<void>;\n  updateCell: (sheetId: string, rowIndex: number, colIndex: number, newCellData: Partial<Pick<CellData, 'rawValue' | 'style'>>) => void;\n  activeCell: CellAddress | null;\n  selectionRange: SelectionRange | null;\n  setActiveCellAndSelection: (\n    cellAddress: CellAddress | null,\n    isShiftKey: boolean,\n    isDrag: boolean,\n  ) => void;\n  updateSelectedCellStyle: (styleChanges: Partial<CellStyle>) => void;\n  formatSelectionAsTable: () => void;\n  insertRow: (sheetId: string, rowIndex: number) => void;\n  deleteRow: (sheetId: string, rowIndex: number) => void;\n  insertColumn: (sheetId: string, colIndex: number) => void;\n  deleteColumn: (sheetId: string, colIndex: number) => void;\n  appendRow: (sheetId: string) => void;\n  appendColumn: (sheetId: string) => void;\n  undo: () => void;\n  redo: () => void;\n  canUndo: boolean;\n  canRedo: boolean;\n  evaluateFormula: (sheetId: string, formulaWithEquals: string) => string | number;\n  copySelectionToClipboard: () => Promise<void>;\n  deleteSelectionContents: () => void;\n  updateMultipleCellsRawValue: (newValue: string | number) => void;\n  isActivelyEditingFormula: boolean;\n  setIsActivelyEditingFormula: (isEditing: boolean) => void;\n  formulaBarApiRef: React.MutableRefObject<FormulaBarApi | null>;\n  updateColumnWidth: (sheetId: string, colIndex: number, newWidth: number) => void;\n  updateRowHeight: (sheetId: string, rowIndex: number, newHeight: number) => void;\n  addConditionalFormatRule: (sheetId: string, rule: ConditionalFormatRule) => void;\n  removeConditionalFormatRule: (sheetId: string, ruleId: string) => void;\n  updateConditionalFormatRule: (sheetId: string, rule: ConditionalFormatRule) => void;\n  mergeSelection: () => void;\n  unmergeSelection: () => void;\n  findInSheet: (searchTerm: string, findOptions: { matchCase: boolean; entireCell: boolean; searchFormulas: boolean; sheetId: string; from: CellAddress | null }) => CellAddress | null;\n}\n\nexport const SpreadsheetContext = createContext<SpreadsheetContextType | undefined>(undefined);\n\nexport function SpreadsheetProvider({ children }: { children: ReactNode }) {\n  const [internalSpreadsheetState, setInternalSpreadsheetState] = useState<SpreadsheetData | null>(null);\n  const internalSpreadsheetRef = useRef<SpreadsheetData | null>(null);\n\n  useEffect(() => {\n    internalSpreadsheetRef.current = internalSpreadsheetState;\n  }, [internalSpreadsheetState]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n\n  const [activeCell, setActiveCellState] = useState<CellAddress | null>(null);\n  const [selectionRange, setSelectionRangeState] = useState<SelectionRange | null>(null);\n  const [lastFoundCell, setLastFoundCell] = useState<CellAddress | null>(null);\n\n\n  const [undoStack, setUndoStack] = useState<SpreadsheetData[]>([]);\n  const [redoStack, setRedoStack] = useState<SpreadsheetData[]>([]);\n\n  const [isActivelyEditingFormula, setIsActivelyEditingFormula] = useState<boolean>(false);\n  const formulaBarApiRef = useRef<FormulaBarApi | null>(null);\n\n\n  const setSpreadsheetWithHistory = useCallback((\n    updater: SetStateAction<SpreadsheetData | null>,\n    actionSource?: 'undo' | 'redo' | 'internal_no_history' | 'save' | 'user_action'\n    ) => {\n    setInternalSpreadsheetState(current => {\n      const currentDeepCloneForHistory = current ? JSON.parse(JSON.stringify(current)) as SpreadsheetData : null;\n\n      let newSpreadsheetRaw: SpreadsheetData | null;\n      if (typeof updater === 'function') {\n        newSpreadsheetRaw = updater(currentDeepCloneForHistory ? JSON.parse(JSON.stringify(currentDeepCloneForHistory)) : null );\n      } else {\n        newSpreadsheetRaw = updater;\n      }\n      \n      let newSpreadsheet = newSpreadsheetRaw ? JSON.parse(JSON.stringify(newSpreadsheetRaw)) as SpreadsheetData : null;\n\n      if (newSpreadsheet && actionSource !== 'internal_no_history' && actionSource !== 'save') { // Don't re-eval during load/save\n          let reevaluatedSpreadsheet = newSpreadsheet;\n          newSpreadsheet.sheets.forEach(sheet => {\n            reevaluatedSpreadsheet = reevaluateSheetFormulas(reevaluatedSpreadsheet, sheet.id);\n          });\n          newSpreadsheet = reevaluatedSpreadsheet;\n      }\n      \n      if (actionSource !== 'undo' && actionSource !== 'redo' &&\n          actionSource !== 'internal_no_history' && actionSource !== 'save' && \n          currentDeepCloneForHistory && newSpreadsheet &&\n          JSON.stringify(currentDeepCloneForHistory) !== JSON.stringify(newSpreadsheet)) {\n        setUndoStack(prev => [...prev.slice(-MAX_UNDO_HISTORY + 1), currentDeepCloneForHistory]);\n        if (actionSource !== 'redo') { // Don't clear redo stack if the action was an undo itself that gets redone\n            setRedoStack([]);\n        }\n      }\n      internalSpreadsheetRef.current = newSpreadsheet;\n      return newSpreadsheet;\n    });\n  }, []);\n\n  const exposedSetSpreadsheet = useCallback((value: SetStateAction<SpreadsheetData | null>) => {\n     setSpreadsheetWithHistory(value, 'user_action');\n  }, [setSpreadsheetWithHistory]);\n\n\n  const evaluateFormulaContext = useCallback((sheetId: string, formulaExpressionWithEquals: string): string | number => {\n    if (!internalSpreadsheetRef.current) {\n      return \"#REF!\";\n    }\n    const spreadsheetClone = JSON.parse(JSON.stringify(internalSpreadsheetRef.current)) as SpreadsheetData;\n    return actualEvaluateFormulaLogic(spreadsheetClone, sheetId, formulaExpressionWithEquals, new Set());\n  }, []);\n\n\n  const loadSpreadsheet = useCallback(async (id: string) => {\n    setIsLoading(true);\n    setActiveCellState(null);\n    setSelectionRangeState(null);\n    setUndoStack([]);\n    setRedoStack([]);\n    setLastFoundCell(null);\n\n    const result = await getSpreadsheet(id);\n    if (result.success && result.data) {\n      let loadedSpreadsheet = JSON.parse(JSON.stringify(result.data)) as SpreadsheetData;\n\n      loadedSpreadsheet.sheets = loadedSpreadsheet.sheets.map(sheet_from_db => {\n        const rowCount = sheet_from_db.rowCount > 0 ? sheet_from_db.rowCount : DEFAULT_ROW_COUNT;\n        const columnCount = sheet_from_db.columnCount > 0 ? sheet_from_db.columnCount : DEFAULT_COLUMN_COUNT;\n\n        let cellsFromDb = sheet_from_db.cells || [];\n        const newCells = Array.from({ length: rowCount }, (_, r) =>\n            Array.from({ length: columnCount }, (_, c) => {\n                const existingCellData = cellsFromDb[r]?.[c];\n                const baseCell = createEmptyCell(r,c); \n                const cellWithData = existingCellData ? {...baseCell, ...existingCellData, id: getCellId(r,c)} : baseCell;\n                // Ensure colSpan/rowSpan defaults if not present from DB\n                cellWithData.colSpan = cellWithData.colSpan || 1;\n                cellWithData.rowSpan = cellWithData.rowSpan || 1;\n                cellWithData.isMerged = cellWithData.isMerged || false;\n                delete cellWithData.mergeMaster; // Clear old mergeMaster, will be rebuilt if needed\n                return cellWithData;\n            })\n        );\n        \n        const currentProcessingSheet: SheetData = {\n          ...sheet_from_db,\n          cells: newCells,\n          rowCount,\n          columnCount,\n          columnWidths: (sheet_from_db.columnWidths && sheet_from_db.columnWidths.length === columnCount)\n            ? sheet_from_db.columnWidths\n            : Array(columnCount).fill(DEFAULT_COLUMN_WIDTH),\n          rowHeights: (sheet_from_db.rowHeights && sheet_from_db.rowHeights.length === rowCount)\n            ? sheet_from_db.rowHeights\n            : Array(rowCount).fill(DEFAULT_ROW_HEIGHT),\n          conditionalFormatRules: sheet_from_db.conditionalFormatRules || [],\n          mergedCells: sheet_from_db.mergedCells || [],\n        };\n\n        // Re-apply merge properties to cells based on mergedCells array\n        (currentProcessingSheet.mergedCells || []).forEach(mergeRange => {\n            const { start: mergeStart, end: mergeEnd } = mergeRange;\n            const masterRow = Math.min(mergeStart.rowIndex, mergeEnd.rowIndex);\n            const masterCol = Math.min(mergeStart.colIndex, mergeEnd.colIndex);\n            const numRows = Math.abs(mergeEnd.rowIndex - mergeStart.rowIndex) + 1;\n            const numCols = Math.abs(mergeEnd.colIndex - mergeStart.colIndex) + 1;\n\n            if(currentProcessingSheet.cells[masterRow]?.[masterCol]) {\n                currentProcessingSheet.cells[masterRow][masterCol].colSpan = numCols;\n                currentProcessingSheet.cells[masterRow][masterCol].rowSpan = numRows;\n                currentProcessingSheet.cells[masterRow][masterCol].isMerged = false; // Master is not \"isMerged\" in its own right\n\n                for (let r = masterRow; r < masterRow + numRows; r++) {\n                    for (let c = masterCol; c < masterCol + numCols; c++) {\n                        if (r === masterRow && c === masterCol) continue;\n                        if (currentProcessingSheet.cells[r]?.[c]) {\n                            currentProcessingSheet.cells[r][c].isMerged = true;\n                            currentProcessingSheet.cells[r][c].mergeMaster = { sheetId: currentProcessingSheet.id, rowIndex: masterRow, colIndex: masterCol };\n                            currentProcessingSheet.cells[r][c].rawValue = ''; // Clear subordinate cells\n                            currentProcessingSheet.cells[r][c].value = '';\n                            currentProcessingSheet.cells[r][c].formula = undefined;\n                            currentProcessingSheet.cells[r][c].colSpan = 1; // Reset subordinate span\n                            currentProcessingSheet.cells[r][c].rowSpan = 1; // Reset subordinate span\n                        }\n                    }\n                }\n            }\n        });\n        return currentProcessingSheet;\n      });\n      \n      // After all sheets are structured, perform formula evaluation\n      let spreadsheetAfterInitialEval = loadedSpreadsheet;\n      loadedSpreadsheet.sheets.forEach(sheet => {\n        spreadsheetAfterInitialEval = reevaluateSheetFormulas(spreadsheetAfterInitialEval, sheet.id);\n      });\n      \n      setSpreadsheetWithHistory(() => spreadsheetAfterInitialEval, 'internal_no_history');\n    } else {\n      setSpreadsheetWithHistory(() => null, 'internal_no_history');\n      setTimeout(() => {\n        toast({ title: \"Error\", description: `Failed to load spreadsheet: ${result.error || 'Not found'}.`, variant: \"destructive\" });\n      }, 0);\n    }\n    setIsLoading(false);\n  }, [toast, setSpreadsheetWithHistory]);\n\n\n  const saveSpreadsheet = useCallback(async () => {\n    if (!internalSpreadsheetRef.current) {\n      setTimeout(() => {\n        toast({ title: \"Error\", description: \"No spreadsheet data to save.\", variant: \"destructive\" });\n      },0);\n      return;\n    }\n    setIsLoading(true);\n    const spreadsheetToSave = JSON.parse(JSON.stringify(internalSpreadsheetRef.current)) as SpreadsheetData;\n    spreadsheetToSave.updatedAt = Date.now();\n\n    const result = await dbSaveSpreadsheet(spreadsheetToSave);\n    if (result.success) {\n      setSpreadsheetWithHistory(prev => prev ? {...prev, updatedAt: spreadsheetToSave.updatedAt} : null, 'save');\n      setTimeout(() => {\n        toast({ title: \"Success\", description: \"Spreadsheet saved locally.\" });\n      },0);\n    } else {\n      setTimeout(() => {\n        toast({ title: \"Error\", description: `Failed to save spreadsheet: ${result.error}.`, variant: \"destructive\" });\n      },0);\n    }\n    setIsLoading(false);\n  }, [toast, setSpreadsheetWithHistory]);\n\n\n  const updateCell = useCallback((sheetId: string, rowIndex: number, colIndex: number, newCellData: Partial<Pick<CellData, 'rawValue' | 'style'>>) => {\n    setSpreadsheetWithHistory(prevSpreadsheet => {\n      if (!prevSpreadsheet) return null;\n      let spreadsheetCopy = JSON.parse(JSON.stringify(prevSpreadsheet)) as SpreadsheetData;\n      const sheetToUpdate = spreadsheetCopy.sheets.find(sheet => sheet.id === sheetId);\n\n      if (!sheetToUpdate || rowIndex < 0 || rowIndex >= sheetToUpdate.rowCount || colIndex < 0 || colIndex >= sheetToUpdate.columnCount) {\n         console.error(\"updateCell called with invalid address or sheet not found:\", sheetId, rowIndex, colIndex);\n         return prevSpreadsheet;\n      }\n      if (!sheetToUpdate.cells[rowIndex]) sheetToUpdate.cells[rowIndex] = [];\n      if (!sheetToUpdate.cells[rowIndex][colIndex]) sheetToUpdate.cells[rowIndex][colIndex] = createEmptyCell(rowIndex, colIndex);\n      \n      let targetRow = rowIndex;\n      let targetCol = colIndex;\n      const currentCell = sheetToUpdate.cells[rowIndex][colIndex];\n      if(currentCell.isMerged && currentCell.mergeMaster) {\n        targetRow = currentCell.mergeMaster.rowIndex;\n        targetCol = currentCell.mergeMaster.colIndex;\n      }\n      const cellToUpdate = sheetToUpdate.cells[targetRow][targetCol];\n\n\n      if (newCellData.rawValue !== undefined) {\n        cellToUpdate.rawValue = newCellData.rawValue;\n      }\n      if (newCellData.style) {\n        cellToUpdate.style = {...(cellToUpdate.style || {}), ...newCellData.style};\n      }\n      \n      spreadsheetCopy.updatedAt = Date.now();\n      return spreadsheetCopy;\n    }, 'user_action');\n  }, [setSpreadsheetWithHistory]);\n\n\n  const setActiveCellAndSelection = useCallback((\n    newCellAddress: CellAddress | null,\n    isShiftKey: boolean,\n    isDrag: boolean\n  ) => {\n    if (isActivelyEditingFormula) {\n        return;\n    }\n    \n    let finalActiveCell = newCellAddress;\n    let finalSelectionRange = newCellAddress ? { start: newCellAddress, end: newCellAddress } : null;\n\n    if (newCellAddress && internalSpreadsheetRef.current) {\n        const sheet = getSheetFromData(internalSpreadsheetRef.current, newCellAddress.sheetId);\n        if (sheet) {\n            const cellData = sheet.cells[newCellAddress.rowIndex]?.[newCellAddress.colIndex];\n            let masterAddress = newCellAddress;\n            if (cellData?.isMerged && cellData.mergeMaster) {\n                masterAddress = cellData.mergeMaster;\n            }\n            \n            const mergedRange = (sheet.mergedCells || []).find(mr => \n                isCellAddressInRange(masterAddress, mr)\n            );\n\n            if (mergedRange) {\n                finalActiveCell = {sheetId: sheet.id, rowIndex: mergedRange.start.rowIndex, colIndex: mergedRange.start.colIndex}; // Always top-left of merge\n                finalSelectionRange = {start: mergedRange.start, end: mergedRange.end};\n            } else { // Not a merged cell or master of one\n                 setActiveCellState(currentActiveCell => {\n                    if (newCellAddress === null) {\n                        setSelectionRangeState(null);\n                        return null;\n                    }\n                    const nextActiveCellForLogic = isDrag ? (currentActiveCell || newCellAddress) : newCellAddress;\n                    setSelectionRangeState(currentSelRange => {\n                        let startAddress = newCellAddress;\n                        let endAddress = newCellAddress;\n                        if (isDrag && currentSelRange?.start && currentSelRange.start.sheetId === newCellAddress.sheetId) {\n                            startAddress = currentSelRange.start;\n                            endAddress = newCellAddress;\n                        } else if (isShiftKey && activeCell && activeCell.sheetId === newCellAddress.sheetId) {\n                            startAddress = activeCell;\n                            endAddress = newCellAddress;\n                        }\n                        return { start: startAddress, end: endAddress };\n                    });\n                    return nextActiveCellForLogic;\n                });\n                return; // Handled by old logic\n            }\n        }\n    }\n    setActiveCellState(finalActiveCell);\n    setSelectionRangeState(finalSelectionRange);\n\n  }, [isActivelyEditingFormula, activeCell, selectionRange]);\n\n\n  const updateSelectedCellStyle = useCallback((styleChanges: Partial<CellStyle>) => {\n    if (!selectionRange || !internalSpreadsheetRef.current) return;\n\n    setSpreadsheetWithHistory(prevSpreadsheet => {\n      if (!prevSpreadsheet) return null;\n      const spreadsheetCopy = JSON.parse(JSON.stringify(prevSpreadsheet)) as SpreadsheetData;\n      const {start, end} = selectionRange;\n      const sheetIdToUpdate = start.sheetId;\n      const sheetToUpdate = spreadsheetCopy.sheets.find(sheet => sheet.id === sheetIdToUpdate);\n      if (!sheetToUpdate) return prevSpreadsheet;\n\n      const minRow = Math.min(start.rowIndex, end.rowIndex);\n      const maxRow = Math.max(start.rowIndex, end.rowIndex);\n      const minCol = Math.min(start.colIndex, end.colIndex);\n      const maxCol = Math.max(start.colIndex, end.colIndex);\n\n      for (let rIdx = minRow; rIdx <= maxRow; rIdx++) {\n        for (let cIdx = minCol; cIdx <= maxCol; cIdx++) {\n           if (!sheetToUpdate.cells[rIdx]) sheetToUpdate.cells[rIdx] = [];\n           if (!sheetToUpdate.cells[rIdx][cIdx]) sheetToUpdate.cells[rIdx][cIdx] = createEmptyCell(rIdx, cIdx);\n           \n           let targetCell = sheetToUpdate.cells[rIdx][cIdx];\n           // If applying to a merged cell, apply to its master\n           if(targetCell.isMerged && targetCell.mergeMaster) {\n              targetCell = sheetToUpdate.cells[targetCell.mergeMaster.rowIndex][targetCell.mergeMaster.colIndex];\n           }\n           targetCell.style = { ...(targetCell.style || {}), ...styleChanges };\n        }\n      }\n      spreadsheetCopy.updatedAt = Date.now();\n      return spreadsheetCopy;\n    }, 'user_action');\n  }, [selectionRange, setSpreadsheetWithHistory]);\n\n\n  const formatSelectionAsTable = useCallback(() => {\n    if (!selectionRange || !internalSpreadsheetRef.current) return;\n\n    setSpreadsheetWithHistory(prevSpreadsheet => {\n      if (!prevSpreadsheet) return null;\n      const spreadsheetCopy = JSON.parse(JSON.stringify(prevSpreadsheet)) as SpreadsheetData;\n      const { start, end } = selectionRange;\n      const sheetIdToUpdate = start.sheetId;\n      const sheetToUpdate = spreadsheetCopy.sheets.find(sheet => sheet.id === sheetIdToUpdate);\n      if (!sheetToUpdate) return prevSpreadsheet;\n\n      const minRow = Math.min(start.rowIndex, end.rowIndex);\n      const maxRow = Math.max(start.rowIndex, end.rowIndex);\n      const minCol = Math.min(start.colIndex, end.colIndex);\n      const maxCol = Math.max(start.colIndex, end.colIndex);\n\n      for (let r = minRow; r <= maxRow; r++) {\n        for (let c = minCol; c <= maxCol; c++) {\n          if (!sheetToUpdate.cells[r]) sheetToUpdate.cells[r] = [];\n          if (!sheetToUpdate.cells[r][c]) sheetToUpdate.cells[r][c] = createEmptyCell(r,c);\n          const cell = sheetToUpdate.cells[r][c];\n          \n          const isHeaderRow = r === minRow;\n          cell.style = {\n            ...(cell.style || {}),\n            bold: isHeaderRow,\n            hasBorder: true,\n          };\n        }\n      }\n      spreadsheetCopy.updatedAt = Date.now();\n      setTimeout(() => toast({ title: \"Table Formatted\", description: \"Selected range formatted with header and borders.\" }), 0);\n      return spreadsheetCopy;\n    }, 'user_action');\n  }, [selectionRange, setSpreadsheetWithHistory, toast]);\n\n  const modifySheetStructure = useCallback((\n    sheetId: string,\n    operation: 'insertRow' | 'deleteRow' | 'insertColumn' | 'deleteColumn' | 'appendRow' | 'appendColumn',\n    index?: number\n  ) => {\n    setSpreadsheetWithHistory(prevSpreadsheet => {\n      if (!prevSpreadsheet) return null;\n      let spreadsheetCopy = JSON.parse(JSON.stringify(prevSpreadsheet)) as SpreadsheetData;\n      const sheet = spreadsheetCopy.sheets.find(s => s.id === sheetId);\n      if (!sheet) return prevSpreadsheet;\n\n      let updateRowCount = sheet.rowCount;\n      let updateColCount = sheet.columnCount;\n      let toastInfo: { title: string, description: string, variant?: \"destructive\" } | null = null;\n\n      switch (operation) {\n        case 'insertRow':\n          if (index === undefined || index < 0 || index > updateRowCount) return prevSpreadsheet;\n          const newRowData: CellData[] = Array.from({ length: updateColCount }, (_, cIdx) => createEmptyCell(index, cIdx));\n          sheet.cells.splice(index, 0, newRowData);\n          if(sheet.rowHeights) sheet.rowHeights.splice(index, 0, DEFAULT_ROW_HEIGHT); else sheet.rowHeights = Array(updateRowCount + 1).fill(DEFAULT_ROW_HEIGHT);\n          updateRowCount++;\n          // Adjust merged cell ranges\n          if (sheet.mergedCells) {\n            sheet.mergedCells = sheet.mergedCells.map(mc => {\n              if (mc.start.rowIndex >= index) mc.start.rowIndex++;\n              if (mc.end.rowIndex >= index) mc.end.rowIndex++;\n              return mc;\n            });\n          }\n          toastInfo = { title: \"Row Inserted\", description: `Row inserted at index ${index + 1}.` };\n          break;\n        case 'deleteRow':\n          if (index === undefined || updateRowCount <= 1 || index < 0 || index >= updateRowCount) {\n            if(updateRowCount <= 1) toastInfo = { title: \"Cannot Delete\", description: \"Spreadsheet must have at least one row.\", variant: \"destructive\"};\n            if(toastInfo) setTimeout(() => { toast(toastInfo!); }, 0);\n            return prevSpreadsheet;\n          }\n          sheet.cells.splice(index, 1);\n          if(sheet.rowHeights) sheet.rowHeights.splice(index, 1);\n          updateRowCount--;\n           if (sheet.mergedCells) {\n            sheet.mergedCells = sheet.mergedCells\n                .filter(mc => !(mc.start.rowIndex === index && mc.end.rowIndex === index)) // Remove merges fully within deleted row\n                .map(mc => {\n                    if (mc.start.rowIndex > index) mc.start.rowIndex--;\n                    if (mc.end.rowIndex >= index) mc.end.rowIndex = Math.max(index -1, mc.end.rowIndex -1); // Adjust or shrink\n                    return mc;\n                }).filter(mc => mc.start.rowIndex <= mc.end.rowIndex); // Remove invalid merges\n          }\n          toastInfo = { title: \"Row Deleted\", description: `Row at index ${index + 1} deleted.` };\n          break;\n        case 'appendRow':\n          const appendRowIndex = updateRowCount;\n          const appendedRowData: CellData[] = Array.from({ length: updateColCount }, (_, cIdx) => createEmptyCell(appendRowIndex, cIdx));\n          sheet.cells.push(appendedRowData);\n          if(sheet.rowHeights) sheet.rowHeights.push(DEFAULT_ROW_HEIGHT); else sheet.rowHeights = Array(updateRowCount + 1).fill(DEFAULT_ROW_HEIGHT);\n          updateRowCount++;\n          toastInfo = { title: \"Row Added\", description: `Row added at the end.` };\n          break;\n        case 'insertColumn':\n          if (index === undefined || index < 0 || index > updateColCount) return prevSpreadsheet;\n          sheet.cells.forEach((row, rIdx) => {\n            row.splice(index, 0, createEmptyCell(rIdx, index));\n          });\n          if(sheet.columnWidths) sheet.columnWidths.splice(index, 0, DEFAULT_COLUMN_WIDTH); else sheet.columnWidths = Array(updateColCount + 1).fill(DEFAULT_COLUMN_WIDTH);\n          updateColCount++;\n           if (sheet.mergedCells) {\n            sheet.mergedCells = sheet.mergedCells.map(mc => {\n              if (mc.start.colIndex >= index) mc.start.colIndex++;\n              if (mc.end.colIndex >= index) mc.end.colIndex++;\n              return mc;\n            });\n          }\n          toastInfo = { title: \"Column Inserted\", description: `Column inserted at index ${getCellId(0,index).replace(/[0-9]/g, '')}.` };\n          break;\n        case 'deleteColumn':\n          if (index === undefined || updateColCount <= 1 || index < 0 || index >= updateColCount) {\n            if(updateColCount <= 1) toastInfo = { title: \"Cannot Delete\", description: \"Spreadsheet must have at least one column.\", variant: \"destructive\"};\n             if(toastInfo) setTimeout(() => { toast(toastInfo!); }, 0);\n            return prevSpreadsheet;\n          }\n          sheet.cells.forEach(row => row.splice(index, 1));\n          if (sheet.columnWidths && sheet.columnWidths.length > index) sheet.columnWidths.splice(index, 1);\n          updateColCount--;\n          if (sheet.mergedCells) {\n            sheet.mergedCells = sheet.mergedCells\n                .filter(mc => !(mc.start.colIndex === index && mc.end.colIndex === index))\n                .map(mc => {\n                    if (mc.start.colIndex > index) mc.start.colIndex--;\n                    if (mc.end.colIndex >= index) mc.end.colIndex = Math.max(index-1, mc.end.colIndex-1);\n                    return mc;\n                }).filter(mc => mc.start.colIndex <= mc.end.colIndex);\n          }\n          toastInfo = { title: \"Column Deleted\", description: `Column ${getCellId(0,index).replace(/[0-9]/g, '')} deleted.` };\n          break;\n        case 'appendColumn':\n          const appendColIndex = updateColCount;\n          sheet.cells.forEach((row, rIdx) => row.push(createEmptyCell(rIdx, appendColIndex)));\n          if(sheet.columnWidths) sheet.columnWidths.push(DEFAULT_COLUMN_WIDTH); else sheet.columnWidths = Array(updateColCount + 1).fill(DEFAULT_COLUMN_WIDTH);\n          updateColCount++;\n          toastInfo = { title: \"Column Added\", description: `Column added at the end.` };\n          break;\n      }\n\n      if (toastInfo) {\n        setTimeout(() => toast(toastInfo!), 0);\n      }\n\n      sheet.rowCount = updateRowCount;\n      sheet.columnCount = updateColCount;\n\n      for (let r = 0; r < sheet.rowCount; r++) {\n        if(!sheet.cells[r]) sheet.cells[r] = Array.from({ length: sheet.columnCount }, (_, c) => createEmptyCell(r, c));\n        sheet.cells[r] = sheet.cells[r].slice(0, sheet.columnCount); // Ensure row length matches columnCount\n        while(sheet.cells[r].length < sheet.columnCount) {\n            sheet.cells[r].push(createEmptyCell(r, sheet.cells[r].length));\n        }\n\n        for (let c = 0; c < sheet.columnCount; c++) {\n          if (sheet.cells[r]?.[c]) {\n            sheet.cells[r][c].id = getCellId(r, c);\n          } else {\n            if(!sheet.cells[r]) sheet.cells[r] = [];\n            sheet.cells[r][c] = createEmptyCell(r,c);\n          }\n        }\n      }\n      // After structural changes, re-evaluate merge properties for all cells\n        (sheet.mergedCells || []).forEach(mergeRange => {\n            const { start: mergeStart, end: mergeEnd } = mergeRange;\n            const masterRow = Math.min(mergeStart.rowIndex, mergeEnd.rowIndex);\n            const masterCol = Math.min(mergeStart.colIndex, mergeEnd.colIndex);\n            const numRows = Math.abs(mergeEnd.rowIndex - mergeStart.rowIndex) + 1;\n            const numCols = Math.abs(mergeEnd.colIndex - mergeStart.colIndex) + 1;\n\n            if (sheet.cells[masterRow]?.[masterCol]) {\n                sheet.cells[masterRow][masterCol].colSpan = numCols;\n                sheet.cells[masterRow][masterCol].rowSpan = numRows;\n                sheet.cells[masterRow][masterCol].isMerged = false;\n                 for (let r = masterRow; r < masterRow + numRows; r++) {\n                    for (let c = masterCol; c < masterCol + numCols; c++) {\n                        if (r === masterRow && c === masterCol) continue;\n                        if (sheet.cells[r]?.[c]) {\n                            sheet.cells[r][c].isMerged = true;\n                            sheet.cells[r][c].mergeMaster = { sheetId: sheet.id, rowIndex: masterRow, colIndex: masterCol };\n                        }\n                    }\n                }\n            }\n        });\n\n\n      spreadsheetCopy.updatedAt = Date.now();\n      return spreadsheetCopy;\n    }, 'user_action');\n  }, [setSpreadsheetWithHistory, toast]);\n\n  const insertRow = useCallback((sheetId: string, rowIndex: number) => modifySheetStructure(sheetId, 'insertRow', rowIndex), [modifySheetStructure]);\n  const deleteRow = useCallback((sheetId: string, rowIndex: number) => modifySheetStructure(sheetId, 'deleteRow', rowIndex), [modifySheetStructure]);\n  const insertColumn = useCallback((sheetId: string, colIndex: number) => modifySheetStructure(sheetId, 'insertColumn', colIndex), [modifySheetStructure]);\n  const deleteColumn = useCallback((sheetId: string, colIndex: number) => modifySheetStructure(sheetId, 'deleteColumn', colIndex), [modifySheetStructure]);\n  const appendRow = useCallback((sheetId: string) => modifySheetStructure(sheetId, 'appendRow'), [modifySheetStructure]);\n  const appendColumn = useCallback((sheetId: string) => modifySheetStructure(sheetId, 'appendColumn'), [modifySheetStructure]);\n\n  const undo = useCallback(() => {\n    if (undoStack.length > 0) {\n      const previousState = undoStack[undoStack.length - 1];\n      if (internalSpreadsheetRef.current) {\n        const currentCopyForRedo = JSON.parse(JSON.stringify(internalSpreadsheetRef.current)) as SpreadsheetData;\n        setRedoStack(prev => [currentCopyForRedo, ...prev.slice(0, MAX_UNDO_HISTORY -1)]);\n      }\n      setUndoStack(prev => prev.slice(0, -1));\n      setSpreadsheetWithHistory(() => JSON.parse(JSON.stringify(previousState)), 'undo');\n      setActiveCellState(null);\n      setSelectionRangeState(null);\n      setLastFoundCell(null);\n      setTimeout(() => {\n        toast({ title: \"Undo\", description: \"Last action reverted.\" });\n      }, 0);\n    }\n  }, [undoStack, setSpreadsheetWithHistory, toast]);\n\n  const redo = useCallback(() => {\n    if (redoStack.length > 0) {\n      const nextState = redoStack[0];\n       if (internalSpreadsheetRef.current) {\n        const currentCopyForUndo = JSON.parse(JSON.stringify(internalSpreadsheetRef.current)) as SpreadsheetData;\n        setUndoStack(prev => [...prev.slice(-MAX_UNDO_HISTORY + 1), currentCopyForUndo]);\n       }\n      setRedoStack(prev => prev.slice(1));\n      setSpreadsheetWithHistory(() => JSON.parse(JSON.stringify(nextState)), 'redo');\n      setActiveCellState(null);\n      setSelectionRangeState(null);\n      setLastFoundCell(null);\n      setTimeout(() => {\n        toast({ title: \"Redo\", description: \"Last undone action applied.\" });\n      }, 0);\n    }\n  }, [redoStack, setSpreadsheetWithHistory, toast]);\n\n\n  const copySelectionToClipboard = useCallback(async () => {\n    if (!selectionRange || !internalSpreadsheetRef.current) {\n      setTimeout(() => {\n        toast({ title: \"Copy Failed\", description: \"No cells selected to copy.\", variant: \"destructive\" });\n      }, 0);\n      return;\n    }\n\n    const { start, end } = selectionRange;\n    const sheet = internalSpreadsheetRef.current.sheets.find(s => s.id === start.sheetId);\n    if (!sheet) {\n       setTimeout(() => {\n        toast({ title: \"Copy Failed\", description: \"Sheet not found for selection.\", variant: \"destructive\" });\n      }, 0);\n      return;\n    }\n\n    const minRow = Math.min(start.rowIndex, end.rowIndex);\n    const maxRow = Math.max(start.rowIndex, end.rowIndex);\n    const minCol = Math.min(start.colIndex, end.colIndex);\n    const maxCol = Math.max(start.colIndex, end.colIndex);\n\n    let textToCopy = \"\";\n    for (let r = minRow; r <= maxRow; r++) {\n      for (let c = minCol; c <= maxCol; c++) {\n        const cell = sheet.cells[r]?.[c];\n        let valueToCopy = \"\";\n        if (cell) {\n            if (cell.isMerged && cell.mergeMaster) {\n                 // For subordinate merged cells, copy value from master, but only once for the whole merged block\n                 // This part is tricky for plain text copy. Simplest is to copy master if current (r,c) is master.\n                 // Or if we only want unique values, more complex.\n                 // For now, let's copy the master if (r,c) IS the master, and empty if it's a subordinate part of a merge.\n                 // This will leave \"holes\" in text copy for merged areas.\n                 if(cell.mergeMaster.rowIndex === r && cell.mergeMaster.colIndex === c) {\n                    const masterCell = sheet.cells[cell.mergeMaster.rowIndex]?.[cell.mergeMaster.colIndex];\n                    valueToCopy = (masterCell?.formula) \n                                ? masterCell.formula \n                                : (masterCell?.value === '' && (masterCell?.rawValue === '' || masterCell?.rawValue === null || masterCell?.rawValue === undefined)) \n                                    ? '' \n                                    : masterCell?.value?.toString() ?? \"\";\n                 } else {\n                    valueToCopy = \"\"; // Subordinate merged cells are empty in copy\n                 }\n            } else { // Not part of a merge, or is the master cell itself\n                 valueToCopy = (cell.formula) \n                                ? cell.formula \n                                : (cell.value === '' && (cell.rawValue === '' || cell.rawValue === null || cell.rawValue === undefined)) \n                                    ? '' \n                                    : cell.value?.toString() ?? \"\";\n            }\n        }\n        textToCopy += valueToCopy;\n        if (c < maxCol) {\n          textToCopy += \"\\t\";\n        }\n      }\n      if (r < maxRow) {\n        textToCopy += \"\\n\";\n      }\n    }\n\n    try {\n      await navigator.clipboard.writeText(textToCopy);\n      setTimeout(() => {\n        toast({ title: \"Copied\", description: \"Selected cells copied to clipboard.\" });\n      }, 0);\n    } catch (err) {\n      console.error(\"Failed to copy text: \", err);\n       setTimeout(() => {\n        toast({ title: \"Copy Failed\", description: \"Could not copy cells to clipboard.\", variant: \"destructive\" });\n      }, 0);\n    }\n  }, [selectionRange, toast]);\n\n\n  const deleteSelectionContents = useCallback(() => {\n    if (!selectionRange || !internalSpreadsheetRef.current) return;\n\n    setSpreadsheetWithHistory(prevSpreadsheet => {\n      if (!prevSpreadsheet) return null;\n      let spreadsheetCopy = JSON.parse(JSON.stringify(prevSpreadsheet)) as SpreadsheetData;\n      const { start, end } = selectionRange;\n      const sheetToUpdate = spreadsheetCopy.sheets.find(s => s.id === start.sheetId);\n\n      if (!sheetToUpdate) return prevSpreadsheet;\n\n      const minRow = Math.min(start.rowIndex, end.rowIndex);\n      const maxRow = Math.max(start.rowIndex, end.rowIndex);\n      const minCol = Math.min(start.colIndex, end.colIndex);\n      const maxCol = Math.max(start.colIndex, end.colIndex);\n\n      let changed = false;\n      for (let r = minRow; r <= maxRow; r++) {\n        for (let c = minCol; c <= maxCol; c++) {\n          if (!sheetToUpdate.cells[r]) sheetToUpdate.cells[r] = [];\n          if (!sheetToUpdate.cells[r][c]) sheetToUpdate.cells[r][c] = createEmptyCell(r, c);\n          \n          let targetCell = sheetToUpdate.cells[r][c];\n          // If part of a merge, target the master cell for content deletion\n          if (targetCell.isMerged && targetCell.mergeMaster) {\n            targetCell = sheetToUpdate.cells[targetCell.mergeMaster.rowIndex][targetCell.mergeMaster.colIndex];\n          }\n\n          if (targetCell.rawValue !== '' || targetCell.formula !== undefined) {\n              changed = true;\n          }\n          targetCell.rawValue = '';\n          targetCell.formula = undefined; \n        }\n      }\n\n      if (changed) {\n        spreadsheetCopy.updatedAt = Date.now();\n        setTimeout(() => {\n            toast({ title: \"Contents Cleared\", description: \"Contents of selected cells have been cleared.\" });\n        }, 0);\n      }\n      return spreadsheetCopy;\n    }, 'user_action');\n  }, [selectionRange, setSpreadsheetWithHistory, toast]);\n\n  const updateMultipleCellsRawValue = useCallback((newValue: string | number) => {\n    if (!selectionRange || !internalSpreadsheetRef.current) return;\n\n    setSpreadsheetWithHistory(prevSpreadsheet => {\n      if (!prevSpreadsheet) return null;\n      let spreadsheetCopy = JSON.parse(JSON.stringify(prevSpreadsheet)) as SpreadsheetData;\n      const { start, end } = selectionRange;\n      const sheetToUpdate = spreadsheetCopy.sheets.find(s => s.id === start.sheetId);\n\n      if (!sheetToUpdate) return prevSpreadsheet;\n\n      const minRow = Math.min(start.rowIndex, end.rowIndex);\n      const maxRow = Math.max(start.rowIndex, end.rowIndex);\n      const minCol = Math.min(start.colIndex, end.colIndex);\n      const maxCol = Math.max(start.colIndex, end.colIndex);\n\n      for (let r = minRow; r <= maxRow; r++) {\n        for (let c = minCol; c <= maxCol; c++) {\n          if (!sheetToUpdate.cells[r]) sheetToUpdate.cells[r] = [];\n          if (!sheetToUpdate.cells[r][c]) sheetToUpdate.cells[r][c] = createEmptyCell(r,c);\n          \n          let targetCell = sheetToUpdate.cells[r][c];\n           // If part of a merge, target the master cell\n          if (targetCell.isMerged && targetCell.mergeMaster) {\n            targetCell = sheetToUpdate.cells[targetCell.mergeMaster.rowIndex][targetCell.mergeMaster.colIndex];\n          }\n          targetCell.rawValue = newValue;\n        }\n      }\n      spreadsheetCopy.updatedAt = Date.now();\n      setTimeout(() => {\n          toast({ title: \"Cells Updated\", description: \"Selected cells have been updated.\" });\n      }, 0);\n      return spreadsheetCopy;\n    }, 'user_action');\n  }, [selectionRange, setSpreadsheetWithHistory, toast]);\n\n\n  const updateColumnWidth = useCallback((sheetId: string, colIndex: number, newWidth: number) => {\n    setSpreadsheetWithHistory(prev => {\n      if (!prev) return null;\n      const newSheetData = JSON.parse(JSON.stringify(prev)) as SpreadsheetData;\n      const sheet = newSheetData.sheets.find(s => s.id === sheetId);\n      if (sheet && sheet.columnWidths && colIndex < sheet.columnWidths.length) {\n        sheet.columnWidths[colIndex] = Math.max(20, newWidth);\n        newSheetData.updatedAt = Date.now();\n      }\n      return newSheetData;\n    }, 'user_action');\n  }, [setSpreadsheetWithHistory]);\n\n  const updateRowHeight = useCallback((sheetId: string, rowIndex: number, newHeight: number) => {\n    setSpreadsheetWithHistory(prev => {\n      if (!prev) return null;\n      const newSheetData = JSON.parse(JSON.stringify(prev)) as SpreadsheetData;\n      const sheet = newSheetData.sheets.find(s => s.id === sheetId);\n      if (sheet && sheet.rowHeights && rowIndex < sheet.rowHeights.length) {\n        sheet.rowHeights[rowIndex] = Math.max(20, newHeight);\n        newSheetData.updatedAt = Date.now();\n      }\n      return newSheetData;\n    }, 'user_action');\n  }, [setSpreadsheetWithHistory]);\n\n  const addConditionalFormatRule = useCallback((sheetId: string, rule: ConditionalFormatRule) => {\n    setSpreadsheetWithHistory(prev => {\n      if (!prev) return null;\n      const newSheetData = JSON.parse(JSON.stringify(prev)) as SpreadsheetData;\n      const sheet = newSheetData.sheets.find(s => s.id === sheetId);\n      if (sheet) {\n        if (!sheet.conditionalFormatRules) sheet.conditionalFormatRules = [];\n        sheet.conditionalFormatRules.push(rule);\n        newSheetData.updatedAt = Date.now();\n         setTimeout(() => toast({ title: \"Rule Added\", description: \"Conditional formatting rule applied.\" }), 0);\n      }\n      return newSheetData;\n    }, 'user_action');\n  }, [setSpreadsheetWithHistory, toast]);\n\n  const removeConditionalFormatRule = useCallback((sheetId: string, ruleId: string) => {\n     setSpreadsheetWithHistory(prev => {\n        if (!prev) return null;\n        const newSheetData = JSON.parse(JSON.stringify(prev)) as SpreadsheetData;\n        const sheet = newSheetData.sheets.find(s => s.id === sheetId);\n        if (sheet && sheet.conditionalFormatRules) {\n            sheet.conditionalFormatRules = sheet.conditionalFormatRules.filter(r => r.id !== ruleId);\n            newSheetData.updatedAt = Date.now();\n            setTimeout(() => toast({ title: \"Rule Removed\", description: \"Conditional formatting rule removed.\" }), 0);\n        }\n        return newSheetData;\n     }, 'user_action');\n  }, [setSpreadsheetWithHistory, toast]);\n  \n  const updateConditionalFormatRule = useCallback((sheetId: string, updatedRule: ConditionalFormatRule) => {\n     setSpreadsheetWithHistory(prev => {\n        if (!prev) return null;\n        const newSheetData = JSON.parse(JSON.stringify(prev)) as SpreadsheetData;\n        const sheet = newSheetData.sheets.find(s => s.id === sheetId);\n        if (sheet && sheet.conditionalFormatRules) {\n            const ruleIndex = sheet.conditionalFormatRules.findIndex(r => r.id === updatedRule.id);\n            if (ruleIndex !== -1) {\n                sheet.conditionalFormatRules[ruleIndex] = updatedRule;\n                newSheetData.updatedAt = Date.now();\n                setTimeout(() => toast({ title: \"Rule Updated\", description: \"Conditional formatting rule updated.\" }), 0);\n            }\n        }\n        return newSheetData;\n     }, 'user_action');\n  }, [setSpreadsheetWithHistory, toast]);\n\n  const mergeSelection = useCallback(() => {\n    if (!selectionRange || !internalSpreadsheetRef.current) return;\n    const { start, end, start: { sheetId } } = selectionRange;\n    if (start.rowIndex === end.rowIndex && start.colIndex === end.colIndex) {\n        setTimeout(() => toast({ title: \"Merge Cells\", description: \"Select multiple cells to merge.\", variant: \"default\" }), 0);\n        return;\n    }\n\n    setSpreadsheetWithHistory(prev => {\n        if (!prev) return null;\n        const spreadsheetCopy = JSON.parse(JSON.stringify(prev)) as SpreadsheetData;\n        const sheet = spreadsheetCopy.sheets.find(s => s.id === sheetId);\n        if (!sheet) return prev;\n\n        if (!sheet.mergedCells) sheet.mergedCells = [];\n\n        // Check for overlap with existing merges. For simplicity, disallow if any cell in selection is already merged.\n        const minR = Math.min(start.rowIndex, end.rowIndex);\n        const maxR = Math.max(start.rowIndex, end.rowIndex);\n        const minC = Math.min(start.colIndex, end.colIndex);\n        const maxC = Math.max(start.colIndex, end.colIndex);\n\n        for (let r = minR; r <= maxR; r++) {\n            for (let c = minC; c <= maxC; c++) {\n                if (sheet.cells[r]?.[c]?.isMerged || sheet.mergedCells.some(mc => isCellAddressInRange({sheetId, rowIndex: r, colIndex: c}, mc))) {\n                     setTimeout(() => toast({ title: \"Merge Error\", description: \"Selection overlaps with an existing merged area. Unmerge first.\", variant: \"destructive\" }), 0);\n                    return prev;\n                }\n            }\n        }\n        \n        const newMergeRange: SelectionRange = { \n            start: { sheetId, rowIndex: minR, colIndex: minC }, \n            end: { sheetId, rowIndex: maxR, colIndex: maxC } \n        };\n        sheet.mergedCells.push(newMergeRange);\n\n        const masterCell = sheet.cells[minR][minC];\n        masterCell.colSpan = (maxC - minC) + 1;\n        masterCell.rowSpan = (maxR - minR) + 1;\n        masterCell.isMerged = false; // Master cell is not 'isMerged' itself, it defines the merge\n\n        // Clear content and reset spans for subordinate cells in the merge\n        for (let r = minR; r <= maxR; r++) {\n            for (let c = minC; c <= maxC; c++) {\n                if (r === minR && c === minC) continue; // Skip master cell\n                if (sheet.cells[r]?.[c]) {\n                    const subordinateCell = sheet.cells[r][c];\n                    subordinateCell.rawValue = '';\n                    subordinateCell.value = '';\n                    subordinateCell.formula = undefined;\n                    subordinateCell.style = {}; // Optionally clear styles of subordinate cells\n                    subordinateCell.isMerged = true;\n                    subordinateCell.mergeMaster = { sheetId, rowIndex: minR, colIndex: minC };\n                    subordinateCell.colSpan = 1;\n                    subordinateCell.rowSpan = 1;\n                }\n            }\n        }\n        spreadsheetCopy.updatedAt = Date.now();\n        setTimeout(() => toast({ title: \"Cells Merged\", description: \"Selected cells have been merged.\" }), 0);\n        // After merging, set active cell to the master of the new merge and selection to the merged range\n        setActiveCellState({ sheetId, rowIndex: minR, colIndex: minC });\n        setSelectionRangeState(newMergeRange);\n        return spreadsheetCopy;\n    }, 'user_action');\n  }, [selectionRange, toast, setSpreadsheetWithHistory]);\n\n  const unmergeSelection = useCallback(() => {\n    if (!activeCell || !internalSpreadsheetRef.current) return; // Unmerge based on active cell\n    const { sheetId, rowIndex, colIndex } = activeCell;\n\n    setSpreadsheetWithHistory(prev => {\n        if (!prev) return null;\n        const spreadsheetCopy = JSON.parse(JSON.stringify(prev)) as SpreadsheetData;\n        const sheet = spreadsheetCopy.sheets.find(s => s.id === sheetId);\n        if (!sheet || !sheet.mergedCells) return prev;\n\n        const cellToUnmergeFrom = sheet.cells[rowIndex]?.[colIndex];\n        if(!cellToUnmergeFrom) return prev;\n\n        const masterAddress = (cellToUnmergeFrom.isMerged && cellToUnmergeFrom.mergeMaster) \n                               ? cellToUnmergeFrom.mergeMaster \n                               : {sheetId, rowIndex, colIndex};\n\n        const mergeIndex = sheet.mergedCells.findIndex(mc => \n            mc.start.rowIndex === masterAddress.rowIndex && mc.start.colIndex === masterAddress.colIndex\n        );\n\n        if (mergeIndex === -1) {\n            setTimeout(() => toast({ title: \"Unmerge Cells\", description: \"Active cell is not part of a merged area.\", variant: \"default\" }), 0);\n            return prev;\n        }\n\n        const mergedRange = sheet.mergedCells[mergeIndex];\n        sheet.mergedCells.splice(mergeIndex, 1); // Remove the merge instruction\n\n        // Reset colSpan/rowSpan for the master cell and isMerged flags for all involved cells\n        const masterCell = sheet.cells[mergedRange.start.rowIndex][mergedRange.start.colIndex];\n        masterCell.colSpan = 1;\n        masterCell.rowSpan = 1;\n        masterCell.isMerged = false; // No longer defines a merge\n\n        for (let r = mergedRange.start.rowIndex; r <= mergedRange.end.rowIndex; r++) {\n            for (let c = mergedRange.start.colIndex; c <= mergedRange.end.colIndex; c++) {\n                 if (sheet.cells[r]?.[c]) {\n                    sheet.cells[r][c].isMerged = false;\n                    delete sheet.cells[r][c].mergeMaster;\n                 }\n            }\n        }\n        spreadsheetCopy.updatedAt = Date.now();\n        setTimeout(() => toast({ title: \"Cells Unmerged\", description: \"Cells have been unmerged.\" }), 0);\n        // After unmerging, set active cell and selection to the top-left of the former merge\n        setActiveCellState({ sheetId, rowIndex: mergedRange.start.rowIndex, colIndex: mergedRange.start.colIndex });\n        setSelectionRangeState({ start: mergedRange.start, end: mergedRange.start });\n        return spreadsheetCopy;\n    }, 'user_action');\n  }, [activeCell, toast, setSpreadsheetWithHistory]);\n\n  const findInSheet = useCallback((\n    searchTerm: string,\n    findOptions: { matchCase: boolean; entireCell: boolean; searchFormulas: boolean; sheetId: string; from: CellAddress | null }\n    ): CellAddress | null => {\n    \n    const { matchCase, entireCell, searchFormulas, sheetId, from } = findOptions;\n    const sheet = getSheetFromData(internalSpreadsheetRef.current, sheetId);\n    if (!sheet || !searchTerm) return null;\n\n    const term = matchCase ? searchTerm : searchTerm.toLowerCase();\n    let startRow = from ? from.rowIndex : 0;\n    let startCol = from ? from.colIndex + 1 : 0; // Start from next cell or beginning\n\n    for (let r = startRow; r < sheet.rowCount; r++) {\n        for (let c = (r === startRow ? startCol : 0); c < sheet.columnCount; c++) {\n            const cell = sheet.cells[r]?.[c];\n            if (cell) {\n                let valueToSearch = searchFormulas ? (cell.rawValue || '').toString() : (cell.value || '').toString();\n                if (!matchCase) valueToSearch = valueToSearch.toLowerCase();\n\n                let found = false;\n                if (entireCell) {\n                    if (valueToSearch === term) found = true;\n                } else {\n                    if (valueToSearch.includes(term)) found = true;\n                }\n\n                if (found) {\n                    const foundAddress = { sheetId, rowIndex: r, colIndex: c };\n                    setLastFoundCell(foundAddress);\n                    return foundAddress;\n                }\n            }\n        }\n    }\n    // If not found from 'from', wrap around and search from beginning if 'from' was not (0,0)\n    if (from && (from.rowIndex !== 0 || from.colIndex !== 0)) {\n        for (let r = 0; r <= from.rowIndex; r++) {\n            for (let c = 0; c < (r === from.rowIndex ? from.colIndex + 1 : sheet.columnCount) ; c++) {\n                 const cell = sheet.cells[r]?.[c];\n                 if (cell) {\n                    let valueToSearch = searchFormulas ? (cell.rawValue || '').toString() : (cell.value || '').toString();\n                    if (!matchCase) valueToSearch = valueToSearch.toLowerCase();\n                    let found = false;\n                    if (entireCell) {\n                        if (valueToSearch === term) found = true;\n                    } else {\n                        if (valueToSearch.includes(term)) found = true;\n                    }\n                    if (found) {\n                        const foundAddress = { sheetId, rowIndex: r, colIndex: c };\n                        setLastFoundCell(foundAddress);\n                        return foundAddress;\n                    }\n                }\n            }\n        }\n    }\n    setLastFoundCell(null); // Not found\n    return null;\n\n  }, []);\n\n\n  const canUndo = undoStack.length > 0;\n  const canRedo = redoStack.length > 0;\n\n  return (\n    <SpreadsheetContext.Provider value={{\n      spreadsheet: internalSpreadsheetState,\n      setSpreadsheet: exposedSetSpreadsheet,\n      isLoading,\n      loadSpreadsheet,\n      saveSpreadsheet,\n      updateCell,\n      activeCell: activeCell,\n      selectionRange: selectionRange,\n      setActiveCellAndSelection,\n      updateSelectedCellStyle,\n      formatSelectionAsTable,\n      insertRow,\n      deleteRow,\n      insertColumn,\n      deleteColumn,\n      appendRow,\n      appendColumn,\n      undo,\n      redo,\n      canUndo,\n      canRedo,\n      evaluateFormula: evaluateFormulaContext,\n      copySelectionToClipboard,\n      deleteSelectionContents,\n      updateMultipleCellsRawValue,\n      isActivelyEditingFormula: isActivelyEditingFormula,\n      setIsActivelyEditingFormula,\n      formulaBarApiRef,\n      updateColumnWidth,\n      updateRowHeight,\n      addConditionalFormatRule,\n      removeConditionalFormatRule,\n      updateConditionalFormatRule,\n      mergeSelection,\n      unmergeSelection,\n      findInSheet,\n    }}>\n      {children}\n    </SpreadsheetContext.Provider>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2019, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/hooks/useSpreadsheet.ts"],"sourcesContent":["\"use client\";\n\nimport { useContext } from 'react';\nimport { SpreadsheetContext } from '@/contexts/SpreadsheetContext';\n\nexport function useSpreadsheet() {\n  const context = useContext(SpreadsheetContext);\n  if (context === undefined) {\n    throw new Error('useSpreadsheet must be used within a SpreadsheetProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;AAEA;AACA;;AAHA;;;AAKO,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,yIAAA,CAAA,qBAAkB;IAC7C,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANgB","debugId":null}},
    {"offset": {"line": 2046, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2113, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2149, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/icons/OfflineSheetLogo.tsx"],"sourcesContent":["import type { SVGProps } from 'react';\n\nexport function OfflineSheetLogo(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 100\"\n      width=\"40\"\n      height=\"40\"\n      aria-label=\"OfflineSheet Logo\"\n      {...props}\n    >\n      <defs>\n        <linearGradient id=\"logoGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style={{ stopColor: 'hsl(var(--primary))', stopOpacity: 1 }} />\n          <stop offset=\"100%\" style={{ stopColor: 'hsl(var(--accent))', stopOpacity: 1 }} />\n        </linearGradient>\n      </defs>\n      <rect width=\"100\" height=\"100\" rx=\"15\" fill=\"url(#logoGradient)\" />\n      <path\n        d=\"M25 75 L25 25 L75 25 M25 40 L65 40 M25 55 L65 55 M40 25 L40 75 M55 25 L55 75\"\n        stroke=\"hsl(var(--primary-foreground))\"\n        strokeWidth=\"5\"\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEO,SAAS,iBAAiB,KAA8B;IAC7D,qBACE,6LAAC;QACC,OAAM;QACN,SAAQ;QACR,OAAM;QACN,QAAO;QACP,cAAW;QACV,GAAG,KAAK;;0BAET,6LAAC;0BACC,cAAA,6LAAC;oBAAe,IAAG;oBAAe,IAAG;oBAAK,IAAG;oBAAK,IAAG;oBAAO,IAAG;;sCAC7D,6LAAC;4BAAK,QAAO;4BAAK,OAAO;gCAAE,WAAW;gCAAuB,aAAa;4BAAE;;;;;;sCAC5E,6LAAC;4BAAK,QAAO;4BAAO,OAAO;gCAAE,WAAW;gCAAsB,aAAa;4BAAE;;;;;;;;;;;;;;;;;0BAGjF,6LAAC;gBAAK,OAAM;gBAAM,QAAO;gBAAM,IAAG;gBAAK,MAAK;;;;;;0BAC5C,6LAAC;gBACC,GAAE;gBACF,QAAO;gBACP,aAAY;gBACZ,MAAK;gBACL,eAAc;gBACd,gBAAe;;;;;;;;;;;;AAIvB;KA3BgB","debugId":null}},
    {"offset": {"line": 2245, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/ui/menubar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2552, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/ui/separator.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n\n    "],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;AAIf,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2590, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2741, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2818, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2956, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/spreadsheet/AvailableFunctionsDialog.tsx"],"sourcesContent":["\n\"use client\";\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n} from \"@/components/ui/dialog\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\n\ninterface AvailableFunctionsDialogProps {\n  isOpen: boolean;\n  onOpenChange: (isOpen: boolean) => void;\n}\n\nconst functionsList = [\n  // Math & Trig\n  { name: \"SUM\", syntax: \"SUM(number1, [number2], ...)\", description: \"Adds all the numbers in a range of cells.\" },\n  { name: \"AVERAGE\", syntax: \"AVERAGE(number1, [number2], ...)\", description: \"Returns the average (arithmetic mean) of its arguments.\" },\n  { name: \"COUNT\", syntax: \"COUNT(value1, [value2], ...)\", description: \"Counts the number of cells that contain numbers.\" },\n  { name: \"MAX\", syntax: \"MAX(number1, [number2], ...)\", description: \"Returns the largest value in a set of values.\" },\n  { name: \"MIN\", syntax: \"MIN(number1, [number2], ...)\", description: \"Returns the smallest number in a set of values.\" },\n  { name: \"ROUND\", syntax: \"ROUND(number, num_digits)\", description: \"Rounds a number to a specified number of digits.\" },\n  { name: \"RAND\", syntax: \"RAND()\", description: \"Returns an evenly distributed random real number greater than or equal to 0 and less than 1.\" },\n  { name: \"RANDBETWEEN\", syntax: \"RANDBETWEEN(bottom, top)\", description: \"Returns a random integer number between the numbers you specify.\" },\n  { name: \"ABS\", syntax: \"ABS(number)\", description: \"Returns the absolute value of a number.\" },\n  { name: \"INT\", syntax: \"INT(number)\", description: \"Rounds a number down to the nearest integer.\" },\n  { name: \"MOD\", syntax: \"MOD(number, divisor)\", description: \"Returns the remainder after a number is divided by a divisor.\" },\n  { name: \"POWER\", syntax: \"POWER(number, power)\", description: \"Returns the result of a number raised to a power.\" },\n  { name: \"PRODUCT\", syntax: \"PRODUCT(number1, [number2], ...)\", description: \"Multiplies all the numbers given as arguments.\" },\n  { name: \"SQRT\", syntax: \"SQRT(number)\", description: \"Returns a positive square root.\" },\n  { name: \"SUBTOTAL\", syntax: \"SUBTOTAL(function_num, ref1, [ref2],...)\", description: \"Returns a subtotal in a list or database. It is versatile, allowing various functions like SUM, AVERAGE, COUNT, etc., while ignoring other subtotals and optionally hidden rows.\" },\n  // Text\n  { name: \"CONCATENATE\", syntax: \"CONCATENATE(text1, [text2], ...)\", description: \"Joins several text strings into one text string. (Excel also supports CONCAT).\" },\n  { name: \"TEXT\", syntax: \"TEXT(value, format_text)\", description: \"Converts a value to text in a specific number format.\" },\n  { name: \"LEFT\", syntax: \"LEFT(text, [num_chars])\", description: \"Returns the specified number of characters from the start of a text string.\" },\n  { name: \"RIGHT\", syntax: \"RIGHT(text, [num_chars])\", description: \"Returns the specified number of characters from the end of a text string.\" },\n  { name: \"MID\", syntax: \"MID(text, start_num, num_chars)\", description: \"Returns a specific number of characters from a text string, starting at the position you specify.\" },\n  { name: \"LEN\", syntax: \"LEN(text)\", description: \"Returns the number of characters in a text string.\" },\n  { name: \"FIND\", syntax: \"FIND(find_text, within_text, [start_num])\", description: \"Finds one text string within another (case-sensitive).\" },\n  { name: \"REPLACE\", syntax: \"REPLACE(old_text, start_num, num_chars, new_text)\", description: \"Replaces part of a text string with a different text string.\" },\n  { name: \"SUBSTITUTE\", syntax: \"SUBSTITUTE(text, old_text, new_text, [instance_num])\", description: \"Substitutes new_text for old_text in a text string.\" },\n  { name: \"TRIM\", syntax: \"TRIM(text)\", description: \"Removes leading and trailing spaces from text.\" },\n  // Logical\n  { name: \"IF\", syntax: \"IF(logical_test, value_if_true, [value_if_false])\", description: \"Checks whether a condition is met, and returns one value if TRUE, and another value if FALSE.\" },\n  { name: \"AND\", syntax: \"AND(logical1, [logical2], ...)\", description: \"Returns TRUE if all its arguments are TRUE; returns FALSE if one or more arguments are FALSE.\" },\n  { name: \"OR\", syntax: \"OR(logical1, [logical2], ...)\", description: \"Returns TRUE if any argument is TRUE; returns FALSE if all arguments are FALSE.\" },\n  { name: \"NOT\", syntax: \"NOT(logical)\", description: \"Reverses the logical value of its argument.\" },\n  { name: \"IFERROR\", syntax: \"IFERROR(value, value_if_error)\", description: \"Returns value_if_error if expression is an error and the value of the expression itself otherwise.\" },\n  // Date & Time\n  { name: \"TODAY\", syntax: \"TODAY()\", description: \"Returns the current date as a serial number.\" },\n  { name: \"NOW\", syntax: \"NOW()\", description: \"Returns the current date and time as a serial number.\" },\n  { name: \"DATE\", syntax: \"DATE(year, month, day)\", description: \"Returns the serial number of a particular date.\" },\n  { name: \"YEAR\", syntax: \"YEAR(serial_number)\", description: \"Returns the year corresponding to a date.\" },\n  { name: \"MONTH\", syntax: \"MONTH(serial_number)\", description: \"Returns the month, a number from 1 (January) to 12 (December).\" },\n  { name: \"DAY\", syntax: \"DAY(serial_number)\", description: \"Returns the day of the month, a number from 1 to 31.\" },\n  { name: \"HOUR\", syntax: \"HOUR(serial_number)\", description: \"Returns the hour as a number from 0 (12:00 A.M.) to 23 (11:00 P.M.).\" },\n  { name: \"MINUTE\", syntax: \"MINUTE(serial_number)\", description: \"Returns the minute as a number from 0 to 59.\" },\n  { name: \"SECOND\", syntax: \"SECOND(serial_number)\", description: \"Returns the second as a number from 0 to 59.\" },\n  { name: \"EDATE\", syntax: \"EDATE(start_date, months)\", description: \"Returns the serial number of the date that is the indicated number of months before or after the start date.\" },\n  // Lookup & Reference\n  { name: \"VLOOKUP\", syntax: \"VLOOKUP(lookup_value, table_array, col_index_num, [range_lookup])\", description: \"Looks for a value in the leftmost column of a table, and then returns a value in the same row from a column you specify.\" },\n  { name: \"HLOOKUP\", syntax: \"HLOOKUP(lookup_value, table_array, row_index_num, [range_lookup])\", description: \"Looks for a value in the top row of a table or array of values and returns the value in the same column from a row you specify.\" },\n  { name: \"INDEX\", syntax: \"INDEX(array, row_num, [column_num])\", description: \"Returns a value or reference of the cell at the intersection of a particular row and column, in a given range.\" },\n  { name: \"MATCH\", syntax: \"MATCH(lookup_value, lookup_array, [match_type])\", description: \"Returns the relative position of an item in an array that matches a specified value in a specified order.\" },\n  { name: \"OFFSET\", syntax: \"OFFSET(reference, rows, cols, [height], [width])\", description: \"Returns a reference to a range that is a specified number of rows and columns from a cell or range of cells.\" },\n  { name: \"CHOOSE\", syntax: \"CHOOSE(index_num, value1, [value2], ...)\", description: \"Uses index_num to return a value from the list of value arguments.\" },\n  { name: \"INDIRECT\", syntax: \"INDIRECT(ref_text, [a1])\", description: \"Returns the reference specified by a text string.\" },\n  // Statistical\n  { name: \"COUNTA\", syntax: \"COUNTA(value1, [value2], ...)\", description: \"Counts the number of cells that are not empty.\" },\n  { name: \"COUNTBLANK\", syntax: \"COUNTBLANK(range)\", description: \"Counts the number of empty cells in a specified range of cells.\" },\n  { name: \"COUNTIF\", syntax: \"COUNTIF(range, criteria)\", description: \"Counts the number of cells within a range that meet the given criteria.\" },\n  { name: \"COUNTIFS\", syntax: \"COUNTIFS(criteria_range1, criteria1, [criteria_range2, criteria2]…)\", description: \"Counts the number of cells specified by a given set of conditions or criteria.\" },\n  { name: \"AVERAGEIF\", syntax: \"AVERAGEIF(range, criteria, [average_range])\", description: \"Finds average for the cells specified by a given condition or criteria.\" },\n  { name: \"AVERAGEIFS\", syntax: \"AVERAGEIFS(average_range, criteria_range1, criteria1, [criteria_range2, criteria2]…)\", description: \"Finds average for the cells specified by a given set of conditions or criteria.\" },\n  { name: \"SUMIF\", syntax: \"SUMIF(range, criteria, [sum_range])\", description: \"Adds the cells specified by a given criteria.\" },\n  { name: \"SUMIFS\", syntax: \"SUMIFS(sum_range, criteria_range1, criteria1, [criteria_range2, criteria2]…)\", description: \"Adds all of its arguments that meet multiple criteria.\" },\n  { name: \"MEDIAN\", syntax: \"MEDIAN(number1, [number2], ...)\", description: \"Returns the median of the given numbers. The median is the number in the middle of a set of numbers.\" },\n  { name: \"MODE.SNGL\", syntax: \"MODE.SNGL(number1, [number2], ...)\", description: \"Returns the most frequently occurring, or repetitive, value in an array or range of data. (Older Excel versions use MODE).\" },\n  // Financial\n  { name: \"PMT\", syntax: \"PMT(rate, nper, pv, [fv], [type])\", description: \"Calculates the payment for a loan based on constant payments and a constant interest rate.\" },\n  { name: \"FV\", syntax: \"FV(rate, nper, pmt, [pv], [type])\", description: \"Returns the future value of an investment based on periodic, constant payments and a constant interest rate.\" },\n  { name: \"PV\", syntax: \"PV(rate, nper, pmt, [fv], [type])\", description: \"Returns the present value of an investment.\" },\n  { name: \"NPER\", syntax: \"NPER(rate, pmt, pv, [fv], [type])\", description: \"Returns the number of periods for an investment based on periodic, constant payments and a constant interest rate.\" },\n  { name: \"RATE\", syntax: \"RATE(nper, pmt, pv, [fv], [type], [guess])\", description: \"Returns the interest rate per period of an annuity.\" },\n  { name: \"NPV\", syntax: \"NPV(rate, value1, [value2], ...)\", description: \"Returns the net present value of an investment based on a series of periodic cash flows and a discount rate.\" },\n  { name: \"IRR\", syntax: \"IRR(values, [guess])\", description: \"Returns the internal rate of return for a series of cash flows.\" },\n  { name: \"DB\", syntax: \"DB(cost, salvage, life, period, [month])\", description: \"Returns the depreciation of an asset for a specified period using the fixed-declining balance method.\" },\n  { name: \"SLN\", syntax: \"SLN(cost, salvage, life)\", description: \"Returns the straight-line depreciation of an asset for one period.\" },\n  { name: \"SYD\", syntax: \"SYD(cost, salvage, life, per)\", description: \"Returns the sum-of-years' digits depreciation of an asset for a specified period.\" },\n  { name: \"IPMT\", syntax: \"IPMT(rate, per, nper, pv, [fv], [type])\", description: \"Returns the interest payment for a given period for an investment based on periodic, constant payments and a constant interest rate.\" },\n  { name: \"PPMT\", syntax: \"PPMT(rate, per, nper, pv, [fv], [type])\", description: \"Returns the payment on the principal for a given period for an investment based on periodic, constant payments and a constant interest rate.\" },\n];\n\n\nexport function AvailableFunctionsDialog({ isOpen, onOpenChange }: AvailableFunctionsDialogProps) {\n  return (\n    <Dialog open={isOpen} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-3xl max-h-[80vh]\">\n        <DialogHeader>\n          <DialogTitle>Available Functions (Reference)</DialogTitle>\n          <DialogDescription>\n            This is a list of commonly used spreadsheet functions. The application currently stores formulas as text and does not perform calculations.\n          </DialogDescription>\n        </DialogHeader>\n        <ScrollArea className=\"h-[60vh] w-full rounded-md border p-4\">\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead className=\"w-[150px]\">Function</TableHead>\n                <TableHead className=\"w-[250px]\">Syntax</TableHead>\n                <TableHead>Description</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {functionsList.map((func) => (\n                <TableRow key={func.name}>\n                  <TableCell className=\"font-medium\">{func.name}</TableCell>\n                  <TableCell className=\"font-mono text-xs\">{func.syntax}</TableCell>\n                  <TableCell>{func.description}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </ScrollArea>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3464, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3503, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3718, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/spreadsheet/ConditionalFormattingDialog.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { useSpreadsheet } from '@/hooks/useSpreadsheet';\nimport type { ConditionalFormatRule, SelectionRange, PredefinedStyleKey, CellAddress } from '@/types/spreadsheet';\nimport { getCellId } from '@/types/spreadsheet';\n\ninterface ConditionalFormattingDialogProps {\n  isOpen: boolean;\n  onOpenChange: (isOpen: boolean) => void;\n  activeSheetId: string | undefined;\n  selectionRange: SelectionRange | null; // To prefill range\n}\n\nconst predefinedStyles: { key: PredefinedStyleKey; label: string }[] = [\n  { key: 'lightRedFillDarkRedText', label: 'Light Red Fill with Dark Red Text' },\n  { key: 'yellowFillDarkYellowText', label: 'Yellow Fill with Dark Yellow Text' },\n  { key: 'greenFillDarkGreenText', label: 'Green Fill with Dark Green Text' },\n];\n\nfunction rangeToString(range: SelectionRange | null): string {\n    if (!range) return \"\";\n    const startId = getCellId(range.start.rowIndex, range.start.colIndex);\n    const endId = getCellId(range.end.rowIndex, range.end.colIndex);\n    return startId === endId ? startId : `${startId}:${endId}`;\n}\n\nfunction parseRangeString(rangeStr: string, currentSheetId: string): SelectionRange | null {\n    const parts = rangeStr.split(':');\n    const startAddrStr = parts[0];\n    const endAddrStr = parts.length > 1 ? parts[1] : startAddrStr;\n\n    const parseSingleCellId = (idStr: string): CellAddress | null => {\n        const colMatch = idStr.match(/[A-Z]+/i);\n        const rowMatch = idStr.match(/\\d+/);\n        if (!colMatch || !rowMatch) return null;\n        \n        let colIndex = 0;\n        const colChars = colMatch[0].toUpperCase();\n        for (let i = 0; i < colChars.length; i++) {\n            colIndex = colIndex * 26 + (colChars.charCodeAt(i) - 64);\n        }\n        colIndex -=1;\n\n        const rowIndex = parseInt(rowMatch[0], 10) - 1;\n        if (isNaN(colIndex) || isNaN(rowIndex) || colIndex < 0 || rowIndex < 0) return null;\n        return { sheetId: currentSheetId, rowIndex, colIndex };\n    };\n\n    const start = parseSingleCellId(startAddrStr);\n    const end = parseSingleCellId(endAddrStr);\n\n    if (start && end) {\n        return { start, end };\n    }\n    return null;\n}\n\n\nexport function ConditionalFormattingDialog({ \n    isOpen, \n    onOpenChange, \n    activeSheetId,\n    selectionRange: initialSelectionRange \n}: ConditionalFormattingDialogProps) {\n  const { addConditionalFormatRule, spreadsheet } = useSpreadsheet();\n  \n  const [ruleType, setRuleType] = useState<'greaterThan' | 'lessThan' | 'equalTo'>('greaterThan');\n  const [comparisonValue, setComparisonValue] = useState('');\n  const [styleKey, setStyleKey] = useState<PredefinedStyleKey>('lightRedFillDarkRedText');\n  const [rangeStr, setRangeStr] = useState<string>(rangeToString(initialSelectionRange));\n  const [error, setError] = useState<string>('');\n\n  useEffect(() => {\n    setRangeStr(rangeToString(initialSelectionRange)); // Update when dialog opens with new selection\n  }, [initialSelectionRange, isOpen]);\n\n\n  const handleSubmit = () => {\n    setError('');\n    if (!activeSheetId) {\n      setError(\"No active sheet selected.\");\n      return;\n    }\n    const parsedRange = parseRangeString(rangeStr, activeSheetId);\n    if (!parsedRange) {\n      setError(\"Invalid range format. Use A1 or A1:B2.\");\n      return;\n    }\n    const numValue = parseFloat(comparisonValue);\n    if (isNaN(numValue)) {\n      setError(\"Comparison value must be a number.\");\n      return;\n    }\n\n    const newRule: ConditionalFormatRule = {\n      id: uuidv4(),\n      range: parsedRange,\n      type: ruleType,\n      value: numValue,\n      styleKey: styleKey,\n    };\n    addConditionalFormatRule(activeSheetId, newRule);\n    onOpenChange(false); // Close dialog\n    // Reset form for next time\n    setComparisonValue('');\n    setRuleType('greaterThan');\n    setStyleKey('lightRedFillDarkRedText');\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={(open) => {\n        onOpenChange(open);\n        if (!open) setError(''); // Clear errors when closing\n    }}>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>Add Conditional Formatting Rule</DialogTitle>\n          <DialogDescription>\n            Highlight cells that meet certain criteria.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"grid gap-4 py-4\">\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"range\" className=\"text-right\">\n              Range\n            </Label>\n            <Input\n              id=\"range\"\n              value={rangeStr}\n              onChange={(e) => setRangeStr(e.target.value.toUpperCase())}\n              className=\"col-span-3\"\n              placeholder=\"e.g., A1:B10 or C5\"\n            />\n          </div>\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"ruleType\" className=\"text-right\">\n              Rule Type\n            </Label>\n            <Select value={ruleType} onValueChange={(value) => setRuleType(value as any)}>\n              <SelectTrigger className=\"col-span-3\">\n                <SelectValue placeholder=\"Select a rule type\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"greaterThan\">Cell Value Is Greater Than</SelectItem>\n                <SelectItem value=\"lessThan\">Cell Value Is Less Than</SelectItem>\n                <SelectItem value=\"equalTo\">Cell Value Is Equal To</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"value\" className=\"text-right\">\n              Value\n            </Label>\n            <Input\n              id=\"value\"\n              type=\"number\"\n              value={comparisonValue}\n              onChange={(e) => setComparisonValue(e.target.value)}\n              className=\"col-span-3\"\n              placeholder=\"Enter a number\"\n            />\n          </div>\n          <div className=\"grid grid-cols-4 items-center gap-4\">\n            <Label htmlFor=\"style\" className=\"text-right\">\n              Style\n            </Label>\n            <Select value={styleKey} onValueChange={(value) => setStyleKey(value as PredefinedStyleKey)}>\n              <SelectTrigger className=\"col-span-3\">\n                <SelectValue placeholder=\"Select a style\" />\n              </SelectTrigger>\n              <SelectContent>\n                {predefinedStyles.map(style => (\n                  <SelectItem key={style.key} value={style.key}>{style.label}</SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n          {error && (\n            <p className=\"col-span-4 text-sm text-destructive text-center\">{error}</p>\n          )}\n        </div>\n        <DialogFooter>\n          <Button type=\"button\" variant=\"outline\" onClick={() => onOpenChange(false)}>Cancel</Button>\n          <Button type=\"submit\" onClick={handleSubmit}>Apply Rule</Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4134, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 4186, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/spreadsheet/Toolbar.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useRef } from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { useSpreadsheet } from \"@/hooks/useSpreadsheet\";\nimport { OfflineSheetLogo } from \"../icons/OfflineSheetLogo\";\nimport Link from \"next/link\";\nimport { useRouter } from 'next/navigation';\nimport { \n    Save, Home, Upload, Download, Undo, Redo, Bold, Italic, Underline, \n    AlignLeft, AlignCenter, AlignRight, FileText, RowsIcon, Columns, Trash2, \n    PlusSquare, ListChecks, Sun, Moon, FilePlus, ClipboardCopy, Eraser, Edit,\n    TableIcon, Wand2, Sigma, GridIcon, Printer, Merge, Split, Search, Palette,\n    CaseSensitive, WholeWord, Replace, Pilcrow, Share2\n} from \"lucide-react\"; \nimport {\n  Menubar, MenubarContent, MenubarItem, MenubarMenu, MenubarSeparator, MenubarShortcut,\n  MenubarTrigger, MenubarGroup, MenubarSub, MenubarSubContent, MenubarSubTrigger, \n} from \"@/components/ui/menubar\";\nimport { Separator } from \"@/components/ui/separator\"; \nimport { cn } from '@/lib/utils';\nimport { AvailableFunctionsDialog } from './AvailableFunctionsDialog';\nimport { ConditionalFormattingDialog } from './ConditionalFormattingDialog';\nimport { \n  Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogFooter, DialogClose\n} from '@/components/ui/dialog';\nimport { Label } from '@/components/ui/label';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport {\n  Select, SelectContent, SelectItem, SelectTrigger, SelectValue,\n} from \"@/components/ui/select\"\nimport { useToast } from '@/hooks/use-toast';\nimport type { SpreadsheetData } from '@/types/spreadsheet';\nimport { saveSpreadsheet as dbSaveSpreadsheet } from '@/lib/db';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst FONT_FAMILIES = [\"Arial\", \"Verdana\", \"Tahoma\", \"Times New Roman\", \"Georgia\", \"Courier New\"];\nconst FONT_SIZES = [\"8pt\", \"9pt\", \"10pt\", \"11pt\", \"12pt\", \"14pt\", \"16pt\", \"18pt\", \"20pt\", \"24pt\", \"30pt\", \"36pt\"];\n\n\ninterface ToolbarProps {\n  spreadsheetName: string;\n  theme: string | undefined;\n  setTheme: (theme: string) => void;\n}\n\nexport default function Toolbar({ spreadsheetName, theme, setTheme }: ToolbarProps) {\n  const { \n    saveSpreadsheet, spreadsheet, setSpreadsheet: setContextSpreadsheet, activeCell, selectionRange, \n    updateSelectedCellStyle, formatSelectionAsTable, insertRow, deleteRow, insertColumn, deleteColumn,\n    appendRow, appendColumn, undo, redo, canUndo, canRedo, copySelectionToClipboard, \n    deleteSelectionContents, updateMultipleCellsRawValue, addConditionalFormatRule,\n    mergeSelection, unmergeSelection, findInSheet, setActiveCellAndSelection\n  } = useSpreadsheet();\n  const router = useRouter(); \n  const { toast } = useToast();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const [isFunctionsDialogOpen, setIsFunctionsDialogOpen] = React.useState(false);\n  const [isConditionalFormattingDialogOpen, setIsConditionalFormattingDialogOpen] = React.useState(false);\n  const [isFindDialogOpen, setIsFindDialogOpen] = React.useState(false);\n  const [findTerm, setFindTerm] = React.useState('');\n  const [findMatchCase, setFindMatchCase] = React.useState(false);\n  const [findEntireCell, setFindEntireCell] = React.useState(false);\n  const [findInFormulas, setFindInFormulas] = React.useState(false);\n\n\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (spreadsheet && setContextSpreadsheet) {\n      setContextSpreadsheet(prev => prev ? ({ ...prev, name: e.target.value, updatedAt: Date.now() }) : null);\n    }\n  };\n\n  const toggleTheme = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n\n  const selectedCellStyle = React.useMemo(() => {\n    if (!spreadsheet || !activeCell || !activeCell.sheetId) return {};\n    const sheet = spreadsheet.sheets.find(s => s.id === activeCell.sheetId);\n    if (!sheet) return {};\n    const cellData = sheet.cells[activeCell.rowIndex]?.[activeCell.colIndex];\n    if(cellData?.isMerged && cellData.mergeMaster){\n        return sheet.cells[cellData.mergeMaster.rowIndex]?.[cellData.mergeMaster.colIndex]?.style || {};\n    }\n    return cellData?.style || {};\n  }, [spreadsheet, activeCell]);\n\n  const handleToggleBold = () => { if (isSelectionActive) updateSelectedCellStyle({ bold: !selectedCellStyle?.bold }); };\n  const handleToggleItalic = () => { if (isSelectionActive) updateSelectedCellStyle({ italic: !selectedCellStyle?.italic }); };\n  const handleToggleUnderline = () => { if (isSelectionActive) updateSelectedCellStyle({ underline: !selectedCellStyle?.underline }); };\n  const handleFontFamilyChange = (family: string) => { if (isSelectionActive) updateSelectedCellStyle({ fontFamily: family }); };\n  const handleFontSizeChange = (size: string) => { if (isSelectionActive) updateSelectedCellStyle({ fontSize: size }); };\n\n\n  const handleExport = (format: 'xlsx' | 'csv') => {\n    setTimeout(() => toast({ title: \"Export\", description: `Export as ${format} is not yet implemented.`, variant: \"default\" }), 0);\n    console.log(`Export as ${format} (Not implemented)`);\n  };\n\n  const handleShare = () => {\n    if (!spreadsheet) {\n      setTimeout(() => toast({ title: \"Share Failed\", description: \"No spreadsheet data to share.\", variant: \"destructive\" }), 0);\n      return;\n    }\n    try {\n      const spreadsheetJson = JSON.stringify(spreadsheet, null, 2);\n      const blob = new Blob([spreadsheetJson], { type: \"application/json\" });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      const safeName = spreadsheet.name.replace(/[^a-z0-9]/gi, '_').toLowerCase() || \"spreadsheet\";\n      a.download = `${safeName}.offlinesheet.json`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      setTimeout(() => toast({ title: \"Shared\", description: \"Spreadsheet data downloaded as JSON.\" }), 0);\n    } catch (error) {\n      console.error(\"Failed to share spreadsheet:\", error);\n      setTimeout(() => toast({ title: \"Share Error\", description: \"Could not prepare spreadsheet for sharing.\", variant: \"destructive\" }), 0);\n    }\n  };\n\n  const handleLoadFromFileClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const handleFileSelected = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const text = e.target?.result as string;\n        const importedData = JSON.parse(text) as SpreadsheetData;\n\n        // Basic validation\n        if (!importedData || typeof importedData.id !== 'string' || typeof importedData.name !== 'string' || !Array.isArray(importedData.sheets)) {\n          throw new Error(\"Invalid file format.\");\n        }\n\n        const newId = uuidv4();\n        const originalName = importedData.name || \"Untitled\";\n        \n        const newSpreadsheetData: SpreadsheetData = {\n          ...importedData,\n          id: newId,\n          name: `Imported - ${originalName}`.substring(0, 50), // Limit name length\n          createdAt: Date.now(),\n          updatedAt: Date.now(),\n        };\n        \n        // Ensure sheets have rowCount and columnCount, and cells are initialized\n        newSpreadsheetData.sheets = newSpreadsheetData.sheets.map(sheet => ({\n          ...sheet,\n          rowCount: sheet.rowCount || 50, // Provide defaults if missing\n          columnCount: sheet.columnCount || 20,\n          cells: sheet.cells || Array.from({ length: sheet.rowCount || 50 }, () => \n            Array.from({ length: sheet.columnCount || 20 }, () => ({ id: '', rawValue: ''}))\n          )\n        }));\n\n\n        const saveResult = await dbSaveSpreadsheet(newSpreadsheetData);\n        if (saveResult.success) {\n          setTimeout(() => toast({ title: \"Import Successful\", description: `Spreadsheet \"${newSpreadsheetData.name}\" imported and saved.` }), 0);\n          router.push(`/spreadsheet/${newId}`);\n        } else {\n          throw new Error(saveResult.error || \"Failed to save imported spreadsheet.\");\n        }\n\n      } catch (error: any) {\n        console.error(\"Failed to load spreadsheet from file:\", error);\n        setTimeout(() => toast({ title: \"Import Error\", description: `Could not load spreadsheet: ${error.message}`, variant: \"destructive\" }), 0);\n      } finally {\n        // Reset file input to allow selecting the same file again\n        if(fileInputRef.current) fileInputRef.current.value = \"\";\n      }\n    };\n    reader.readAsText(file);\n  };\n  \n  const handleInsertRowAction = () => { if (spreadsheet?.activeSheetId) insertRow(spreadsheet.activeSheetId, activeCell?.rowIndex ?? 0); };\n  const handleDeleteRowAction = () => { if (spreadsheet && activeCell) deleteRow(activeCell.sheetId, activeCell.rowIndex); };\n  const handleInsertColumnAction = () => {  if (spreadsheet?.activeSheetId) insertColumn(spreadsheet.activeSheetId, activeCell?.colIndex ?? 0); };\n  const handleDeleteColumnAction = () => { if (spreadsheet && activeCell) deleteColumn(activeCell.sheetId, activeCell.colIndex); };\n  const handleAppendRowAction = () => { if (spreadsheet?.activeSheetId) appendRow(spreadsheet.activeSheetId); };\n  const handleAppendColumnAction = () => { if (spreadsheet?.activeSheetId) appendColumn(spreadsheet.activeSheetId); };\n  \n  const setTextAlign = (align: 'left' | 'center' | 'right') => { if (isSelectionActive) updateSelectedCellStyle({ textAlign: align }); };\n  const handleNewSpreadsheet = () => router.push('/'); \n  const handleEditSelectedCells = () => {\n    if (!isSelectionActive) return;\n    const newValue = window.prompt(\"Enter new value for all selected cells:\", \"\");\n    if (newValue !== null) updateMultipleCellsRawValue(newValue);\n  };\n  const handleFormatAsTableAction = () => { if (isSelectionActive) formatSelectionAsTable(); };\n\n  const handleFindNext = () => {\n    if (!spreadsheet?.activeSheetId || !findTerm) return;\n    const foundCell = findInSheet(findTerm, {\n        matchCase: findMatchCase,\n        entireCell: findEntireCell,\n        searchFormulas: findInFormulas,\n        sheetId: spreadsheet.activeSheetId,\n        from: activeCell \n    });\n    if (foundCell) {\n        setActiveCellAndSelection(foundCell, false, false);\n    } else {\n        setTimeout(() => toast({title: \"Find\", description: \"No more occurrences found.\"}), 0);\n    }\n  };\n\n  const isSelectionActive = !!selectionRange; \n\n  return (\n    <div className=\"p-2 border-b bg-card flex flex-col md:flex-row items-start md:items-center justify-between gap-2 shadow-sm flex-wrap print:hidden\">\n      <input type=\"file\" ref={fileInputRef} onChange={handleFileSelected} accept=\".json,.offlinesheet.json\" style={{ display: 'none' }} />\n      <div className=\"flex items-center gap-2 w-full md:w-auto\">\n        <Link href=\"/\" aria-label=\"Back to dashboard\">\n          <OfflineSheetLogo className=\"h-8 w-8\"/>\n        </Link>\n        <Input \n          value={spreadsheetName} \n          onChange={handleNameChange}\n          className=\"font-semibold text-lg w-auto min-w-[150px] max-w-[300px]\"\n          aria-label=\"Spreadsheet Name\"\n          disabled={!spreadsheet}\n        />\n        <Button onClick={toggleTheme} variant=\"ghost\" size=\"icon\" className=\"ml-auto md:ml-2\" title={theme === 'dark' ? 'Switch to Light Mode' : 'Switch to Dark Mode'}>\n            {theme === 'dark' ? <Sun /> : <Moon />}\n        </Button>\n         <Menubar className=\"border-none shadow-none p-0 h-auto\">\n          <MenubarMenu>\n            <MenubarTrigger className=\"px-3 py-1.5\">File</MenubarTrigger>\n            <MenubarContent>\n              <MenubarItem onClick={handleNewSpreadsheet}><FilePlus className=\"mr-2 h-4 w-4\" /> New</MenubarItem>\n              <MenubarSeparator />\n              <MenubarItem onClick={saveSpreadsheet} disabled={!spreadsheet}><Save className=\"mr-2 h-4 w-4\" /> Save</MenubarItem>\n              <MenubarItem onClick={handleLoadFromFileClick}><Upload className=\"mr-2 h-4 w-4\" /> Load from File...</MenubarItem>\n              <MenubarSeparator />\n              <MenubarItem onClick={() => handleExport('xlsx')}><Download className=\"mr-2 h-4 w-4\" /> Export as .xlsx</MenubarItem>\n              <MenubarItem onClick={() => handleExport('csv')}><FileText className=\"mr-2 h-4 w-4\" /> Export as .csv</MenubarItem>\n              <MenubarSeparator />\n              <MenubarItem onClick={() => window.print()}><Printer className=\"mr-2 h-4 w-4\" /> Print</MenubarItem>\n              <MenubarSeparator />\n              <MenubarItem onClick={handleShare}><Share2 className=\"mr-2 h-4 w-4\" /> Share (Download JSON)...</MenubarItem>\n              <MenubarSeparator />\n              <MenubarItem asChild><Link href=\"/\"><Home className=\"mr-2 h-4 w-4\" /> Dashboard</Link></MenubarItem>\n            </MenubarContent>\n          </MenubarMenu>\n\n          <MenubarMenu>\n            <MenubarTrigger className=\"px-3 py-1.5\">Edit</MenubarTrigger>\n            <MenubarContent>\n              <MenubarItem onClick={undo} disabled={!canUndo}><Undo className=\"mr-2 h-4 w-4\" /> Undo <MenubarShortcut>Ctrl+Z</MenubarShortcut></MenubarItem>\n              <MenubarItem onClick={redo} disabled={!canRedo}><Redo className=\"mr-2 h-4 w-4\" /> Redo <MenubarShortcut>Ctrl+Y</MenubarShortcut></MenubarItem>\n              <MenubarSeparator />\n              <MenubarItem onClick={copySelectionToClipboard} disabled={!isSelectionActive}><ClipboardCopy className=\"mr-2 h-4 w-4\" /> Copy</MenubarItem>\n              <MenubarSeparator />\n              <MenubarItem onClick={deleteSelectionContents} disabled={!isSelectionActive}><Eraser className=\"mr-2 h-4 w-4\" /> Clear Contents</MenubarItem>\n              <MenubarItem onClick={handleEditSelectedCells} disabled={!isSelectionActive}>\n                <Edit className=\"mr-2 h-4 w-4\" /> Edit Selected Cells...\n              </MenubarItem>\n              <MenubarSeparator />\n              <MenubarItem onClick={() => setIsFindDialogOpen(true)}><Search className=\"mr-2 h-4 w-4\" /> Find...</MenubarItem>\n            </MenubarContent>\n          </MenubarMenu>\n          \n          <MenubarMenu>\n            <MenubarTrigger className=\"px-3 py-1.5\">Insert</MenubarTrigger>\n            <MenubarContent>\n                <MenubarItem onClick={handleInsertRowAction} disabled={!spreadsheet}><RowsIcon className=\"mr-2 h-4 w-4\" /> Insert Row Above</MenubarItem>\n                <MenubarItem onClick={handleAppendRowAction} disabled={!spreadsheet}><PlusSquare className=\"mr-2 h-4 w-4\" /> Add Row to End</MenubarItem>\n                <MenubarSeparator />\n                <MenubarItem onClick={handleInsertColumnAction} disabled={!spreadsheet}><Columns className=\"mr-2 h-4 w-4\" /> Insert Column Left</MenubarItem>\n                <MenubarItem onClick={handleAppendColumnAction} disabled={!spreadsheet}><PlusSquare className=\"mr-2 h-4 w-4\" /> Add Column to End</MenubarItem>\n                 <MenubarSeparator />\n                <MenubarItem onClick={handleDeleteRowAction} disabled={!activeCell}><Trash2 className=\"mr-2 h-4 w-4 text-destructive\" /> Delete Active Row</MenubarItem>\n                <MenubarItem onClick={handleDeleteColumnAction} disabled={!activeCell}><Trash2 className=\"mr-2 h-4 w-4 text-destructive\" /> Delete Active Column</MenubarItem>\n                <MenubarSeparator />\n                <MenubarItem onClick={handleFormatAsTableAction} disabled={!isSelectionActive}>\n                    <GridIcon className=\"mr-2 h-4 w-4\" /> Format as Table\n                </MenubarItem>\n                 <MenubarItem onClick={() => setIsFunctionsDialogOpen(true)}>\n                    <Sigma className=\"mr-2 h-4 w-4\" /> Functions...\n                </MenubarItem>\n            </MenubarContent>\n          </MenubarMenu>\n\n          <MenubarMenu>\n            <MenubarTrigger className=\"px-3 py-1.5\">Format</MenubarTrigger>\n            <MenubarContent>\n              <MenubarGroup>\n                  <MenubarItem onClick={handleToggleBold} disabled={!isSelectionActive} className={cn(selectedCellStyle?.bold && \"bg-accent\")}>\n                    <Bold className=\"mr-2 h-4 w-4\" /> Bold\n                  </MenubarItem>\n                  <MenubarItem onClick={handleToggleItalic} disabled={!isSelectionActive} className={cn(selectedCellStyle?.italic && \"bg-accent\")}>\n                    <Italic className=\"mr-2 h-4 w-4\" /> Italic\n                  </MenubarItem>\n                  <MenubarItem onClick={handleToggleUnderline} disabled={!isSelectionActive} className={cn(selectedCellStyle?.underline && \"bg-accent\")}>\n                    <Underline className=\"mr-2 h-4 w-4\" /> Underline\n                  </MenubarItem>\n              </MenubarGroup>\n              <MenubarSeparator />\n                <MenubarSub>\n                    <MenubarSubTrigger disabled={!isSelectionActive}><Palette className=\"mr-2 h-4 w-4\" /> Font Family</MenubarSubTrigger>\n                    <MenubarSubContent>\n                        {FONT_FAMILIES.map(family => (\n                            <MenubarItem key={family} onClick={() => handleFontFamilyChange(family)} className={cn(selectedCellStyle?.fontFamily === family && \"bg-accent\")}>{family}</MenubarItem>\n                        ))}\n                    </MenubarSubContent>\n                </MenubarSub>\n                <MenubarSub>\n                    <MenubarSubTrigger disabled={!isSelectionActive}><Pilcrow className=\"mr-2 h-4 w-4\" /> Font Size</MenubarSubTrigger>\n                    <MenubarSubContent>\n                        {FONT_SIZES.map(size => (\n                            <MenubarItem key={size} onClick={() => handleFontSizeChange(size)} className={cn(selectedCellStyle?.fontSize === size && \"bg-accent\")}>{size}</MenubarItem>\n                        ))}\n                    </MenubarSubContent>\n                </MenubarSub>\n              <MenubarSeparator />\n              <MenubarSub>\n                  <MenubarSubTrigger disabled={!isSelectionActive}>\n                      <AlignLeft className=\"mr-2 h-4 w-4\" /> Align Text\n                  </MenubarSubTrigger>\n                  <MenubarSubContent>\n                      <MenubarItem onClick={() => setTextAlign('left')} className={cn(selectedCellStyle?.textAlign === 'left' && \"bg-accent\")}><AlignLeft className=\"mr-2 h-4 w-4\" /> Left</MenubarItem>\n                      <MenubarItem onClick={() => setTextAlign('center')} className={cn(selectedCellStyle?.textAlign === 'center' && \"bg-accent\")}><AlignCenter className=\"mr-2 h-4 w-4\" /> Center</MenubarItem>\n                      <MenubarItem onClick={() => setTextAlign('right')} className={cn(selectedCellStyle?.textAlign === 'right' && \"bg-accent\")}><AlignRight className=\"mr-2 h-4 w-4\" /> Right</MenubarItem>\n                  </MenubarSubContent>\n              </MenubarSub>\n              <MenubarSeparator />\n              <MenubarItem onClick={mergeSelection} disabled={!isSelectionActive}><Merge className=\"mr-2 h-4 w-4\" /> Merge & Center</MenubarItem>\n              <MenubarItem onClick={unmergeSelection} disabled={!activeCell}><Split className=\"mr-2 h-4 w-4\" /> Unmerge Cells</MenubarItem>\n              <MenubarSeparator />\n              <MenubarItem onClick={() => setIsConditionalFormattingDialogOpen(true)}>\n                <Wand2 className=\"mr-2 h-4 w-4\" /> Conditional Formatting...\n              </MenubarItem>\n            </MenubarContent>\n          </MenubarMenu>\n        </Menubar>\n      </div>\n\n      <div className=\"flex items-center gap-1 flex-wrap mt-2 md:mt-0 border-t md:border-t-0 pt-2 md:pt-0 w-full md:w-auto\">\n        <Button variant=\"ghost\" size=\"icon\" onClick={saveSpreadsheet} aria-label=\"Save Spreadsheet\" title=\"Save\" disabled={!spreadsheet}><Save /></Button>\n        <Button variant=\"ghost\" size=\"icon\" onClick={undo} aria-label=\"Undo\" title=\"Undo\" disabled={!canUndo}><Undo /></Button>\n        <Button variant=\"ghost\" size=\"icon\" onClick={redo} aria-label=\"Redo\" title=\"Redo\" disabled={!canRedo}><Redo /></Button>\n        <Button variant=\"ghost\" size=\"icon\" onClick={() => window.print()} aria-label=\"Print Spreadsheet\" title=\"Print\"><Printer /></Button>\n        <Button variant=\"ghost\" size=\"icon\" onClick={handleShare} aria-label=\"Share Spreadsheet (Download JSON)\" title=\"Share (Download JSON)\"><Share2 /></Button>\n        \n        <Separator orientation=\"vertical\" className=\"h-6 mx-1\"/>\n        <Button variant=\"ghost\" size=\"icon\" onClick={copySelectionToClipboard} aria-label=\"Copy Selection\" title=\"Copy Selection\" disabled={!isSelectionActive}><ClipboardCopy /></Button>\n        <Button variant=\"ghost\" size=\"icon\" onClick={deleteSelectionContents} aria-label=\"Clear Contents of Selection\" title=\"Clear Contents\" disabled={!isSelectionActive}><Eraser /></Button>\n        \n        <Separator orientation=\"vertical\" className=\"h-6 mx-1\"/>\n        \n        <Select value={selectedCellStyle?.fontFamily || FONT_FAMILIES[0]} onValueChange={handleFontFamilyChange} disabled={!isSelectionActive}>\n          <SelectTrigger className=\"h-9 w-[120px] text-xs\" title=\"Font Family\">\n            <SelectValue placeholder=\"Font\" />\n          </SelectTrigger>\n          <SelectContent>\n            {FONT_FAMILIES.map(family => <SelectItem key={family} value={family} className=\"text-xs\">{family}</SelectItem>)}\n          </SelectContent>\n        </Select>\n\n        <Select value={selectedCellStyle?.fontSize || FONT_SIZES[4]} onValueChange={handleFontSizeChange} disabled={!isSelectionActive}>\n          <SelectTrigger className=\"h-9 w-[70px] text-xs\" title=\"Font Size\">\n            <SelectValue placeholder=\"Size\" />\n          </SelectTrigger>\n          <SelectContent>\n            {FONT_SIZES.map(size => <SelectItem key={size} value={size} className=\"text-xs\">{size.replace('pt','')}</SelectItem>)}\n          </SelectContent>\n        </Select>\n\n        <Separator orientation=\"vertical\" className=\"h-6 mx-1\"/>\n\n        <Button \n          variant={selectedCellStyle?.bold ? \"secondary\" : \"ghost\"} \n          size=\"icon\" \n          onClick={handleToggleBold} \n          aria-label=\"Bold\" \n          title=\"Bold (Ctrl+B)\"\n          disabled={!isSelectionActive}\n        ><Bold /></Button>\n        <Button \n          variant={selectedCellStyle?.italic ? \"secondary\" : \"ghost\"} \n          size=\"icon\" \n          onClick={handleToggleItalic} \n          aria-label=\"Italic\" \n          title=\"Italic (Ctrl+I)\"\n          disabled={!isSelectionActive}\n        ><Italic /></Button>\n        <Button \n          variant={selectedCellStyle?.underline ? \"secondary\" : \"ghost\"} \n          size=\"icon\" \n          onClick={handleToggleUnderline} \n          aria-label=\"Underline\" \n          title=\"Underline (Ctrl+U)\"\n          disabled={!isSelectionActive}\n        ><Underline /></Button>\n\n        <Separator orientation=\"vertical\" className=\"h-6 mx-1\"/>\n        \n        <Button \n          variant={selectedCellStyle?.textAlign === 'left' ? \"secondary\" : \"ghost\"} \n          size=\"icon\" \n          onClick={() => setTextAlign('left')} \n          aria-label=\"Align Left\" \n          title=\"Align Left\"\n          disabled={!isSelectionActive}\n        ><AlignLeft /></Button>\n        <Button \n          variant={selectedCellStyle?.textAlign === 'center' ? \"secondary\" : \"ghost\"} \n          size=\"icon\" \n          onClick={() => setTextAlign('center')} \n          aria-label=\"Align Center\"\n          title=\"Align Center\" \n          disabled={!isSelectionActive}\n        ><AlignCenter /></Button>\n        <Button \n          variant={selectedCellStyle?.textAlign === 'right' ? \"secondary\" : \"ghost\"} \n          size=\"icon\" \n          onClick={() => setTextAlign('right')} \n          aria-label=\"Align Right\" \n          title=\"Align Right\"\n          disabled={!isSelectionActive}\n        ><AlignRight /></Button>\n         <Separator orientation=\"vertical\" className=\"h-6 mx-1\"/>\n         <Button variant=\"ghost\" size=\"icon\" onClick={mergeSelection} disabled={!isSelectionActive} title=\"Merge & Center\"><Merge /></Button>\n         <Button variant=\"ghost\" size=\"icon\" onClick={unmergeSelection} disabled={!activeCell} title=\"Unmerge Cells\"><Split /></Button>\n      </div>\n      <AvailableFunctionsDialog isOpen={isFunctionsDialogOpen} onOpenChange={setIsFunctionsDialogOpen} />\n      <ConditionalFormattingDialog \n        isOpen={isConditionalFormattingDialogOpen} \n        onOpenChange={setIsConditionalFormattingDialogOpen}\n        activeSheetId={spreadsheet?.activeSheetId}\n        selectionRange={selectionRange}\n      />\n      \n      <Dialog open={isFindDialogOpen} onOpenChange={setIsFindDialogOpen}>\n        <DialogContent className=\"sm:max-w-md\">\n          <DialogHeader>\n            <DialogTitle>Find</DialogTitle>\n            <DialogDescription>Find text in the current sheet.</DialogDescription>\n          </DialogHeader>\n          <div className=\"grid gap-4 py-4\">\n            <div className=\"grid grid-cols-4 items-center gap-4\">\n              <Label htmlFor=\"find-term\" className=\"text-right\">Find what:</Label>\n              <Input id=\"find-term\" value={findTerm} onChange={(e) => setFindTerm(e.target.value)} className=\"col-span-3\" />\n            </div>\n            <div className=\"flex items-center space-x-2 col-start-2 col-span-3\">\n                <Checkbox id=\"find-match-case\" checked={findMatchCase} onCheckedChange={(checked) => setFindMatchCase(Boolean(checked))} />\n                <Label htmlFor=\"find-match-case\" className=\"text-sm font-normal\">Match case</Label>\n            </div>\n             <div className=\"flex items-center space-x-2 col-start-2 col-span-3\">\n                <Checkbox id=\"find-entire-cell\" checked={findEntireCell} onCheckedChange={(checked) => setFindEntireCell(Boolean(checked))} />\n                <Label htmlFor=\"find-entire-cell\" className=\"text-sm font-normal\">Match entire cell contents</Label>\n            </div>\n            <div className=\"flex items-center space-x-2 col-start-2 col-span-3\">\n                <Checkbox id=\"find-in-formulas\" checked={findInFormulas} onCheckedChange={(checked) => setFindInFormulas(Boolean(checked))} />\n                <Label htmlFor=\"find-in-formulas\" className=\"text-sm font-normal\">Search in formulas</Label>\n            </div>\n          </div>\n          <DialogFooter className=\"sm:justify-between\">\n            <DialogClose asChild>\n              <Button type=\"button\" variant=\"outline\">Close</Button>\n            </DialogClose>\n            <Button type=\"button\" onClick={handleFindNext} disabled={!findTerm}>Find Next</Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6075, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6227, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/spreadsheet/SheetTabs.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport type { SheetData } from \"@/types/spreadsheet\";\nimport { useSpreadsheet } from \"@/hooks/useSpreadsheet\";\nimport { PlusCircle, Edit2, Trash2, Check, X } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { useState, useRef, useEffect } from 'react';\nimport { Input } from \"@/components/ui/input\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { createInitialSheet } from '@/types/spreadsheet';\nimport { useToast } from \"@/hooks/use-toast\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\n\n\ninterface SheetTabsProps {\n  sheets: SheetData[];\n  activeSheetId: string;\n}\n\nexport default function SheetTabs({ sheets, activeSheetId }: SheetTabsProps) {\n  const { spreadsheet, setSpreadsheet, saveSpreadsheet } = useSpreadsheet();\n  const [editingSheetId, setEditingSheetId] = useState<string | null>(null);\n  const [editingName, setEditingName] = useState('');\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    if (editingSheetId && inputRef.current) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, [editingSheetId]);\n\n  const handleTabClick = (sheetId: string) => {\n    if (spreadsheet && setSpreadsheet && spreadsheet.activeSheetId !== sheetId) {\n      setSpreadsheet({ ...spreadsheet, activeSheetId: sheetId, updatedAt: Date.now() });\n    }\n  };\n\n  const handleAddSheet = () => {\n    if (spreadsheet && setSpreadsheet) {\n      const newSheetName = `Sheet${spreadsheet.sheets.length + 1}`;\n      const newSheetId = uuidv4();\n      const newSheet = createInitialSheet(newSheetId, newSheetName);\n      const updatedSheets = [...spreadsheet.sheets, newSheet];\n      setSpreadsheet({\n        ...spreadsheet,\n        sheets: updatedSheets,\n        activeSheetId: newSheetId,\n        updatedAt: Date.now(),\n      });\n      // Optionally save immediately or let user save via toolbar\n      // saveSpreadsheet(); \n    }\n  };\n\n  const handleRenameSheet = (sheetId: string, currentName: string) => {\n    setEditingSheetId(sheetId);\n    setEditingName(currentName);\n  };\n\n  const handleSaveRename = () => {\n    if (spreadsheet && setSpreadsheet && editingSheetId && editingName.trim()) {\n      const updatedSheets = spreadsheet.sheets.map(sheet =>\n        sheet.id === editingSheetId ? { ...sheet, name: editingName.trim() } : sheet\n      );\n      setSpreadsheet({ ...spreadsheet, sheets: updatedSheets, updatedAt: Date.now() });\n      setEditingSheetId(null);\n      setEditingName('');\n    } else if (!editingName.trim()) {\n        toast({title: \"Error\", description: \"Sheet name cannot be empty.\", variant: \"destructive\"});\n    }\n  };\n\n  const handleCancelRename = () => {\n    setEditingSheetId(null);\n    setEditingName('');\n  };\n\n  const handleDeleteSheet = (sheetIdToDelete: string) => {\n     if (spreadsheet && setSpreadsheet) {\n        if (spreadsheet.sheets.length <= 1) {\n            toast({title: \"Cannot Delete\", description: \"A spreadsheet must have at least one sheet.\", variant: \"destructive\"});\n            return;\n        }\n        const updatedSheets = spreadsheet.sheets.filter(sheet => sheet.id !== sheetIdToDelete);\n        let newActiveSheetId = spreadsheet.activeSheetId;\n        if (spreadsheet.activeSheetId === sheetIdToDelete) {\n            // If active sheet is deleted, make the first remaining sheet active\n            newActiveSheetId = updatedSheets[0].id;\n        }\n        setSpreadsheet({\n            ...spreadsheet,\n            sheets: updatedSheets,\n            activeSheetId: newActiveSheetId,\n            updatedAt: Date.now(),\n        });\n     }\n  };\n\n\n  return (\n    <div className=\"p-2 border-t bg-card flex items-center gap-1 overflow-x-auto\">\n      {sheets.map((sheet) => (\n        <div key={sheet.id} className=\"flex items-center\">\n          {editingSheetId === sheet.id ? (\n            <div className=\"flex items-center gap-1 p-1 bg-background rounded-md\">\n              <Input\n                ref={inputRef}\n                type=\"text\"\n                value={editingName}\n                onChange={(e) => setEditingName(e.target.value)}\n                onBlur={handleSaveRename} // Save on blur\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter') handleSaveRename();\n                  if (e.key === 'Escape') handleCancelRename();\n                }}\n                className=\"h-8 text-sm\"\n                aria-label=\"Edit sheet name\"\n              />\n              <Button variant=\"ghost\" size=\"icon\" onClick={handleSaveRename} className=\"h-8 w-8\" aria-label=\"Save sheet name\"><Check size={16}/></Button>\n              <Button variant=\"ghost\" size=\"icon\" onClick={handleCancelRename} className=\"h-8 w-8\" aria-label=\"Cancel rename\"><X size={16}/></Button>\n            </div>\n          ) : (\n            <Button\n              variant={sheet.id === activeSheetId ? \"secondary\" : \"ghost\"}\n              size=\"sm\"\n              onClick={() => handleTabClick(sheet.id)}\n              onDoubleClick={() => handleRenameSheet(sheet.id, sheet.name)}\n              className={cn(\n                \"px-3 py-1.5 h-auto text-sm rounded-md\",\n                sheet.id === activeSheetId && \"font-semibold bg-primary text-primary-foreground hover:bg-primary/90\"\n              )}\n            >\n              {sheet.name}\n            </Button>\n          )}\n          {editingSheetId !== sheet.id && (\n            <div className=\"flex\">\n                <Button variant=\"ghost\" size=\"icon\" onClick={() => handleRenameSheet(sheet.id, sheet.name)} className=\"h-6 w-6 opacity-60 hover:opacity-100\" aria-label={`Rename ${sheet.name}`}>\n                    <Edit2 size={12} />\n                </Button>\n                 <AlertDialog>\n                  <AlertDialogTrigger asChild>\n                    <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 opacity-60 hover:opacity-100 text-destructive hover:text-destructive\" aria-label={`Delete ${sheet.name}`}>\n                        <Trash2 size={12} />\n                    </Button>\n                  </AlertDialogTrigger>\n                  <AlertDialogContent>\n                    <AlertDialogHeader>\n                      <AlertDialogTitle>Delete Sheet \"{sheet.name}\"?</AlertDialogTitle>\n                      <AlertDialogDescription>\n                        This action cannot be undone. Are you sure you want to delete this sheet?\n                      </AlertDialogDescription>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                      <AlertDialogCancel>Cancel</AlertDialogCancel>\n                      <AlertDialogAction onClick={() => handleDeleteSheet(sheet.id)}>\n                        Delete\n                      </AlertDialogAction>\n                    </AlertDialogFooter>\n                  </AlertDialogContent>\n                </AlertDialog>\n            </div>\n          )}\n        </div>\n      ))}\n      <Button variant=\"ghost\" size=\"icon\" onClick={handleAddSheet} className=\"ml-2\" aria-label=\"Add new sheet\">\n        <PlusCircle size={18} />\n      </Button>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6600, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/spreadsheet/Cell.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { FocusEvent, MouseEvent as ReactMouseEvent } from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport type { CellData, CellAddress, ConditionalFormatRule, SelectionRange } from '@/types/spreadsheet';\nimport { Input } from \"@/components/ui/input\";\nimport { cn } from '@/lib/utils';\nimport { getCellId as getCellIdUtil, isCellAddressInRange } from '@/types/spreadsheet';\nimport { useSpreadsheet } from '@/hooks/useSpreadsheet';\n\n\ninterface CellProps {\n  cellData: CellData;\n  address: CellAddress;\n  onCellChange: (rowIndex: number, colIndex: number, rawValue: string | number) => void;\n  isActive: boolean; \n  isInSelectionRange: boolean;\n  isFormulaHighlightTarget: boolean;\n  onSelect: (address: CellAddress, isShiftKey: boolean, isDrag: boolean) => void; \n  startEditing: (address: CellAddress) => void; \n  stopEditing: () => void;\n  isEditingThisCell: boolean;\n  width?: number;\n  height?: number;\n  isActivelyEditingFormulaGlobal?: boolean;\n  conditionalFormatRules?: ConditionalFormatRule[];\n  rowSpan?: number;\n  colSpan?: number;\n  isActuallyMergedSubCell?: boolean; // True if this cell is part of a merge but not the top-left\n}\n\n\nfunction getConditionalFormatClass(\n    cellData: CellData,\n    address: CellAddress,\n    rules?: ConditionalFormatRule[],\n    spreadsheet?: any // Pass full spreadsheet if needed for context, not used currently\n): string | null {\n    if (rules) {\n        for (const rule of rules) {\n            if (isCellAddressInRange(address, rule.range)) { // Updated to use new utility\n                const cellValue = typeof cellData.value === 'number' ? cellData.value : parseFloat(String(cellData.value));\n                let conditionMet = false;\n                if (!isNaN(cellValue)) {\n                    switch (rule.type) {\n                        case 'greaterThan': conditionMet = cellValue > rule.value; break;\n                        case 'lessThan': conditionMet = cellValue < rule.value; break;\n                        case 'equalTo': conditionMet = cellValue === rule.value; break;\n                    }\n                }\n                if (conditionMet) return `cf-${rule.styleKey}`;\n            }\n        }\n    }\n    return null;\n}\n\n\nexport default function Cell({ \n  cellData, \n  address, \n  onCellChange, \n  isActive, \n  isInSelectionRange,\n  isFormulaHighlightTarget,\n  onSelect,\n  startEditing,\n  stopEditing,\n  isEditingThisCell,\n  width,\n  height,\n  isActivelyEditingFormulaGlobal,\n  conditionalFormatRules,\n  rowSpan = 1,\n  colSpan = 1,\n  isActuallyMergedSubCell = false,\n}: CellProps) {\n  const [editValue, setEditValue] = useState(cellData.rawValue || '');\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { spreadsheet } = useSpreadsheet();\n\n\n  useEffect(() => {\n    if (!isEditingThisCell) {\n      setEditValue(cellData.rawValue?.toString() || '');\n    }\n  }, [cellData.rawValue, isEditingThisCell]);\n\n  useEffect(() => {\n    if (isEditingThisCell && inputRef.current) {\n      inputRef.current.focus();\n      inputRef.current.selectionStart = inputRef.current.selectionEnd = inputRef.current.value.length;\n    }\n  }, [isEditingThisCell]);\n  \n  const handleMouseDown = (e: ReactMouseEvent<HTMLTableCellElement>) => {\n    if (isEditingThisCell && inputRef.current && inputRef.current.contains(e.target as Node)) {\n      return; \n    }\n    onSelect(address, e.shiftKey, false); \n  };\n  \n  const handleClick = (e: ReactMouseEvent<HTMLTableCellElement>) => {\n    if (isActivelyEditingFormulaGlobal) {\n        e.preventDefault(); \n        return;\n    }\n    if (isEditingThisCell && inputRef.current && inputRef.current.contains(e.target as Node)) {\n        return;\n    }\n    // For merged cells, editing should always start on the master cell.\n    // The Grid component should ideally ensure that clicks on merged cells redirect to master for editing.\n    // For now, if a subordinate merged cell is clicked for editing, it might be confusing.\n    // The `startEditing` logic in Grid will ensure only the activeCell (which should be master) is editable.\n    if (isActive && !isEditingThisCell) { // Single click on an already active cell starts editing\n        startEditing(address);\n    }\n  };\n\n  const handleDoubleClick = (e: ReactMouseEvent<HTMLTableCellElement>) => {\n    if (isActivelyEditingFormulaGlobal) {\n        e.preventDefault();\n        return;\n    }\n    if (!isEditingThisCell) {\n        startEditing(address);\n    }\n  };\n\n  const handleMouseEnter = (e: ReactMouseEvent<HTMLTableCellElement>) => {\n    if (e.buttons === 1 && !isActivelyEditingFormulaGlobal) { \n      onSelect(address, false, true); \n    } else if (e.buttons === 1 && isActivelyEditingFormulaGlobal) {\n        // Formula drag selection logic is handled in Grid's onSelect\n        onSelect(address, false, true); // Still call onSelect for formula highlighting\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEditValue(e.target.value);\n  };\n\n  const handleBlur = (e: FocusEvent<HTMLInputElement>) => {\n    // Check if focus is moving to a formula bar button\n     if (e.relatedTarget && (e.relatedTarget as HTMLElement).closest('.formula-bar-action-button')) {\n        return; // Don't blur if focus is moving to a formula bar button\n    }\n    if (String(editValue) !== String(cellData.rawValue) || String(editValue).startsWith('=')) { \n      onCellChange(address.rowIndex, address.colIndex, editValue);\n    }\n    stopEditing(); \n  };\n  \n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter' || e.key === 'Tab') {\n      e.preventDefault(); \n      inputRef.current?.blur();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      setEditValue(cellData.rawValue?.toString() || ''); \n      inputRef.current?.blur(); \n    }\n  };\n\n  const cellStyleFromData = cellData.style || {};\n  const conditionalClass = getConditionalFormatClass(cellData, address, conditionalFormatRules, spreadsheet || undefined);\n\n  const appliedStyle: React.CSSProperties = {\n    fontWeight: cellStyleFromData.bold ? 'bold' : 'normal',\n    fontStyle: cellStyleFromData.italic ? 'italic' : 'normal',\n    textDecoration: cellStyleFromData.underline ? 'underline' : 'none',\n    textAlign: cellStyleFromData.textAlign as React.CSSProperties['textAlign'],\n    fontFamily: cellStyleFromData.fontFamily || 'inherit',\n    fontSize: cellStyleFromData.fontSize || 'inherit',\n    width: width ? `${width}px` : undefined,\n    height: height ? `${height}px` : undefined,\n  };\n\n  const cellClasses = cn(\n    \"p-1.5 border text-sm truncate min-w-[var(--default-cell-width,120px)] relative select-none outline-none\",\n    \"overflow-hidden whitespace-nowrap\",\n    {\"font-bold\": cellData.style?.bold},\n    {\"italic\": cellData.style?.italic},\n    {\"underline\": cellData.style?.underline},\n    cellData.style?.textAlign === 'left' && \"text-left\",\n    cellData.style?.textAlign === 'center' && \"text-center\",\n    cellData.style?.textAlign === 'right' && \"text-right\",\n    cellData.style?.hasBorder && \"border-gray-400\",\n    isInSelectionRange && !isActive && !isActivelyEditingFormulaGlobal && \"bg-primary/20\", \n    isFormulaHighlightTarget && \"bg-green-500/30 border-green-700 border-dashed !border-2 z-10\", \n    conditionalClass,\n    isActuallyMergedSubCell && \"bg-muted/10 pointer-events-none\", // Style for non-master merged cells\n    // For merged cells, ensure text alignment from master cell style is respected\n    (cellData.colSpan && cellData.colSpan > 1 || cellData.rowSpan && cellData.rowSpan > 1) && cellData.style?.textAlign === 'center' && \"text-center items-center justify-center\",\n    (cellData.colSpan && cellData.colSpan > 1 || cellData.rowSpan && cellData.rowSpan > 1) && cellData.style?.textAlign === 'left' && \"text-left items-start justify-start\",\n    (cellData.colSpan && cellData.colSpan > 1 || cellData.rowSpan && cellData.rowSpan > 1) && cellData.style?.textAlign === 'right' && \"text-right items-end justify-end\",\n  );\n\n  if (isActuallyMergedSubCell) {\n    return (\n      <td \n        className={cn(cellClasses, \"border-transparent\")} // Sub-cells might not need their own borders if master has it\n        style={{...appliedStyle, minWidth: 0, minHeight: 0, width:0, height:0, padding:0, margin:0, overflow: 'hidden'}} // Effectively hide\n        // No interaction for sub-cells of a merge\n      />\n    );\n  }\n\n\n  if (isEditingThisCell && !isActivelyEditingFormulaGlobal) { \n    return (\n      <td \n        className={cn(cellClasses, \"p-0 z-20\", {\"border-gray-400\": cellData.style?.hasBorder})} \n        style={{...appliedStyle, minWidth: width ? `${width}px` : '120px', minHeight: height ? `${height}px` : '28px'}}\n        onMouseDown={(e) => { \n            if (inputRef.current && !inputRef.current.contains(e.target as Node)) {\n                handleMouseDown(e);\n            }\n        }}\n        onMouseEnter={handleMouseEnter}\n        rowSpan={rowSpan}\n        colSpan={colSpan}\n      >\n        {isActive && !isActivelyEditingFormulaGlobal && (\n            <div className=\"absolute inset-[-1px] border-2 border-primary pointer-events-none rounded-[1px] z-30\" />\n        )}\n        <Input\n          ref={inputRef}\n          type=\"text\"\n          value={editValue}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          className=\"w-full h-full p-1.5 box-border text-sm outline-none rounded-none border-transparent focus:ring-0 focus:border-transparent bg-background\"\n          style={{ \n            fontWeight: appliedStyle.fontWeight,\n            fontStyle: appliedStyle.fontStyle,\n            textDecoration: appliedStyle.textDecoration,\n            textAlign: appliedStyle.textAlign,\n            fontFamily: appliedStyle.fontFamily,\n            fontSize: appliedStyle.fontSize,\n            height: '100%',\n          }}\n          aria-label={`Edit cell ${getCellIdUtil(address.rowIndex, address.colIndex)}`}\n        />\n      </td>\n    );\n  }\n\n  return (\n    <td\n      className={cellClasses}\n      style={{...appliedStyle, minWidth: width ? `${width}px` : '120px', height: height ? `${height}px` : undefined}}\n      onClick={handleClick}\n      onDoubleClick={handleDoubleClick}\n      onMouseDown={handleMouseDown}\n      onMouseEnter={handleMouseEnter}\n      tabIndex={0} \n      aria-readonly={true} \n      data-cell-id={getCellIdUtil(address.rowIndex, address.colIndex)}\n      rowSpan={rowSpan}\n      colSpan={colSpan}\n    >\n      {isActive && !isActivelyEditingFormulaGlobal && (\n          <div className=\"absolute inset-[-1px] border-2 border-primary pointer-events-none rounded-[1px] z-20\" />\n      )}\n      {isFormulaHighlightTarget && !isActive && (\n         <div className=\"absolute inset-[-1px] border-2 border-dashed border-green-700 pointer-events-none rounded-[1px] z-10\" />\n      )}\n      {String(cellData.value ?? '')}\n    </td>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6881, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/spreadsheet/Grid.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { MouseEvent as ReactMouseEvent, WheelEvent } from 'react';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport type { SheetData, CellAddress, SelectionRange } from '@/types/spreadsheet';\nimport { useSpreadsheet } from '@/hooks/useSpreadsheet';\nimport Cell from './Cell';\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { DEFAULT_COLUMN_WIDTH, DEFAULT_ROW_HEIGHT, getCellId as getCellIdUtil, isCellAddressInRange } from '@/types/spreadsheet';\nimport { cn } from '@/lib/utils';\n\n\nconst getColumnName = (index: number): string => {\n  let name = '';\n  let n = index;\n  do {\n    name = String.fromCharCode(65 + (n % 26)) + name;\n    n = Math.floor(n / 26) -1;\n  } while (n >= 0)\n  return name;\n};\n\nfunction makeRangeString(start: CellAddress, end: CellAddress): string {\n  const minR = Math.min(start.rowIndex, end.rowIndex);\n  const maxR = Math.max(start.rowIndex, end.rowIndex);\n  const minC = Math.min(start.colIndex, end.colIndex);\n  const maxC = Math.max(start.colIndex, end.colIndex);\n  \n  const startId = getCellIdUtil(minR, minC);\n  const endId = getCellIdUtil(maxR, maxC);\n\n  return startId === endId ? startId : `${startId}:${endId}`;\n}\n\n\nexport default function Grid({ sheet }: GridProps) {\n  const { \n    spreadsheet, \n    updateCell, \n    activeCell, \n    selectionRange, \n    setActiveCellAndSelection,\n    isActivelyEditingFormula,\n    formulaBarApiRef,\n    updateColumnWidth,\n    updateRowHeight,\n  } = useSpreadsheet();\n  \n  const [editingCell, setEditingCell] = useState<CellAddress | null>(null);\n  const gridRef = useRef<HTMLDivElement>(null);\n  const isMouseDownRef = useRef(false); \n\n  const formulaSelectionStartCellRef = useRef<CellAddress | null>(null);\n  const currentFormulaDragRangeStringRef = useRef<string | null>(null); \n  const [formulaHighlightRange, setFormulaHighlightRange] = useState<SelectionRange | null>(null);\n\n  const [resizingColumn, setResizingColumn] = useState<{ index: number; startX: number; initialWidth: number } | null>(null);\n  const [resizingRow, setResizingRow] = useState<{ index: number; startY: number; initialHeight: number } | null>(null);\n  const resizerTolerance = 5;\n\n\n  const handleCellChange = useCallback((rowIndex: number, colIndex: number, rawValue: string | number) => {\n    updateCell(sheet.id, rowIndex, colIndex, { rawValue });\n  },[updateCell, sheet.id]);\n\n\n  const handleCellSelect = useCallback((address: CellAddress, isShiftKey: boolean, isDrag: boolean) => {\n    if (formulaBarApiRef.current && isActivelyEditingFormula) {\n        const newCellId = getCellIdUtil(address.rowIndex, address.colIndex);\n\n        if (isDrag) { \n            if (!formulaSelectionStartCellRef.current) { \n                formulaSelectionStartCellRef.current = address;\n                currentFormulaDragRangeStringRef.current = newCellId;\n                formulaBarApiRef.current.appendText(newCellId); \n                setFormulaHighlightRange({ start: address, end: address });\n            } else { \n                const newRangeString = makeRangeString(formulaSelectionStartCellRef.current, address);\n                const currentFullFormula = formulaBarApiRef.current.getValue();\n                const oldRangeToken = currentFormulaDragRangeStringRef.current;\n\n                // More robust replacement: look for the specific old token, even if not exactly at the end.\n                // This regex tries to find the last cell/range reference that might be the one we're dragging.\n                const endsWithCellOrRangeRegex = /([A-Z]+[1-9]\\d*(?::[A-Z]+[1-9]\\d*)?)$/;\n                const formulaEndsWithMatch = currentFullFormula.match(endsWithCellOrRangeRegex);\n\n                if(oldRangeToken && currentFullFormula.endsWith(oldRangeToken)) {\n                    const baseFormula = currentFullFormula.slice(0, -oldRangeToken.length);\n                    formulaBarApiRef.current.setText(baseFormula + newRangeString);\n                } else if (formulaEndsWithMatch && formulaEndsWithMatch[1] === oldRangeToken) {\n                    const baseFormula = currentFullFormula.slice(0, -(oldRangeToken?.length || 0));\n                    formulaBarApiRef.current.setText(baseFormula + newRangeString);\n                } else {\n                    // Fallback: if a clear replacement isn't obvious, append after ensuring an operator or comma.\n                    const endsWithOperatorOrParenOrComma = /[+\\-*/,(]$/.test(currentFullFormula);\n                     if (endsWithOperatorOrParenOrComma || currentFullFormula === \"=\" || currentFullFormula.endsWith(\"(\")) {\n                        formulaBarApiRef.current.appendText(newRangeString);\n                    } else {\n                        // If user likely wants to replace, but we couldn't match, just append with a comma.\n                        // This might need user correction but avoids breaking the formula too much.\n                        // Or, better, if oldToken is set, it implies a previous selection was made.\n                        if(oldRangeToken && currentFullFormula.includes(oldRangeToken)){\n                             // This is tricky. If oldToken is in the middle, replacing is complex.\n                             // For now, let's assume a simple append after comma if not ending.\n                             formulaBarApiRef.current.appendText(\",\" + newRangeString);\n                        } else {\n                           formulaBarApiRef.current.appendText(newRangeString);\n                        }\n                    }\n                }\n                currentFormulaDragRangeStringRef.current = newRangeString;\n                setFormulaHighlightRange({ start: formulaSelectionStartCellRef.current, end: address });\n            }\n        } else { // Single click during formula editing\n            const currentFullFormula = formulaBarApiRef.current.getValue();\n            // Regex to check if formula ends with an operator, opening parenthesis, or comma\n            const endsWithSeparator = /[+\\-*/(,]$/.test(currentFullFormula);\n            const isFormulaEmptyIsh = currentFullFormula === \"=\" || currentFullFormula === \"\";\n\n            if (endsWithSeparator || isFormulaEmptyIsh || currentFullFormula.endsWith(\"(\")) {\n                formulaBarApiRef.current.appendText(newCellId);\n            } else {\n                 // If it ends with a cell/range, replace it.\n                const endsWithCellOrRangeRegex = /([A-Z]+[1-9]\\d*(?::[A-Z]+[1-9]\\d*)?)$/;\n                const formulaEndsWithMatch = currentFullFormula.match(endsWithCellOrRangeRegex);\n                if (formulaEndsWithMatch) {\n                    const oldToken = formulaEndsWithMatch[1];\n                    const baseFormula = currentFullFormula.slice(0, -oldToken.length);\n                    formulaBarApiRef.current.setText(baseFormula + newCellId);\n                } else {\n                    formulaBarApiRef.current.appendText(newCellId); // Default append\n                }\n            }\n            \n            formulaSelectionStartCellRef.current = address; \n            currentFormulaDragRangeStringRef.current = newCellId;\n            setFormulaHighlightRange({ start: address, end: address });\n        }\n        formulaBarApiRef.current.focus();\n        return; \n    }\n    // Normal selection\n    setActiveCellAndSelection(address, isShiftKey, isDrag);\n    setFormulaHighlightRange(null); \n  }, [\n    setActiveCellAndSelection, \n    isActivelyEditingFormula, \n    formulaBarApiRef, \n    sheet.id,\n  ]);\n\n  const startCellEditing = useCallback((address: CellAddress) => {\n    if (isActivelyEditingFormula) return;\n    // Check if the address is part of a merged cell, if so, edit the master cell\n    const cellData = sheet.cells[address.rowIndex]?.[address.colIndex];\n    let masterAddress = address;\n    if(cellData?.isMerged && cellData.mergeMaster){\n        masterAddress = cellData.mergeMaster;\n    }\n\n    // Ensure the cell to be edited is the active cell\n    if (activeCell && activeCell.sheetId === masterAddress.sheetId && activeCell.rowIndex === masterAddress.rowIndex && activeCell.colIndex === masterAddress.colIndex) {\n       if (editingCell?.rowIndex !== masterAddress.rowIndex || editingCell?.colIndex !== masterAddress.colIndex || editingCell?.sheetId !== masterAddress.sheetId) {\n         setEditingCell(masterAddress);\n       }\n    } else {\n        // This case should ideally not be hit if selection logic correctly sets activeCell to master.\n        // But as a fallback, make it active first then edit.\n        setActiveCellAndSelection(masterAddress, false, false);\n        setEditingCell(masterAddress);\n    }\n  }, [editingCell, activeCell, isActivelyEditingFormula, sheet.cells, setActiveCellAndSelection]);\n\n  const stopCellEditing = useCallback(() => {\n    setEditingCell(null);\n  }, []);\n\n  const handleGridMouseUp = useCallback(() => {\n    isMouseDownRef.current = false;\n    if (isActivelyEditingFormula && formulaBarApiRef.current) {\n        formulaBarApiRef.current.focus();\n      // Keep formulaSelectionStartCellRef and currentFormulaDragRangeStringRef for potential further edits.\n      // They get cleared if formula mode ends (e.g., on Enter/Escape in formula bar).\n    }\n  }, [isActivelyEditingFormula, formulaBarApiRef]);\n\n  useEffect(() => {\n    const handleGlobalMouseMove = (e: MouseEvent) => {\n      if (resizingColumn) {\n        const newWidth = Math.max(20, resizingColumn.initialWidth + (e.clientX - resizingColumn.startX));\n        // Live update: For smooth resize, update a temporary width here and apply on mouseup,\n        // or directly call updateColumnWidth but be mindful of performance.\n        // For now, we update on mouse up.\n        if (gridRef.current) { // To change cursor style\n            const colHeaderCells = gridRef.current.querySelectorAll('table > thead > tr > th');\n            if(colHeaderCells[resizingColumn.index + 1]) { // +1 because of row number header\n                 // (colHeaderCells[resizingColumn.index + 1] as HTMLElement).style.width = `${newWidth}px`;\n            }\n        }\n      }\n      if (resizingRow) {\n        const newHeight = Math.max(20, resizingRow.initialHeight + (e.clientY - resizingRow.startY));\n        // Live update row height similarly\n      }\n    };\n\n    const handleGlobalMouseUpForResize = () => {\n      if (resizingColumn && spreadsheet) {\n        const finalWidth = Math.max(20, resizingColumn.initialWidth + ((event as MouseEvent).clientX - resizingColumn.startX));\n        updateColumnWidth(sheet.id, resizingColumn.index, finalWidth);\n      }\n      if (resizingRow && spreadsheet) {\n         const finalHeight = Math.max(20, resizingRow.initialHeight + ((event as MouseEvent).clientY - resizingRow.startY));\n        updateRowHeight(sheet.id, resizingRow.index, finalHeight);\n      }\n      setResizingColumn(null);\n      setResizingRow(null);\n      if (document.body.style.cursor !== 'default') document.body.style.cursor = 'default';\n      handleGridMouseUp();\n    };\n\n    document.addEventListener('mousemove', handleGlobalMouseMove);\n    document.addEventListener('mouseup', handleGlobalMouseUpForResize);\n    return () => {\n      document.removeEventListener('mousemove', handleGlobalMouseMove);\n      document.removeEventListener('mouseup', handleGlobalMouseUpForResize);\n    };\n  }, [resizingColumn, resizingRow, sheet.id, updateColumnWidth, updateRowHeight, handleGridMouseUp, spreadsheet]);\n\n\n  const handleColumnHeaderMouseDown = (colIndex: number, e: ReactMouseEvent<HTMLTableCellElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    if (rect.right - e.clientX < resizerTolerance && e.clientX > rect.left + resizerTolerance) {\n      e.preventDefault();\n      setResizingColumn({\n        index: colIndex,\n        startX: e.clientX,\n        initialWidth: columnWidths[colIndex] || DEFAULT_COLUMN_WIDTH,\n      });\n      document.body.style.cursor = 'col-resize';\n    }\n  };\n  const handleRowHeaderMouseDown = (rowIndex: number, e: ReactMouseEvent<HTMLTableCellElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n     if (rect.bottom - e.clientY < resizerTolerance && e.clientY > rect.top + resizerTolerance) {\n        e.preventDefault();\n        setResizingRow({\n            index: rowIndex,\n            startY: e.clientY,\n            initialHeight: rowHeights[rowIndex] || DEFAULT_ROW_HEIGHT,\n        });\n        document.body.style.cursor = 'row-resize';\n    }\n  };\n    const handleColumnHeaderMouseMove = (e: ReactMouseEvent<HTMLTableCellElement>) => {\n        if (resizingColumn || resizingRow) return;\n        const rect = e.currentTarget.getBoundingClientRect();\n        if (rect.right - e.clientX < resizerTolerance && e.clientX > rect.left + resizerTolerance) {\n            e.currentTarget.style.cursor = 'col-resize';\n        } else {\n            e.currentTarget.style.cursor = 'default';\n        }\n    };\n    const handleRowHeaderMouseMove = (e: ReactMouseEvent<HTMLTableCellElement>) => {\n        if (resizingColumn || resizingRow) return;\n        const rect = e.currentTarget.getBoundingClientRect();\n        if (rect.bottom - e.clientY < resizerTolerance && e.clientY > rect.top + resizerTolerance) {\n            e.currentTarget.style.cursor = 'row-resize';\n        } else {\n            e.currentTarget.style.cursor = 'default';\n        }\n    };\n    const handleHeaderMouseLeave = (e: ReactMouseEvent<HTMLTableCellElement>) => {\n        if (!resizingColumn && !resizingRow) {\n            e.currentTarget.style.cursor = 'default';\n        }\n    };\n\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (gridRef.current && !gridRef.current.contains(event.target as Node) && editingCell) {\n          const activeInputElement = document.querySelector(`td[data-cell-id=\"${getCellIdUtil(editingCell.rowIndex, editingCell.colIndex)}\"] input`) as HTMLInputElement;\n          activeInputElement?.blur(); \n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [editingCell]); \n\n  useEffect(() => {\n    if (!isActivelyEditingFormula) {\n      setFormulaHighlightRange(null);\n      currentFormulaDragRangeStringRef.current = null; \n      formulaSelectionStartCellRef.current = null;\n    }\n  }, [isActivelyEditingFormula]);\n\n\n  const columnWidths = sheet.columnWidths || Array(sheet.columnCount).fill(DEFAULT_COLUMN_WIDTH);\n  const rowHeights = sheet.rowHeights || Array(sheet.rowCount).fill(DEFAULT_ROW_HEIGHT);\n\n  const isCellInSelection = useCallback((rowIndex: number, colIndex: number): boolean => {\n    if (!selectionRange || selectionRange.start.sheetId !== sheet.id || selectionRange.end.sheetId !== sheet.id) return false;\n    return isCellAddressInRange({sheetId: sheet.id, rowIndex, colIndex}, selectionRange);\n  }, [selectionRange, sheet.id]);\n\n  const isCellInFormulaHighlight = useCallback((rowIndex: number, colIndex: number): boolean => {\n    if (!isActivelyEditingFormula || !formulaHighlightRange || formulaHighlightRange.start.sheetId !== sheet.id) return false;\n    return isCellAddressInRange({sheetId: sheet.id, rowIndex, colIndex}, formulaHighlightRange);\n  }, [isActivelyEditingFormula, formulaHighlightRange, sheet.id]);\n  \n  if (!sheet || !sheet.cells || sheet.cells.length === 0) {\n    return <div className=\"p-4\">Loading sheet data or sheet is empty...</div>;\n  }\n\n  const renderedCells = new Set<string>(); // To track cells already rendered due to colSpan/rowSpan\n\n  return (\n    <ScrollArea \n      className=\"h-full w-full p-1 bg-muted/20 focus-within:outline-none focus-within:ring-2 focus-within:ring-ring focus-within:ring-offset-2 rounded-md\" \n      tabIndex={-1} \n      ref={gridRef}\n    >\n        <Table \n          className=\"min-w-full border-collapse table-fixed select-none\"\n          style={{ '--default-cell-width': `${DEFAULT_COLUMN_WIDTH}px`, '--default-row-height': `${DEFAULT_ROW_HEIGHT}px` } as React.CSSProperties}\n          onMouseDown={() => { isMouseDownRef.current = true; }}\n          onMouseUp={handleGridMouseUp} // Added mouseup on table as well\n          onMouseLeave={() => { if(isMouseDownRef.current) handleGridMouseUp(); }} // If mouse leaves grid while down\n        >\n          <TableHeader className=\"sticky top-0 bg-card z-20 shadow-sm print:bg-white\">\n            <TableRow>\n              <TableHead \n                className=\"w-12 min-w-[3rem] p-0 text-center border sticky left-0 bg-card z-30 select-none print:bg-white\"\n                style={{ width: '3rem', minWidth: '3rem', height: `${DEFAULT_ROW_HEIGHT}px` }}\n              >\n              </TableHead>\n              {Array.from({ length: sheet.columnCount }).map((_, colIndex) => (\n                <TableHead \n                    key={`header-${colIndex}`} \n                    className=\"p-0 text-center border select-none print:bg-white relative\"\n                    style={{ \n                        width: `${columnWidths[colIndex] || DEFAULT_COLUMN_WIDTH}px`, \n                        minWidth: `${columnWidths[colIndex] || DEFAULT_COLUMN_WIDTH}px`,\n                        height: `${DEFAULT_ROW_HEIGHT}px`\n                    }}\n                    onMouseDown={(e) => handleColumnHeaderMouseDown(colIndex, e)}\n                    onMouseMove={handleColumnHeaderMouseMove}\n                    onMouseLeave={handleHeaderMouseLeave}\n                >\n                  {getColumnName(colIndex)}\n                </TableHead>\n              ))}\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {Array.from({ length: sheet.rowCount }).map((_, rowIndex) => (\n              <TableRow key={`row-${rowIndex}`} style={{ height: `${rowHeights[rowIndex] || DEFAULT_ROW_HEIGHT}px` }}>\n                <TableHead \n                    className=\"w-12 min-w-[3rem] p-0 text-center border sticky left-0 bg-card z-10 select-none print:bg-white relative\"\n                    style={{ width: '3rem', minWidth: '3rem', height: `${rowHeights[rowIndex] || DEFAULT_ROW_HEIGHT}px` }}\n                    onMouseDown={(e) => handleRowHeaderMouseDown(rowIndex, e)}\n                    onMouseMove={handleRowHeaderMouseMove}\n                    onMouseLeave={handleHeaderMouseLeave}\n                >\n                  {rowIndex + 1}\n                </TableHead>\n                {Array.from({ length: sheet.columnCount }).map((_, colIndex) => {\n                  if (renderedCells.has(`${rowIndex}-${colIndex}`)) {\n                      return null; // This cell is covered by a previous cell's colSpan/rowSpan\n                  }\n                  const cellData = sheet.cells[rowIndex]?.[colIndex];\n                  if (!cellData) { // Should not happen if sheet.cells is well-formed\n                     return <TableCell key={`${rowIndex}-${colIndex}`} className=\"border p-0\" style={{width: `${columnWidths[colIndex] || DEFAULT_COLUMN_WIDTH}px`}} />;\n                  }\n\n                  const currentCellAddress: CellAddress = { sheetId: sheet.id, rowIndex, colIndex };\n                  const isCurrentActive = !isActivelyEditingFormula && activeCell?.sheetId === sheet.id && activeCell.rowIndex === rowIndex && activeCell.colIndex === colIndex;\n                  const isEditingThis = !isActivelyEditingFormula && editingCell?.sheetId === sheet.id && editingCell.rowIndex === rowIndex && editingCell.colIndex === colIndex;\n                  \n                  let cellColSpan = cellData.colSpan || 1;\n                  let cellRowSpan = cellData.rowSpan || 1;\n                  let isActuallyMergedSub = cellData.isMerged || false;\n\n                  if (cellColSpan > 1 || cellRowSpan > 1) {\n                      for (let r = rowIndex; r < rowIndex + cellRowSpan; r++) {\n                          for (let c = colIndex; c < colIndex + cellColSpan; c++) {\n                              if (r === rowIndex && c === colIndex) continue;\n                              renderedCells.add(`${r}-${c}`);\n                          }\n                      }\n                  }\n                  \n                  return (\n                    <Cell\n                      key={cellData.id || `${rowIndex}-${colIndex}`} \n                      cellData={cellData}\n                      address={currentCellAddress}\n                      onCellChange={handleCellChange}\n                      isActive={isCurrentActive}\n                      isInSelectionRange={!isActivelyEditingFormula && isCellInSelection(rowIndex, colIndex)}\n                      isFormulaHighlightTarget={isCellInFormulaHighlight(rowIndex, colIndex)}\n                      onSelect={handleCellSelect}\n                      startEditing={startCellEditing}\n                      stopEditing={stopCellEditing}\n                      isEditingThisCell={isEditingThis}\n                      width={columnWidths[colIndex] || DEFAULT_COLUMN_WIDTH}\n                      height={rowHeights[rowIndex] || DEFAULT_ROW_HEIGHT}\n                      isActivelyEditingFormulaGlobal={isActivelyEditingFormula}\n                      conditionalFormatRules={sheet.conditionalFormatRules}\n                      rowSpan={cellRowSpan}\n                      colSpan={cellColSpan}\n                      isActuallyMergedSubCell={isActuallyMergedSub}\n                    />\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      <div className=\"h-4\"></div> \n    </ScrollArea>\n  );\n}\n\ninterface GridProps {\n  sheet: SheetData;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7447, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/spreadsheet/FormulaBar.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Button } from \"@/components/ui/button\";\nimport { useSpreadsheet } from \"@/hooks/useSpreadsheet\";\nimport type { FormulaBarApi } from '@/contexts/SpreadsheetContext';\nimport { getCellId } from '@/types/spreadsheet'; \nimport { Check, XIcon, FunctionSquare } from 'lucide-react'; \n\nexport default function FormulaBar() {\n  const { \n    spreadsheet, \n    activeCell, \n    updateCell, \n    setIsActivelyEditingFormula,\n    formulaBarApiRef,\n    evaluateFormula // Get evaluateFormula from context for preview if needed\n  } = useSpreadsheet(); \n\n  const [currentFormula, setCurrentFormula] = useState('');\n  const [showConfirmCancel, setShowConfirmCancel] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  // Expose API to context\n  useEffect(() => {\n    if (formulaBarApiRef) { // Check if formulaBarApiRef itself is defined\n      const api: FormulaBarApi = {\n        appendText: (text) => {\n          setCurrentFormula(prev => {\n            const input = inputRef.current;\n            if (input) {\n                const start = input.selectionStart ?? prev.length; // Default to end if null\n                const end = input.selectionEnd ?? prev.length;   // Default to end if null\n                const newValue = prev.substring(0, start) + text + prev.substring(end);\n                // Set timeout to allow React to re-render before setting selection\n                // This ensures the input value is updated in the DOM first.\n                setTimeout(() => {\n                    input.focus(); // Re-focus just in case\n                    input.selectionStart = input.selectionEnd = start + text.length;\n                }, 0);\n                return newValue;\n            }\n            return prev + text; // Fallback if input ref not available\n          });\n          if (!showConfirmCancel) setShowConfirmCancel(true);\n        },\n        replaceText: (oldTextSubString, newText) => {\n             setCurrentFormula(prev => {\n                // This is a simple replacement, primarily for live range updates.\n                // It assumes oldTextSubString is likely at the end.\n                if (prev.endsWith(oldTextSubString)) {\n                     return prev.slice(0, -oldTextSubString.length) + newText;\n                }\n                // If not at the end, this simple version might not behave as expected for complex edits.\n                // For now, if it's not at the end, we'll append. A more robust solution would require\n                // knowledge of what specific token to replace if not simply the end.\n                return prev + newText; \n             });\n             if (!showConfirmCancel) setShowConfirmCancel(true);\n        },\n        setText: (text) => {\n          setCurrentFormula(text);\n          if (!showConfirmCancel && text !== (cellData?.rawValue?.toString() || '')) {\n            setShowConfirmCancel(true);\n          }\n        },\n        focus: () => {\n          inputRef.current?.focus();\n        },\n        getValue: () => {\n          // Prefer inputRef.current.value if available, as it's the most up-to-date during typing\n          return inputRef.current?.value ?? currentFormula;\n        }\n      };\n      formulaBarApiRef.current = api;\n    }\n    return () => {\n        if (formulaBarApiRef) { // Check if formulaBarApiRef itself is defined\n            formulaBarApiRef.current = null;\n        }\n    }\n  }, [formulaBarApiRef, showConfirmCancel, currentFormula]); // Added currentFormula for getValue freshness, showConfirmCancel\n\n  const activeSheet = spreadsheet?.sheets.find(s => s.id === spreadsheet.activeSheetId);\n  const cellData = activeCell && activeSheet ? activeSheet.cells[activeCell.rowIndex]?.[activeCell.colIndex] : null;\n\n  const { isActivelyEditingFormula: isFormulaContextEditing } = useSpreadsheet(); // Get read-only value\n\n  useEffect(() => {\n    if (!isFormulaContextEditing && cellData) {\n      setCurrentFormula(cellData.rawValue?.toString() || '');\n      setShowConfirmCancel(false); // Hide buttons if not editing formula and cell changes\n    } else if (!isFormulaContextEditing && !activeCell) {\n      setCurrentFormula('');\n      setShowConfirmCancel(false);\n    }\n  }, [activeCell, cellData, spreadsheet?.activeSheetId, isFormulaContextEditing]);\n\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCurrentFormula(e.target.value);\n    if (!showConfirmCancel) setShowConfirmCancel(true);\n    if (e.target.value.startsWith('=')) { // If user types '=', enter formula editing mode\n        setIsActivelyEditingFormula(true);\n    }\n  };\n\n  const submitFormula = useCallback(() => {\n    if (activeCell && spreadsheet && activeSheet) {\n      // Use formulaBarApiRef.current.getValue() to get the most up-to-date value from the input\n      const formulaToSubmit = formulaBarApiRef.current?.getValue() ?? currentFormula;\n      updateCell(activeSheet.id, activeCell.rowIndex, activeCell.colIndex, { rawValue: formulaToSubmit });\n    }\n    setIsActivelyEditingFormula(false);\n    setShowConfirmCancel(false);\n  }, [activeCell, spreadsheet, activeSheet, updateCell, setIsActivelyEditingFormula, currentFormula, formulaBarApiRef]);\n\n  const cancelEdit = useCallback(() => {\n    if (cellData) {\n      setCurrentFormula(cellData.rawValue?.toString() || '');\n    } else {\n      setCurrentFormula('');\n    }\n    setIsActivelyEditingFormula(false);\n    setShowConfirmCancel(false);\n    // Consider blurring the input or focusing the grid, depending on desired UX\n  }, [cellData, setIsActivelyEditingFormula]);\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      submitFormula();\n      // Focus might shift to grid or next cell after submit, handled by grid navigation later\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      cancelEdit();\n      // inputRef.current?.blur(); // Blurring might be too aggressive, let user click away\n    }\n  }, [submitFormula, cancelEdit]);\n\n  const handleFocus = useCallback(() => {\n    // When formula bar is focused, always show confirm/cancel\n    setShowConfirmCancel(true);\n    // If the content starts with '=', ensure we are in formula editing mode\n    if (inputRef.current?.value.startsWith('=')) {\n      setIsActivelyEditingFormula(true);\n    }\n  }, [setIsActivelyEditingFormula]);\n  \n  const handleBlur = useCallback((e: React.FocusEvent<HTMLInputElement>) => {\n    // Delay to allow click on confirm/cancel buttons to register\n    setTimeout(() => {\n      // Check if focus moved to a formula bar action button or if still in formula bar\n      const activeEl = document.activeElement;\n      if (activeEl !== inputRef.current && \n          !activeEl?.classList.contains('formula-bar-action-button') &&\n          !e.relatedTarget?.classList.contains('formula-bar-action-button')) {\n        // If blurred to something else, and confirm/cancel were visible (meaning an edit was in progress)\n        if (showConfirmCancel) {\n            // If value changed, submit, otherwise cancel (revert to original cell value)\n            const currentValInBar = inputRef.current?.value ?? currentFormula;\n            if (currentValInBar !== (cellData?.rawValue?.toString() || '')) {\n                // submitFormula(); // Auto-submit on blur if changed - can be aggressive\n                                 // For now, let's prefer explicit submit/cancel.\n                                 // Or, if it starts with =, assume it's a formula to be kept.\n                if (!currentValInBar.startsWith('=')) cancelEdit(); // if not a formula, and blurred, cancel if changed\n\n            } else {\n                 // No change, or was already equal. Treat as cancel to hide buttons.\n                 cancelEdit();\n            }\n        }\n        // Always set formula editing to false on blur if not to its own buttons\n        setIsActivelyEditingFormula(false);\n        // setShowConfirmCancel(false); // This is handled by cancelEdit or submitFormula\n      }\n    }, 0);\n  }, [setIsActivelyEditingFormula, showConfirmCancel, currentFormula, cellData, submitFormula, cancelEdit]);\n\n\n  const selectedCellName = activeCell && spreadsheet\n    ? getCellId(activeCell.rowIndex, activeCell.colIndex)\n    : ' '; \n\n  return (\n    <div className=\"p-2 border-b bg-card flex items-center gap-2 shadow-sm print:hidden\">\n      <Input\n        type=\"text\"\n        value={selectedCellName}\n        readOnly\n        className=\"w-20 h-10 text-sm text-center font-mono bg-muted border-r-0 rounded-r-none focus-visible:ring-0 focus-visible:ring-offset-0\"\n        aria-label=\"Selected cell name\"\n        tabIndex={-1}\n      />\n      \n      {(showConfirmCancel || isFormulaContextEditing) && ( // Show if explicitly editing or formula context says so\n         <>\n            <Button variant=\"ghost\" size=\"icon\" onClick={cancelEdit} className=\"h-10 w-10 text-destructive formula-bar-action-button\" aria-label=\"Cancel formula edit\">\n                <XIcon size={18}/>\n            </Button>\n            <Button variant=\"ghost\" size=\"icon\" onClick={submitFormula} className=\"h-10 w-10 text-green-600 formula-bar-action-button\" aria-label=\"Confirm formula edit\">\n                <Check size={18}/>\n            </Button>\n         </>\n      )}\n      \n      <Label htmlFor=\"formula-input\" className=\"font-mono text-sm p-2 bg-muted/50 rounded-l-md border h-10 flex items-center\"\n        onClick={() => inputRef.current?.focus()} \n        title=\"Formula\"\n      >\n        <FunctionSquare size={16} />\n      </Label>\n      <Input\n        ref={inputRef}\n        id=\"formula-input\"\n        type=\"text\"\n        placeholder={activeCell ? \"Enter value or formula...\" : \"Select a cell to edit...\"}\n        value={currentFormula}\n        onChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        className=\"flex-grow h-10 rounded-l-none focus-visible:ring-inset\"\n        aria-label=\"Formula input bar\"\n        disabled={!spreadsheet} // Only truly disable if no spreadsheet is loaded at all.\n                               // Allow typing even if no cell is active yet, if user wants to start formula first.\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7803, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/ui/resizable.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport { ImperativePanelHandle, Panel, PanelGroup } from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = React.forwardRef<\n  ImperativePanelHandle,\n  React.ComponentProps<typeof PanelGroup>\n>(({ className, ...props }, ref) => (\n  <PanelGroup\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n))\nResizablePanelGroup.displayName = \"ResizablePanelGroup\"\n\nconst ResizablePanel = Panel\n\nResizablePanel.displayName = \"ResizablePanel\"\n\nconst ResizableHandle = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof PanelGroup.Handle> & {\n    withHandle?: boolean\n  }\n>(({ className, withHandle, ...props }, ref) => (\n  <PanelGroup.Handle\n    ref={ref}\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className=\"lucide lucide-grip-vertical h-2.5 w-2.5\"\n        >\n          <circle cx=\"9\" cy=\"12\" r=\"1\" />\n          <circle cx=\"9\" cy=\"5\" r=\"1\" />\n          <circle cx=\"9\" cy=\"19\" r=\"1\" />\n          <circle cx=\"15\" cy=\"12\" r=\"1\" />\n          <circle cx=\"15\" cy=\"5\" r=\"1\" />\n          <circle cx=\"15\" cy=\"19\" r=\"1\" />\n        </svg>\n      </div>\n    )}\n  </PanelGroup.Handle>\n))\nResizableHandle.displayName = \"ResizableHandle\"\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n"],"names":[],"mappings":";;;;;;AAGA;AACA;AAEA;AALA;;;;;AAOA,MAAM,oCAAsB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGzC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,wNAAA,CAAA,aAAU;QACT,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qEACA;QAED,GAAG,KAAK;;;;;;;AAGb,oBAAoB,WAAW,GAAG;AAElC,MAAM,iBAAiB,wNAAA,CAAA,QAAK;AAE5B,eAAe,WAAW,GAAG;AAE7B,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAKrC,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,OAAO,EAAE,oBACtC,6LAAC,wNAAA,CAAA,aAAU,CAAC,MAAM;QAChB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2oBACA;QAED,GAAG,KAAK;kBAER,4BACC,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBACC,OAAM;gBACN,OAAM;gBACN,QAAO;gBACP,SAAQ;gBACR,MAAK;gBACL,QAAO;gBACP,aAAY;gBACZ,eAAc;gBACd,gBAAe;gBACf,WAAU;;kCAEV,6LAAC;wBAAO,IAAG;wBAAI,IAAG;wBAAK,GAAE;;;;;;kCACzB,6LAAC;wBAAO,IAAG;wBAAI,IAAG;wBAAI,GAAE;;;;;;kCACxB,6LAAC;wBAAO,IAAG;wBAAI,IAAG;wBAAK,GAAE;;;;;;kCACzB,6LAAC;wBAAO,IAAG;wBAAK,IAAG;wBAAK,GAAE;;;;;;kCAC1B,6LAAC;wBAAO,IAAG;wBAAK,IAAG;wBAAI,GAAE;;;;;;kCACzB,6LAAC;wBAAO,IAAG;wBAAK,IAAG;wBAAK,GAAE;;;;;;;;;;;;;;;;;;;;;;;AAMpC,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 7935, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/components/spreadsheet/SpreadsheetEditorLayout.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useEffect, useState } from 'react'; // Added useState, useEffect\nimport { useSpreadsheet } from '@/hooks/useSpreadsheet';\nimport Toolbar from './Toolbar';\nimport SheetTabs from './SheetTabs';\nimport Grid from './Grid';\nimport FormulaBar from './FormulaBar';\nimport { ResizablePanel, ResizablePanelGroup } from \"@/components/ui/resizable\"; // Removed ResizableHandle for now\n\nexport default function SpreadsheetEditorLayout() {\n  const { spreadsheet } = useSpreadsheet();\n  const [theme, setThemeState] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    // Get theme from localStorage on mount\n    const storedTheme = localStorage.getItem('spreadsheet-theme') || 'light';\n    setThemeState(storedTheme);\n    if (storedTheme === 'dark') {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, []);\n\n  const setTheme = (newTheme: string) => {\n    setThemeState(newTheme);\n    localStorage.setItem('spreadsheet-theme', newTheme);\n    if (newTheme === 'dark') {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  };\n\n\n  if (!spreadsheet) {\n    return <div className=\"flex items-center justify-center h-screen\">Spreadsheet data not available.</div>;\n  }\n  \n  const activeSheet = spreadsheet.sheets.find(s => s.id === spreadsheet.activeSheetId);\n\n  if (!activeSheet) {\n    return <div className=\"flex items-center justify-center h-screen\">Active sheet not found.</div>;\n  }\n\n  return (\n    <div className=\"flex flex-col h-screen bg-background overflow-hidden\">\n      <Toolbar spreadsheetName={spreadsheet.name} theme={theme} setTheme={setTheme} />\n      <FormulaBar />\n      <div className=\"flex-grow overflow-hidden\">\n        <ResizablePanelGroup direction=\"vertical\">\n          <ResizablePanel defaultSize={100} className=\"min-h-[200px]\">\n            <Grid sheet={activeSheet} />\n          </ResizablePanel>\n        </ResizablePanelGroup>\n      </div>\n      <SheetTabs sheets={spreadsheet.sheets} activeSheetId={spreadsheet.activeSheetId} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA,mRAA6C,4BAA4B;AACzE;AACA;AACA;AACA;AACA;AACA,+OAAiF,kCAAkC;;;AARnH;;;;;;;;AAUe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD;IACrC,MAAM,CAAC,OAAO,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;IAE5D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6CAAE;YACR,uCAAuC;YACvC,MAAM,cAAc,aAAa,OAAO,CAAC,wBAAwB;YACjE,cAAc;YACd,IAAI,gBAAgB,QAAQ;gBAC1B,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;YACzC,OAAO;gBACL,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;YAC5C;QACF;4CAAG,EAAE;IAEL,MAAM,WAAW,CAAC;QAChB,cAAc;QACd,aAAa,OAAO,CAAC,qBAAqB;QAC1C,IAAI,aAAa,QAAQ;YACvB,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;QACzC,OAAO;YACL,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;QAC5C;IACF;IAGA,IAAI,CAAC,aAAa;QAChB,qBAAO,6LAAC;YAAI,WAAU;sBAA4C;;;;;;IACpE;IAEA,MAAM,cAAc,YAAY,MAAM,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,YAAY,aAAa;IAEnF,IAAI,CAAC,aAAa;QAChB,qBAAO,6LAAC;YAAI,WAAU;sBAA4C;;;;;;IACpE;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,+IAAA,CAAA,UAAO;gBAAC,iBAAiB,YAAY,IAAI;gBAAE,OAAO;gBAAO,UAAU;;;;;;0BACpE,6LAAC,kJAAA,CAAA,UAAU;;;;;0BACX,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,wIAAA,CAAA,sBAAmB;oBAAC,WAAU;8BAC7B,cAAA,6LAAC,wIAAA,CAAA,iBAAc;wBAAC,aAAa;wBAAK,WAAU;kCAC1C,cAAA,6LAAC,4IAAA,CAAA,UAAI;4BAAC,OAAO;;;;;;;;;;;;;;;;;;;;;0BAInB,6LAAC,iJAAA,CAAA,UAAS;gBAAC,QAAQ,YAAY,MAAM;gBAAE,eAAe,YAAY,aAAa;;;;;;;;;;;;AAGrF;GAlDwB;;QACE,iIAAA,CAAA,iBAAc;;;KADhB","debugId":null}},
    {"offset": {"line": 8080, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/src/app/spreadsheet/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport { SpreadsheetProvider } from '@/contexts/SpreadsheetContext';\nimport { useSpreadsheet } from '@/hooks/useSpreadsheet'; // Corrected import path\nimport SpreadsheetEditorLayout from '@/components/spreadsheet/SpreadsheetEditorLayout';\nimport { Loader2 } from 'lucide-react';\n\nfunction SpreadsheetEditorPageContents() {\n  const params = useParams();\n  const spreadsheetId = params.id as string;\n  const { spreadsheet, isLoading, loadSpreadsheet } = useSpreadsheet();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (spreadsheetId) {\n      loadSpreadsheet(spreadsheetId);\n    }\n  }, [spreadsheetId, loadSpreadsheet]);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-full flex-grow\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n        <p className=\"mt-4 text-lg text-muted-foreground\">Loading spreadsheet...</p>\n      </div>\n    );\n  }\n\n  if (!spreadsheet && !isLoading) {\n     // Could be due to error or not found, context handles toast.\n     // Allow user to go back.\n    return (\n      <div className=\"flex flex-col items-center justify-center h-full flex-grow p-8 text-center\">\n        <h2 className=\"text-2xl font-semibold text-destructive mb-4\">Spreadsheet Not Found</h2>\n        <p className=\"text-muted-foreground mb-6\">\n          The requested spreadsheet could not be loaded. It might have been deleted or an error occurred.\n        </p>\n        <button\n          onClick={() => router.push('/')}\n          className=\"px-6 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors\"\n        >\n          Go to Dashboard\n        </button>\n      </div>\n    );\n  }\n  \n  // Spreadsheet is loaded (or still loading, covered by above)\n  return <SpreadsheetEditorLayout />;\n}\n\n\nexport default function SpreadsheetPage() {\n  return (\n    <SpreadsheetProvider>\n      <SpreadsheetEditorPageContents />\n    </SpreadsheetProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA,oOAAyD,wBAAwB;AACjF;AACA;;;AAPA;;;;;;;AASA,SAAS;;IACP,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,gBAAgB,OAAO,EAAE;IAC/B,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD;IACjE,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mDAAE;YACR,IAAI,eAAe;gBACjB,gBAAgB;YAClB;QACF;kDAAG;QAAC;QAAe;KAAgB;IAEnC,IAAI,WAAW;QACb,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC,oNAAA,CAAA,UAAO;oBAAC,WAAU;;;;;;8BACnB,6LAAC;oBAAE,WAAU;8BAAqC;;;;;;;;;;;;IAGxD;IAEA,IAAI,CAAC,eAAe,CAAC,WAAW;QAC7B,6DAA6D;QAC7D,yBAAyB;QAC1B,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAA+C;;;;;;8BAC7D,6LAAC;oBAAE,WAAU;8BAA6B;;;;;;8BAG1C,6LAAC;oBACC,SAAS,IAAM,OAAO,IAAI,CAAC;oBAC3B,WAAU;8BACX;;;;;;;;;;;;IAKP;IAEA,6DAA6D;IAC7D,qBAAO,6LAAC,+JAAA,CAAA,UAAuB;;;;;AACjC;GA1CS;;QACQ,qIAAA,CAAA,YAAS;QAE4B,iIAAA,CAAA,iBAAc;QACnD,qIAAA,CAAA,YAAS;;;KAJjB;AA6CM,SAAS;IACtB,qBACE,6LAAC,yIAAA,CAAA,sBAAmB;kBAClB,cAAA,6LAAC;;;;;;;;;;AAGP;MANwB","debugId":null}}]
}