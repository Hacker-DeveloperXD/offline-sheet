{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/error/ArgumentsError.js"],"sourcesContent":["/**\n * Create a syntax error with the message:\n *     'Wrong number of arguments in function <fn> (<count> provided, <min>-<max> expected)'\n * @param {string} fn     Function name\n * @param {number} count  Actual argument count\n * @param {number} min    Minimum required argument count\n * @param {number} [max]  Maximum required argument count\n * @extends Error\n */\nexport function ArgumentsError(fn, count, min, max) {\n  if (!(this instanceof ArgumentsError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n  this.fn = fn;\n  this.count = count;\n  this.min = min;\n  this.max = max;\n  this.message = 'Wrong number of arguments in function ' + fn + ' (' + count + ' provided, ' + min + (max !== undefined && max !== null ? '-' + max : '') + ' expected)';\n  this.stack = new Error().stack;\n}\nArgumentsError.prototype = new Error();\nArgumentsError.prototype.constructor = Error;\nArgumentsError.prototype.name = 'ArgumentsError';\nArgumentsError.prototype.isArgumentsError = true;"],"names":[],"mappings":"AAAA;;;;;;;;CAQC;;;AACM,SAAS,eAAe,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;IAChD,IAAI,CAAC,CAAC,IAAI,YAAY,cAAc,GAAG;QACrC,MAAM,IAAI,YAAY;IACxB;IACA,IAAI,CAAC,EAAE,GAAG;IACV,IAAI,CAAC,KAAK,GAAG;IACb,IAAI,CAAC,GAAG,GAAG;IACX,IAAI,CAAC,GAAG,GAAG;IACX,IAAI,CAAC,OAAO,GAAG,2CAA2C,KAAK,OAAO,QAAQ,gBAAgB,MAAM,CAAC,QAAQ,aAAa,QAAQ,OAAO,MAAM,MAAM,EAAE,IAAI;IAC3J,IAAI,CAAC,KAAK,GAAG,IAAI,QAAQ,KAAK;AAChC;AACA,eAAe,SAAS,GAAG,IAAI;AAC/B,eAAe,SAAS,CAAC,WAAW,GAAG;AACvC,eAAe,SAAS,CAAC,IAAI,GAAG;AAChC,eAAe,SAAS,CAAC,gBAAgB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/error/DimensionError.js"],"sourcesContent":["/**\n * Create a range error with the message:\n *     'Dimension mismatch (<actual size> != <expected size>)'\n * @param {number | number[]} actual        The actual size\n * @param {number | number[]} expected      The expected size\n * @param {string} [relation='!=']          Optional relation between actual\n *                                          and expected size: '!=', '<', etc.\n * @extends RangeError\n */\nexport function DimensionError(actual, expected, relation) {\n  if (!(this instanceof DimensionError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n  this.actual = actual;\n  this.expected = expected;\n  this.relation = relation;\n  this.message = 'Dimension mismatch (' + (Array.isArray(actual) ? '[' + actual.join(', ') + ']' : actual) + ' ' + (this.relation || '!=') + ' ' + (Array.isArray(expected) ? '[' + expected.join(', ') + ']' : expected) + ')';\n  this.stack = new Error().stack;\n}\nDimensionError.prototype = new RangeError();\nDimensionError.prototype.constructor = RangeError;\nDimensionError.prototype.name = 'DimensionError';\nDimensionError.prototype.isDimensionError = true;"],"names":[],"mappings":"AAAA;;;;;;;;CAQC;;;AACM,SAAS,eAAe,MAAM,EAAE,QAAQ,EAAE,QAAQ;IACvD,IAAI,CAAC,CAAC,IAAI,YAAY,cAAc,GAAG;QACrC,MAAM,IAAI,YAAY;IACxB;IACA,IAAI,CAAC,MAAM,GAAG;IACd,IAAI,CAAC,QAAQ,GAAG;IAChB,IAAI,CAAC,QAAQ,GAAG;IAChB,IAAI,CAAC,OAAO,GAAG,yBAAyB,CAAC,MAAM,OAAO,CAAC,UAAU,MAAM,OAAO,IAAI,CAAC,QAAQ,MAAM,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,MAAM,CAAC,MAAM,OAAO,CAAC,YAAY,MAAM,SAAS,IAAI,CAAC,QAAQ,MAAM,QAAQ,IAAI;IAC1N,IAAI,CAAC,KAAK,GAAG,IAAI,QAAQ,KAAK;AAChC;AACA,eAAe,SAAS,GAAG,IAAI;AAC/B,eAAe,SAAS,CAAC,WAAW,GAAG;AACvC,eAAe,SAAS,CAAC,IAAI,GAAG;AAChC,eAAe,SAAS,CAAC,gBAAgB,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/error/IndexError.js"],"sourcesContent":["/**\n * Create a range error with the message:\n *     'Index out of range (index < min)'\n *     'Index out of range (index < max)'\n *\n * @param {number} index     The actual index\n * @param {number} [min=0]   Minimum index (included)\n * @param {number} [max]     Maximum index (excluded)\n * @extends RangeError\n */\nexport function IndexError(index, min, max) {\n  if (!(this instanceof IndexError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n  this.index = index;\n  if (arguments.length < 3) {\n    this.min = 0;\n    this.max = min;\n  } else {\n    this.min = min;\n    this.max = max;\n  }\n  if (this.min !== undefined && this.index < this.min) {\n    this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')';\n  } else if (this.max !== undefined && this.index >= this.max) {\n    this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')';\n  } else {\n    this.message = 'Index out of range (' + this.index + ')';\n  }\n  this.stack = new Error().stack;\n}\nIndexError.prototype = new RangeError();\nIndexError.prototype.constructor = RangeError;\nIndexError.prototype.name = 'IndexError';\nIndexError.prototype.isIndexError = true;"],"names":[],"mappings":"AAAA;;;;;;;;;CASC;;;AACM,SAAS,WAAW,KAAK,EAAE,GAAG,EAAE,GAAG;IACxC,IAAI,CAAC,CAAC,IAAI,YAAY,UAAU,GAAG;QACjC,MAAM,IAAI,YAAY;IACxB;IACA,IAAI,CAAC,KAAK,GAAG;IACb,IAAI,UAAU,MAAM,GAAG,GAAG;QACxB,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,GAAG,GAAG;IACb,OAAO;QACL,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,GAAG,GAAG;IACb;IACA,IAAI,IAAI,CAAC,GAAG,KAAK,aAAa,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE;QACnD,IAAI,CAAC,OAAO,GAAG,yBAAyB,IAAI,CAAC,KAAK,GAAG,QAAQ,IAAI,CAAC,GAAG,GAAG;IAC1E,OAAO,IAAI,IAAI,CAAC,GAAG,KAAK,aAAa,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,EAAE;QAC3D,IAAI,CAAC,OAAO,GAAG,yBAAyB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI;IAChF,OAAO;QACL,IAAI,CAAC,OAAO,GAAG,yBAAyB,IAAI,CAAC,KAAK,GAAG;IACvD;IACA,IAAI,CAAC,KAAK,GAAG,IAAI,QAAQ,KAAK;AAChC;AACA,WAAW,SAAS,GAAG,IAAI;AAC3B,WAAW,SAAS,CAAC,WAAW,GAAG;AACnC,WAAW,SAAS,CAAC,IAAI,GAAG;AAC5B,WAAW,SAAS,CAAC,YAAY,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/core/config.js"],"sourcesContent":["export var DEFAULT_CONFIG = {\n  // minimum relative difference between two compared values,\n  // used by all comparison functions\n  relTol: 1e-12,\n  // minimum absolute difference between two compared values,\n  // used by all comparison functions\n  absTol: 1e-15,\n  // type of default matrix output. Choose 'matrix' (default) or 'array'\n  matrix: 'Matrix',\n  // type of default number output. Choose 'number' (default) 'BigNumber', 'bigint', or 'Fraction'\n  number: 'number',\n  // type of fallback used for config { number: 'bigint' } when a value cannot be represented\n  // in the configured numeric type. Choose 'number' (default) or 'BigNumber'.\n  numberFallback: 'number',\n  // number of significant digits in BigNumbers\n  precision: 64,\n  // predictable output type of functions. When true, output type depends only\n  // on the input types. When false (default), output type can vary depending\n  // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when\n  // predictable is false, and returns `NaN` when true.\n  predictable: false,\n  // random seed for seeded pseudo random number generation\n  // null = randomly seed\n  randomSeed: null\n};"],"names":[],"mappings":";;;AAAO,IAAI,iBAAiB;IAC1B,2DAA2D;IAC3D,mCAAmC;IACnC,QAAQ;IACR,2DAA2D;IAC3D,mCAAmC;IACnC,QAAQ;IACR,sEAAsE;IACtE,QAAQ;IACR,gGAAgG;IAChG,QAAQ;IACR,2FAA2F;IAC3F,4EAA4E;IAC5E,gBAAgB;IAChB,6CAA6C;IAC7C,WAAW;IACX,4EAA4E;IAC5E,2EAA2E;IAC3E,4EAA4E;IAC5E,qDAAqD;IACrD,aAAa;IACb,yDAAyD;IACzD,uBAAuB;IACvB,YAAY;AACd","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/core/function/config.js"],"sourcesContent":["import { clone, deepExtend } from '../../utils/object.js';\nimport { DEFAULT_CONFIG } from '../config.js';\nexport var MATRIX_OPTIONS = ['Matrix', 'Array']; // valid values for option matrix\nexport var NUMBER_OPTIONS = ['number', 'BigNumber', 'Fraction']; // valid values for option number\n\nexport function configFactory(config, emit) {\n  /**\n   * Set configuration options for math.js, and get current options.\n   * Will emit a 'config' event, with arguments (curr, prev, changes).\n   *\n   * This function is only available on a mathjs instance created using `create`.\n   *\n   * Syntax:\n   *\n   *     math.config(config: Object): Object\n   *\n   * Examples:\n   *\n   *\n   *     import { create, all } from 'mathjs'\n   *\n   *     // create a mathjs instance\n   *     const math = create(all)\n   *\n   *     math.config().number                // outputs 'number'\n   *     math.evaluate('0.4')                // outputs number 0.4\n   *     math.config({number: 'Fraction'})\n   *     math.evaluate('0.4')                // outputs Fraction 2/5\n   *\n   * @param {Object} [options] Available options:\n   *                            {number} relTol\n   *                              Minimum relative difference between two\n   *                              compared values, used by all comparison functions.\n   *                            {number} absTol\n   *                              Minimum absolute difference between two\n   *                              compared values, used by all comparison functions.\n   *                            {string} matrix\n   *                              A string 'Matrix' (default) or 'Array'.\n   *                            {string} number\n   *                              A string 'number' (default), 'BigNumber', 'bigint', or 'Fraction'\n   *                            {number} precision\n   *                              The number of significant digits for BigNumbers.\n   *                              Not applicable for Numbers.\n   *                            {string} parenthesis\n   *                              How to display parentheses in LaTeX and string\n   *                              output.\n   *                            {string} randomSeed\n   *                              Random seed for seeded pseudo random number generator.\n   *                              Set to null to randomly seed.\n   * @return {Object} Returns the current configuration\n   */\n  function _config(options) {\n    if (options) {\n      if (options.epsilon !== undefined) {\n        // this if is only for backwards compatibility, it can be removed in the future.\n        console.warn('Warning: The configuration option \"epsilon\" is deprecated. Use \"relTol\" and \"absTol\" instead.');\n        var optionsFix = clone(options);\n        optionsFix.relTol = options.epsilon;\n        optionsFix.absTol = options.epsilon * 1e-3;\n        delete optionsFix.epsilon;\n        return _config(optionsFix);\n      }\n      var prev = clone(config);\n\n      // validate some of the options\n      validateOption(options, 'matrix', MATRIX_OPTIONS);\n      validateOption(options, 'number', NUMBER_OPTIONS);\n\n      // merge options\n      deepExtend(config, options);\n      var curr = clone(config);\n      var changes = clone(options);\n\n      // emit 'config' event\n      emit('config', curr, prev, changes);\n      return curr;\n    } else {\n      return clone(config);\n    }\n  }\n\n  // attach the valid options to the function so they can be extended\n  _config.MATRIX_OPTIONS = MATRIX_OPTIONS;\n  _config.NUMBER_OPTIONS = NUMBER_OPTIONS;\n\n  // attach the config properties as readonly properties to the config function\n  Object.keys(DEFAULT_CONFIG).forEach(key => {\n    Object.defineProperty(_config, key, {\n      get: () => config[key],\n      enumerable: true,\n      configurable: true\n    });\n  });\n  return _config;\n}\n\n/**\n * Validate an option\n * @param {Object} options         Object with options\n * @param {string} name            Name of the option to validate\n * @param {Array.<string>} values  Array with valid values for this option\n */\nfunction validateOption(options, name, values) {\n  if (options[name] !== undefined && !values.includes(options[name])) {\n    // unknown value\n    console.warn('Warning: Unknown value \"' + options[name] + '\" for configuration option \"' + name + '\". ' + 'Available options: ' + values.map(value => JSON.stringify(value)).join(', ') + '.');\n  }\n}"],"names":[],"mappings":";;;;;AAAA;AACA;;;AACO,IAAI,iBAAiB;IAAC;IAAU;CAAQ,EAAE,iCAAiC;AAC3E,IAAI,iBAAiB;IAAC;IAAU;IAAa;CAAW,EAAE,iCAAiC;AAE3F,SAAS,cAAc,MAAM,EAAE,IAAI;IACxC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4CC,GACD,SAAS,QAAQ,OAAO;QACtB,IAAI,SAAS;YACX,IAAI,QAAQ,OAAO,KAAK,WAAW;gBACjC,gFAAgF;gBAChF,QAAQ,IAAI,CAAC;gBACb,IAAI,aAAa,CAAA,GAAA,0JAAA,CAAA,QAAK,AAAD,EAAE;gBACvB,WAAW,MAAM,GAAG,QAAQ,OAAO;gBACnC,WAAW,MAAM,GAAG,QAAQ,OAAO,GAAG;gBACtC,OAAO,WAAW,OAAO;gBACzB,OAAO,QAAQ;YACjB;YACA,IAAI,OAAO,CAAA,GAAA,0JAAA,CAAA,QAAK,AAAD,EAAE;YAEjB,+BAA+B;YAC/B,eAAe,SAAS,UAAU;YAClC,eAAe,SAAS,UAAU;YAElC,gBAAgB;YAChB,CAAA,GAAA,0JAAA,CAAA,aAAU,AAAD,EAAE,QAAQ;YACnB,IAAI,OAAO,CAAA,GAAA,0JAAA,CAAA,QAAK,AAAD,EAAE;YACjB,IAAI,UAAU,CAAA,GAAA,0JAAA,CAAA,QAAK,AAAD,EAAE;YAEpB,sBAAsB;YACtB,KAAK,UAAU,MAAM,MAAM;YAC3B,OAAO;QACT,OAAO;YACL,OAAO,CAAA,GAAA,0JAAA,CAAA,QAAK,AAAD,EAAE;QACf;IACF;IAEA,mEAAmE;IACnE,QAAQ,cAAc,GAAG;IACzB,QAAQ,cAAc,GAAG;IAEzB,6EAA6E;IAC7E,OAAO,IAAI,CAAC,yJAAA,CAAA,iBAAc,EAAE,OAAO,CAAC,CAAA;QAClC,OAAO,cAAc,CAAC,SAAS,KAAK;YAClC,KAAK,IAAM,MAAM,CAAC,IAAI;YACtB,YAAY;YACZ,cAAc;QAChB;IACF;IACA,OAAO;AACT;AAEA;;;;;CAKC,GACD,SAAS,eAAe,OAAO,EAAE,IAAI,EAAE,MAAM;IAC3C,IAAI,OAAO,CAAC,KAAK,KAAK,aAAa,CAAC,OAAO,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG;QAClE,gBAAgB;QAChB,QAAQ,IAAI,CAAC,6BAA6B,OAAO,CAAC,KAAK,GAAG,iCAAiC,OAAO,QAAQ,wBAAwB,OAAO,GAAG,CAAC,CAAA,QAAS,KAAK,SAAS,CAAC,QAAQ,IAAI,CAAC,QAAQ;IAC5L;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/core/function/import.js"],"sourcesContent":["import { isBigNumber, isComplex, isFraction, isMatrix, isUnit } from '../../utils/is.js';\nimport { isFactory, stripOptionalNotation } from '../../utils/factory.js';\nimport { hasOwnProperty, lazy } from '../../utils/object.js';\nimport { ArgumentsError } from '../../error/ArgumentsError.js';\nexport function importFactory(typed, load, math, importedFactories) {\n  /**\n   * Import functions from an object or a module.\n   *\n   * This function is only available on a mathjs instance created using `create`.\n   *\n   * Syntax:\n   *\n   *    math.import(functions)\n   *    math.import(functions, options)\n   *\n   * Where:\n   *\n   * - `functions: Object`\n   *   An object with functions or factories to be imported.\n   * - `options: Object` An object with import options. Available options:\n   *   - `override: boolean`\n   *     If true, existing functions will be overwritten. False by default.\n   *   - `silent: boolean`\n   *     If true, the function will not throw errors on duplicates or invalid\n   *     types. False by default.\n   *   - `wrap: boolean`\n   *     If true, the functions will be wrapped in a wrapper function\n   *     which converts data types like Matrix to primitive data types like Array.\n   *     The wrapper is needed when extending math.js with libraries which do not\n   *     support these data type. False by default.\n   *\n   * Examples:\n   *\n   *    import { create, all } from 'mathjs'\n   *    import * as numbers from 'numbers'\n   *\n   *    // create a mathjs instance\n   *    const math = create(all)\n   *\n   *    // define new functions and variables\n   *    math.import({\n   *      myvalue: 42,\n   *      hello: function (name) {\n   *        return 'hello, ' + name + '!'\n   *      }\n   *    })\n   *\n   *    // use the imported function and variable\n   *    math.myvalue * 2               // 84\n   *    math.hello('user')             // 'hello, user!'\n   *\n   *    // import the npm module 'numbers'\n   *    // (must be installed first with `npm install numbers`)\n   *    math.import(numbers, {wrap: true})\n   *\n   *    math.fibonacci(7) // returns 13\n   *\n   * @param {Object | Array} functions  Object with functions to be imported.\n   * @param {Object} [options]          Import options.\n   */\n  function mathImport(functions, options) {\n    var num = arguments.length;\n    if (num !== 1 && num !== 2) {\n      throw new ArgumentsError('import', num, 1, 2);\n    }\n    if (!options) {\n      options = {};\n    }\n    function flattenImports(flatValues, value, name) {\n      if (Array.isArray(value)) {\n        value.forEach(item => flattenImports(flatValues, item));\n      } else if (typeof value === 'object') {\n        for (var _name in value) {\n          if (hasOwnProperty(value, _name)) {\n            flattenImports(flatValues, value[_name], _name);\n          }\n        }\n      } else if (isFactory(value) || name !== undefined) {\n        var flatName = isFactory(value) ? isTransformFunctionFactory(value) ? value.fn + '.transform' // TODO: this is ugly\n        : value.fn : name;\n\n        // we allow importing the same function twice if it points to the same implementation\n        if (hasOwnProperty(flatValues, flatName) && flatValues[flatName] !== value && !options.silent) {\n          throw new Error('Cannot import \"' + flatName + '\" twice');\n        }\n        flatValues[flatName] = value;\n      } else {\n        if (!options.silent) {\n          throw new TypeError('Factory, Object, or Array expected');\n        }\n      }\n    }\n    var flatValues = {};\n    flattenImports(flatValues, functions);\n    for (var name in flatValues) {\n      if (hasOwnProperty(flatValues, name)) {\n        // console.log('import', name)\n        var value = flatValues[name];\n        if (isFactory(value)) {\n          // we ignore name here and enforce the name of the factory\n          // maybe at some point we do want to allow overriding it\n          // in that case we can implement an option overrideFactoryNames: true\n          _importFactory(value, options);\n        } else if (isSupportedType(value)) {\n          _import(name, value, options);\n        } else {\n          if (!options.silent) {\n            throw new TypeError('Factory, Object, or Array expected');\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Add a property to the math namespace\n   * @param {string} name\n   * @param {*} value\n   * @param {Object} options  See import for a description of the options\n   * @private\n   */\n  function _import(name, value, options) {\n    // TODO: refactor this function, it's to complicated and contains duplicate code\n    if (options.wrap && typeof value === 'function') {\n      // create a wrapper around the function\n      value = _wrap(value);\n    }\n\n    // turn a plain function with a typed-function signature into a typed-function\n    if (hasTypedFunctionSignature(value)) {\n      value = typed(name, {\n        [value.signature]: value\n      });\n    }\n    if (typed.isTypedFunction(math[name]) && typed.isTypedFunction(value)) {\n      if (options.override) {\n        // give the typed function the right name\n        value = typed(name, value.signatures);\n      } else {\n        // merge the existing and typed function\n        value = typed(math[name], value);\n      }\n      math[name] = value;\n      delete importedFactories[name];\n      _importTransform(name, value);\n      math.emit('import', name, function resolver() {\n        return value;\n      });\n      return;\n    }\n    if (math[name] === undefined || options.override) {\n      math[name] = value;\n      delete importedFactories[name];\n      _importTransform(name, value);\n      math.emit('import', name, function resolver() {\n        return value;\n      });\n      return;\n    }\n    if (!options.silent) {\n      throw new Error('Cannot import \"' + name + '\": already exists');\n    }\n  }\n  function _importTransform(name, value) {\n    if (value && typeof value.transform === 'function') {\n      math.expression.transform[name] = value.transform;\n      if (allowedInExpressions(name)) {\n        math.expression.mathWithTransform[name] = value.transform;\n      }\n    } else {\n      // remove existing transform\n      delete math.expression.transform[name];\n      if (allowedInExpressions(name)) {\n        math.expression.mathWithTransform[name] = value;\n      }\n    }\n  }\n  function _deleteTransform(name) {\n    delete math.expression.transform[name];\n    if (allowedInExpressions(name)) {\n      math.expression.mathWithTransform[name] = math[name];\n    } else {\n      delete math.expression.mathWithTransform[name];\n    }\n  }\n\n  /**\n   * Create a wrapper a round an function which converts the arguments\n   * to their primitive values (like convert a Matrix to Array)\n   * @param {Function} fn\n   * @return {Function} Returns the wrapped function\n   * @private\n   */\n  function _wrap(fn) {\n    var wrapper = function wrapper() {\n      var args = [];\n      for (var i = 0, len = arguments.length; i < len; i++) {\n        var arg = arguments[i];\n        args[i] = arg && arg.valueOf();\n      }\n      return fn.apply(math, args);\n    };\n    if (fn.transform) {\n      wrapper.transform = fn.transform;\n    }\n    return wrapper;\n  }\n\n  /**\n   * Import an instance of a factory into math.js\n   * @param {function(scope: object)} factory\n   * @param {Object} options  See import for a description of the options\n   * @param {string} [name=factory.name] Optional custom name\n   * @private\n   */\n  function _importFactory(factory, options) {\n    var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : factory.fn;\n    if (name.includes('.')) {\n      throw new Error('Factory name should not contain a nested path. ' + 'Name: ' + JSON.stringify(name));\n    }\n    var namespace = isTransformFunctionFactory(factory) ? math.expression.transform : math;\n    var existingTransform = name in math.expression.transform;\n    var existing = hasOwnProperty(namespace, name) ? namespace[name] : undefined;\n    var resolver = function resolver() {\n      // collect all dependencies, handle finding both functions and classes and other special cases\n      var dependencies = {};\n      factory.dependencies.map(stripOptionalNotation).forEach(dependency => {\n        if (dependency.includes('.')) {\n          throw new Error('Factory dependency should not contain a nested path. ' + 'Name: ' + JSON.stringify(dependency));\n        }\n        if (dependency === 'math') {\n          dependencies.math = math;\n        } else if (dependency === 'mathWithTransform') {\n          dependencies.mathWithTransform = math.expression.mathWithTransform;\n        } else if (dependency === 'classes') {\n          // special case for json reviver\n          dependencies.classes = math;\n        } else {\n          dependencies[dependency] = math[dependency];\n        }\n      });\n      var instance = /* #__PURE__ */factory(dependencies);\n      if (instance && typeof instance.transform === 'function') {\n        throw new Error('Transforms cannot be attached to factory functions. ' + 'Please create a separate function for it with export const path = \"expression.transform\"');\n      }\n      if (existing === undefined || options.override) {\n        return instance;\n      }\n      if (typed.isTypedFunction(existing) && typed.isTypedFunction(instance)) {\n        // merge the existing and new typed function\n        return typed(existing, instance);\n      }\n      if (options.silent) {\n        // keep existing, ignore imported function\n        return existing;\n      } else {\n        throw new Error('Cannot import \"' + name + '\": already exists');\n      }\n    };\n\n    // TODO: add unit test with non-lazy factory\n    if (!factory.meta || factory.meta.lazy !== false) {\n      lazy(namespace, name, resolver);\n\n      // FIXME: remove the `if (existing &&` condition again. Can we make sure subset is loaded before subset.transform? (Name collision, and no dependencies between the two)\n      if (existing && existingTransform) {\n        _deleteTransform(name);\n      } else {\n        if (isTransformFunctionFactory(factory) || factoryAllowedInExpressions(factory)) {\n          lazy(math.expression.mathWithTransform, name, () => namespace[name]);\n        }\n      }\n    } else {\n      namespace[name] = resolver();\n\n      // FIXME: remove the `if (existing &&` condition again. Can we make sure subset is loaded before subset.transform? (Name collision, and no dependencies between the two)\n      if (existing && existingTransform) {\n        _deleteTransform(name);\n      } else {\n        if (isTransformFunctionFactory(factory) || factoryAllowedInExpressions(factory)) {\n          lazy(math.expression.mathWithTransform, name, () => namespace[name]);\n        }\n      }\n    }\n\n    // TODO: improve factories, store a list with imports instead which can be re-played\n    importedFactories[name] = factory;\n    math.emit('import', name, resolver);\n  }\n\n  /**\n   * Check whether given object is a type which can be imported\n   * @param {Function | number | string | boolean | null | Unit | Complex} object\n   * @return {boolean}\n   * @private\n   */\n  function isSupportedType(object) {\n    return typeof object === 'function' || typeof object === 'number' || typeof object === 'string' || typeof object === 'boolean' || object === null || isUnit(object) || isComplex(object) || isBigNumber(object) || isFraction(object) || isMatrix(object) || Array.isArray(object);\n  }\n  function hasTypedFunctionSignature(fn) {\n    return typeof fn === 'function' && typeof fn.signature === 'string';\n  }\n  function allowedInExpressions(name) {\n    return !hasOwnProperty(unsafe, name);\n  }\n  function factoryAllowedInExpressions(factory) {\n    return !factory.fn.includes('.') &&\n    // FIXME: make checking on path redundant, check on meta data instead\n    !hasOwnProperty(unsafe, factory.fn) && (!factory.meta || !factory.meta.isClass);\n  }\n  function isTransformFunctionFactory(factory) {\n    return factory !== undefined && factory.meta !== undefined && factory.meta.isTransformFunction === true || false;\n  }\n\n  // namespaces and functions not available in the parser for safety reasons\n  var unsafe = {\n    expression: true,\n    type: true,\n    docs: true,\n    error: true,\n    json: true,\n    chain: true // chain method not supported. Note that there is a unit chain too.\n  };\n  return mathImport;\n}"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 587, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/core/create.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport typedFunction from 'typed-function';\nimport { ArgumentsError } from '../error/ArgumentsError.js';\nimport { DimensionError } from '../error/DimensionError.js';\nimport { IndexError } from '../error/IndexError.js';\nimport { factory, isFactory } from '../utils/factory.js';\nimport { isAccessorNode, isArray, isArrayNode, isAssignmentNode, isBigInt, isBigNumber, isBlockNode, isBoolean, isChain, isCollection, isComplex, isConditionalNode, isConstantNode, isDate, isDenseMatrix, isFraction, isFunction, isFunctionAssignmentNode, isFunctionNode, isHelp, isIndex, isIndexNode, isMap, isMatrix, isNode, isNull, isNumber, isObject, isObjectNode, isObjectWrappingMap, isOperatorNode, isParenthesisNode, isPartitionedMap, isRange, isRangeNode, isRegExp, isRelationalNode, isResultSet, isSparseMatrix, isString, isSymbolNode, isUndefined, isUnit } from '../utils/is.js';\nimport { deepFlatten, isLegacyFactory } from '../utils/object.js';\nimport * as emitter from './../utils/emitter.js';\nimport { DEFAULT_CONFIG } from './config.js';\nimport { configFactory } from './function/config.js';\nimport { importFactory } from './function/import.js';\n\n/**\n * Create a mathjs instance from given factory functions and optionally config\n *\n * Usage:\n *\n *     const mathjs1 = create({ createAdd, createMultiply, ...})\n *     const config = { number: 'BigNumber' }\n *     const mathjs2 = create(all, config)\n *\n * @param {Object} [factories] An object with factory functions\n *                             The object can contain nested objects,\n *                             all nested objects will be flattened.\n * @param {Object} [config]    Available options:\n *                            {number} relTol\n *                              Minimum relative difference between two\n *                              compared values, used by all comparison functions.\n *                            {number} absTol\n *                              Minimum absolute difference between two\n *                              compared values, used by all comparison functions.\n *                            {string} matrix\n *                              A string 'Matrix' (default) or 'Array'.\n *                            {string} number\n *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n *                            {number} precision\n *                              The number of significant digits for BigNumbers.\n *                              Not applicable for Numbers.\n *                            {boolean} predictable\n *                              Predictable output type of functions. When true,\n *                              output type depends only on the input types. When\n *                              false (default), output type can vary depending\n *                              on input values. For example `math.sqrt(-4)`\n *                              returns `complex('2i')` when predictable is false, and\n *                              returns `NaN` when true.\n *                            {string} randomSeed\n *                              Random seed for seeded pseudo random number generator.\n *                              Set to null to randomly seed.\n * @returns {Object} Returns a bare-bone math.js instance containing\n *                   functions:\n *                   - `import` to add new functions\n *                   - `config` to change configuration\n *                   - `on`, `off`, `once`, `emit` for events\n */\nexport function create(factories, config) {\n  var configInternal = _extends({}, DEFAULT_CONFIG, config);\n\n  // simple test for ES5 support\n  if (typeof Object.create !== 'function') {\n    throw new Error('ES5 not supported by this JavaScript engine. ' + 'Please load the es5-shim and es5-sham library for compatibility.');\n  }\n\n  // create the mathjs instance\n  var math = emitter.mixin({\n    // only here for backward compatibility for legacy factory functions\n    isNumber,\n    isComplex,\n    isBigNumber,\n    isBigInt,\n    isFraction,\n    isUnit,\n    isString,\n    isArray,\n    isMatrix,\n    isCollection,\n    isDenseMatrix,\n    isSparseMatrix,\n    isRange,\n    isIndex,\n    isBoolean,\n    isResultSet,\n    isHelp,\n    isFunction,\n    isDate,\n    isRegExp,\n    isObject,\n    isMap,\n    isPartitionedMap,\n    isObjectWrappingMap,\n    isNull,\n    isUndefined,\n    isAccessorNode,\n    isArrayNode,\n    isAssignmentNode,\n    isBlockNode,\n    isConditionalNode,\n    isConstantNode,\n    isFunctionAssignmentNode,\n    isFunctionNode,\n    isIndexNode,\n    isNode,\n    isObjectNode,\n    isOperatorNode,\n    isParenthesisNode,\n    isRangeNode,\n    isRelationalNode,\n    isSymbolNode,\n    isChain\n  });\n\n  // load config function and apply provided config\n  math.config = configFactory(configInternal, math.emit);\n  math.expression = {\n    transform: {},\n    mathWithTransform: {\n      config: math.config\n    }\n  };\n\n  // cached factories and instances used by function load\n  var legacyFactories = [];\n  var legacyInstances = [];\n\n  /**\n   * Load a function or data type from a factory.\n   * If the function or data type already exists, the existing instance is\n   * returned.\n   * @param {Function} factory\n   * @returns {*}\n   */\n  function load(factory) {\n    if (isFactory(factory)) {\n      return factory(math);\n    }\n    var firstProperty = factory[Object.keys(factory)[0]];\n    if (isFactory(firstProperty)) {\n      return firstProperty(math);\n    }\n    if (!isLegacyFactory(factory)) {\n      console.warn('Factory object with properties `type`, `name`, and `factory` expected', factory);\n      throw new Error('Factory object with properties `type`, `name`, and `factory` expected');\n    }\n    var index = legacyFactories.indexOf(factory);\n    var instance;\n    if (index === -1) {\n      // doesn't yet exist\n      if (factory.math === true) {\n        // pass with math namespace\n        instance = factory.factory(math.type, configInternal, load, math.typed, math);\n      } else {\n        instance = factory.factory(math.type, configInternal, load, math.typed);\n      }\n\n      // append to the cache\n      legacyFactories.push(factory);\n      legacyInstances.push(instance);\n    } else {\n      // already existing function, return the cached instance\n      instance = legacyInstances[index];\n    }\n    return instance;\n  }\n  var importedFactories = {};\n\n  // load the import function\n  function lazyTyped() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return math.typed.apply(math.typed, args);\n  }\n  lazyTyped.isTypedFunction = typedFunction.isTypedFunction;\n  var internalImport = importFactory(lazyTyped, load, math, importedFactories);\n  math.import = internalImport;\n\n  // listen for changes in config, import all functions again when changed\n  // TODO: move this listener into the import function?\n  math.on('config', () => {\n    Object.values(importedFactories).forEach(factory => {\n      if (factory && factory.meta && factory.meta.recreateOnConfigChange) {\n        // FIXME: only re-create when the current instance is the same as was initially created\n        // FIXME: delete the functions/constants before importing them again?\n        internalImport(factory, {\n          override: true\n        });\n      }\n    });\n  });\n\n  // the create function exposed on the mathjs instance is bound to\n  // the factory functions passed before\n  math.create = create.bind(null, factories);\n\n  // export factory function\n  math.factory = factory;\n\n  // import the factory functions like createAdd as an array instead of object,\n  // else they will get a different naming (`createAdd` instead of `add`).\n  math.import(Object.values(deepFlatten(factories)));\n  math.ArgumentsError = ArgumentsError;\n  math.DimensionError = DimensionError;\n  math.IndexError = IndexError;\n  return math;\n}"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 758, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/core/function/typed.js"],"sourcesContent":["/**\n * Create a typed-function which checks the types of the arguments and\n * can match them against multiple provided signatures. The typed-function\n * automatically converts inputs in order to find a matching signature.\n * Typed functions throw informative errors in case of wrong input arguments.\n *\n * See the library [typed-function](https://github.com/josdejong/typed-function)\n * for detailed documentation.\n *\n * Syntax:\n *\n *     math.typed(name, signatures) : function\n *     math.typed(signatures) : function\n *\n * Examples:\n *\n *     // create a typed function with multiple types per argument (type union)\n *     const fn2 = typed({\n *       'number | boolean': function (b) {\n *         return 'b is a number or boolean'\n *       },\n *       'string, number | boolean': function (a, b) {\n *         return 'a is a string, b is a number or boolean'\n *       }\n *     })\n *\n *     // create a typed function with an any type argument\n *     const log = typed({\n *       'string, any': function (event, data) {\n *         console.log('event: ' + event + ', data: ' + JSON.stringify(data))\n *       }\n *     })\n *\n * @param {string} [name]                          Optional name for the typed-function\n * @param {Object<string, function>} signatures   Object with one or multiple function signatures\n * @returns {function} The created typed-function.\n */\n\nimport typedFunction from 'typed-function';\nimport { factory } from '../../utils/factory.js';\nimport { isAccessorNode, isArray, isArrayNode, isAssignmentNode, isBigInt, isBigNumber, isBlockNode, isBoolean, isChain, isCollection, isComplex, isConditionalNode, isConstantNode, isDate, isDenseMatrix, isFraction, isFunction, isFunctionAssignmentNode, isFunctionNode, isHelp, isIndex, isIndexNode, isMap, isMatrix, isNode, isNull, isNumber, isObject, isObjectNode, isOperatorNode, isParenthesisNode, isRange, isRangeNode, isRegExp, isRelationalNode, isResultSet, isSparseMatrix, isString, isSymbolNode, isUndefined, isUnit } from '../../utils/is.js';\nimport { digits } from '../../utils/number.js';\n\n// returns a new instance of typed-function\nvar _createTyped2 = function _createTyped() {\n  // initially, return the original instance of typed-function\n  // consecutively, return a new instance from typed.create.\n  _createTyped2 = typedFunction.create;\n  return typedFunction;\n};\nvar dependencies = ['?BigNumber', '?Complex', '?DenseMatrix', '?Fraction'];\n\n/**\n * Factory function for creating a new typed instance\n * @param {Object} dependencies   Object with data types like Complex and BigNumber\n * @returns {Function}\n */\nexport var createTyped = /* #__PURE__ */factory('typed', dependencies, function createTyped(_ref) {\n  var {\n    BigNumber,\n    Complex,\n    DenseMatrix,\n    Fraction\n  } = _ref;\n  // TODO: typed-function must be able to silently ignore signatures with unknown data types\n\n  // get a new instance of typed-function\n  var typed = _createTyped2();\n\n  // define all types. The order of the types determines in which order function\n  // arguments are type-checked (so for performance it's important to put the\n  // most used types first).\n  typed.clear();\n  typed.addTypes([{\n    name: 'number',\n    test: isNumber\n  }, {\n    name: 'Complex',\n    test: isComplex\n  }, {\n    name: 'BigNumber',\n    test: isBigNumber\n  }, {\n    name: 'bigint',\n    test: isBigInt\n  }, {\n    name: 'Fraction',\n    test: isFraction\n  }, {\n    name: 'Unit',\n    test: isUnit\n  },\n  // The following type matches a valid variable name, i.e., an alphanumeric\n  // string starting with an alphabetic character. It is used (at least)\n  // in the definition of the derivative() function, as the argument telling\n  // what to differentiate over must (currently) be a variable.\n  // TODO: deprecate the identifier type (it's not used anymore, see https://github.com/josdejong/mathjs/issues/3253)\n  {\n    name: 'identifier',\n    test: s => isString && /^(?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C8A\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CD\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7DC\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDDC0-\\uDDF3\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDD4A-\\uDD65\\uDD6F-\\uDD85\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDEC2-\\uDEC4\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDF70-\\uDF81\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE3F\\uDE40\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61\\uDF80-\\uDF89\\uDF8B\\uDF8E\\uDF90-\\uDFB5\\uDFB7\\uDFD1\\uDFD3]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8\\uDFC0-\\uDFE0]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDF02\\uDF04-\\uDF10\\uDF12-\\uDF33\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD80E\\uD80F\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883\\uD885-\\uD887][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2F\\uDC41-\\uDC46\\uDC60-\\uDFFF]|\\uD810[\\uDC00-\\uDFFA]|\\uD811[\\uDC00-\\uDE46]|\\uD818[\\uDD00-\\uDD1D]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE70-\\uDEBE\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDD40-\\uDD6C\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDCFF-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD32\\uDD50-\\uDD52\\uDD55\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD837[\\uDF00-\\uDF1E\\uDF25-\\uDF2A]|\\uD838[\\uDC30-\\uDC6D\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB]|\\uD839[\\uDCD0-\\uDCEB\\uDDD0-\\uDDED\\uDDF0\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF39\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0\\uDFF0-\\uDFFF]|\\uD87B[\\uDC00-\\uDE5D]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A\\uDF50-\\uDFFF]|\\uD888[\\uDC00-\\uDFAF])(?:[0-9A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C8A\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CD\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7DC\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDDC0-\\uDDF3\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDD00-\\uDD23\\uDD4A-\\uDD65\\uDD6F-\\uDD85\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDEC2-\\uDEC4\\uDF00-\\uDF1C\\uDF27\\uDF30-\\uDF45\\uDF70-\\uDF81\\uDFB0-\\uDFC4\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE3F\\uDE40\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61\\uDF80-\\uDF89\\uDF8B\\uDF8E\\uDF90-\\uDFB5\\uDFB7\\uDFD1\\uDFD3]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDEB8\\uDF00-\\uDF1A\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCDF\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8\\uDFC0-\\uDFE0]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDEE0-\\uDEF2\\uDF02\\uDF04-\\uDF10\\uDF12-\\uDF33\\uDFB0]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD80E\\uD80F\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883\\uD885-\\uD887][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2F\\uDC41-\\uDC46\\uDC60-\\uDFFF]|\\uD810[\\uDC00-\\uDFFA]|\\uD811[\\uDC00-\\uDE46]|\\uD818[\\uDD00-\\uDD1D]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE70-\\uDEBE\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDD40-\\uDD6C\\uDE40-\\uDE7F\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDCFF-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD32\\uDD50-\\uDD52\\uDD55\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD837[\\uDF00-\\uDF1E\\uDF25-\\uDF2A]|\\uD838[\\uDC30-\\uDC6D\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB]|\\uD839[\\uDCD0-\\uDCEB\\uDDD0-\\uDDED\\uDDF0\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43\\uDD4B]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF39\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0\\uDFF0-\\uDFFF]|\\uD87B[\\uDC00-\\uDE5D]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A\\uDF50-\\uDFFF]|\\uD888[\\uDC00-\\uDFAF])*$/.test(s)\n  }, {\n    name: 'string',\n    test: isString\n  }, {\n    name: 'Chain',\n    test: isChain\n  }, {\n    name: 'Array',\n    test: isArray\n  }, {\n    name: 'Matrix',\n    test: isMatrix\n  }, {\n    name: 'DenseMatrix',\n    test: isDenseMatrix\n  }, {\n    name: 'SparseMatrix',\n    test: isSparseMatrix\n  }, {\n    name: 'Range',\n    test: isRange\n  }, {\n    name: 'Index',\n    test: isIndex\n  }, {\n    name: 'boolean',\n    test: isBoolean\n  }, {\n    name: 'ResultSet',\n    test: isResultSet\n  }, {\n    name: 'Help',\n    test: isHelp\n  }, {\n    name: 'function',\n    test: isFunction\n  }, {\n    name: 'Date',\n    test: isDate\n  }, {\n    name: 'RegExp',\n    test: isRegExp\n  }, {\n    name: 'null',\n    test: isNull\n  }, {\n    name: 'undefined',\n    test: isUndefined\n  }, {\n    name: 'AccessorNode',\n    test: isAccessorNode\n  }, {\n    name: 'ArrayNode',\n    test: isArrayNode\n  }, {\n    name: 'AssignmentNode',\n    test: isAssignmentNode\n  }, {\n    name: 'BlockNode',\n    test: isBlockNode\n  }, {\n    name: 'ConditionalNode',\n    test: isConditionalNode\n  }, {\n    name: 'ConstantNode',\n    test: isConstantNode\n  }, {\n    name: 'FunctionNode',\n    test: isFunctionNode\n  }, {\n    name: 'FunctionAssignmentNode',\n    test: isFunctionAssignmentNode\n  }, {\n    name: 'IndexNode',\n    test: isIndexNode\n  }, {\n    name: 'Node',\n    test: isNode\n  }, {\n    name: 'ObjectNode',\n    test: isObjectNode\n  }, {\n    name: 'OperatorNode',\n    test: isOperatorNode\n  }, {\n    name: 'ParenthesisNode',\n    test: isParenthesisNode\n  }, {\n    name: 'RangeNode',\n    test: isRangeNode\n  }, {\n    name: 'RelationalNode',\n    test: isRelationalNode\n  }, {\n    name: 'SymbolNode',\n    test: isSymbolNode\n  }, {\n    name: 'Map',\n    test: isMap\n  }, {\n    name: 'Object',\n    test: isObject\n  } // order 'Object' last, it matches on other classes too\n  ]);\n  typed.addConversions([{\n    from: 'number',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      }\n\n      // note: conversion from number to BigNumber can fail if x has >15 digits\n      if (digits(x) > 15) {\n        throw new TypeError('Cannot implicitly convert a number with >15 significant digits to BigNumber ' + '(value: ' + x + '). ' + 'Use function bignumber(x) to convert to BigNumber.');\n      }\n      return new BigNumber(x);\n    }\n  }, {\n    from: 'number',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n      return new Complex(x, 0);\n    }\n  }, {\n    from: 'BigNumber',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n      return new Complex(x.toNumber(), 0);\n    }\n  }, {\n    from: 'bigint',\n    to: 'number',\n    convert: function convert(x) {\n      if (x > Number.MAX_SAFE_INTEGER) {\n        throw new TypeError('Cannot implicitly convert bigint to number: ' + 'value exceeds the max safe integer value (value: ' + x + ')');\n      }\n      return Number(x);\n    }\n  }, {\n    from: 'bigint',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      }\n      return new BigNumber(x.toString());\n    }\n  }, {\n    from: 'bigint',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n      return new Fraction(x.toString());\n    }\n  }, {\n    from: 'Fraction',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      throw new TypeError('Cannot implicitly convert a Fraction to BigNumber or vice versa. ' + 'Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.');\n    }\n  }, {\n    from: 'Fraction',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n      return new Complex(x.valueOf(), 0);\n    }\n  }, {\n    from: 'number',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n      var f = new Fraction(x);\n      if (f.valueOf() !== x) {\n        throw new TypeError('Cannot implicitly convert a number to a Fraction when there will be a loss of precision ' + '(value: ' + x + '). ' + 'Use function fraction(x) to convert to Fraction.');\n      }\n      return f;\n    }\n  }, {\n    // FIXME: add conversion from Fraction to number, for example for `sqrt(fraction(1,3))`\n    //  from: 'Fraction',\n    //  to: 'number',\n    //  convert: function (x) {\n    //    return x.valueOf()\n    //  }\n    // }, {\n    from: 'string',\n    to: 'number',\n    convert: function convert(x) {\n      var n = Number(x);\n      if (isNaN(n)) {\n        throw new Error('Cannot convert \"' + x + '\" to a number');\n      }\n      return n;\n    }\n  }, {\n    from: 'string',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      }\n      try {\n        return new BigNumber(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to BigNumber');\n      }\n    }\n  }, {\n    from: 'string',\n    to: 'bigint',\n    convert: function convert(x) {\n      try {\n        return BigInt(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to BigInt');\n      }\n    }\n  }, {\n    from: 'string',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n      try {\n        return new Fraction(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to Fraction');\n      }\n    }\n  }, {\n    from: 'string',\n    to: 'Complex',\n    convert: function convert(x) {\n      if (!Complex) {\n        throwNoComplex(x);\n      }\n      try {\n        return new Complex(x);\n      } catch (err) {\n        throw new Error('Cannot convert \"' + x + '\" to Complex');\n      }\n    }\n  }, {\n    from: 'boolean',\n    to: 'number',\n    convert: function convert(x) {\n      return +x;\n    }\n  }, {\n    from: 'boolean',\n    to: 'BigNumber',\n    convert: function convert(x) {\n      if (!BigNumber) {\n        throwNoBignumber(x);\n      }\n      return new BigNumber(+x);\n    }\n  }, {\n    from: 'boolean',\n    to: 'bigint',\n    convert: function convert(x) {\n      return BigInt(+x);\n    }\n  }, {\n    from: 'boolean',\n    to: 'Fraction',\n    convert: function convert(x) {\n      if (!Fraction) {\n        throwNoFraction(x);\n      }\n      return new Fraction(+x);\n    }\n  }, {\n    from: 'boolean',\n    to: 'string',\n    convert: function convert(x) {\n      return String(x);\n    }\n  }, {\n    from: 'Array',\n    to: 'Matrix',\n    convert: function convert(array) {\n      if (!DenseMatrix) {\n        throwNoMatrix();\n      }\n      return new DenseMatrix(array);\n    }\n  }, {\n    from: 'Matrix',\n    to: 'Array',\n    convert: function convert(matrix) {\n      return matrix.valueOf();\n    }\n  }]);\n\n  // Provide a suggestion on how to call a function elementwise\n  // This was added primarily as guidance for the v10 -> v11 transition,\n  // and could potentially be removed in the future if it no longer seems\n  // to be helpful.\n  typed.onMismatch = (name, args, signatures) => {\n    var usualError = typed.createError(name, args, signatures);\n    if (['wrongType', 'mismatch'].includes(usualError.data.category) && args.length === 1 && isCollection(args[0]) &&\n    // check if the function can be unary:\n    signatures.some(sig => !sig.params.includes(','))) {\n      var err = new TypeError(\"Function '\".concat(name, \"' doesn't apply to matrices. To call it \") + \"elementwise on a matrix 'M', try 'map(M, \".concat(name, \")'.\"));\n      err.data = usualError.data;\n      throw err;\n    }\n    throw usualError;\n  };\n\n  // Provide a suggestion on how to call a function elementwise\n  // This was added primarily as guidance for the v10 -> v11 transition,\n  // and could potentially be removed in the future if it no longer seems\n  // to be helpful.\n  typed.onMismatch = (name, args, signatures) => {\n    var usualError = typed.createError(name, args, signatures);\n    if (['wrongType', 'mismatch'].includes(usualError.data.category) && args.length === 1 && isCollection(args[0]) &&\n    // check if the function can be unary:\n    signatures.some(sig => !sig.params.includes(','))) {\n      var err = new TypeError(\"Function '\".concat(name, \"' doesn't apply to matrices. To call it \") + \"elementwise on a matrix 'M', try 'map(M, \".concat(name, \")'.\"));\n      err.data = usualError.data;\n      throw err;\n    }\n    throw usualError;\n  };\n  return typed;\n});\nfunction throwNoBignumber(x) {\n  throw new Error(\"Cannot convert value \".concat(x, \" into a BigNumber: no class 'BigNumber' provided\"));\n}\nfunction throwNoComplex(x) {\n  throw new Error(\"Cannot convert value \".concat(x, \" into a Complex number: no class 'Complex' provided\"));\n}\nfunction throwNoMatrix() {\n  throw new Error('Cannot convert array into a Matrix: no class \\'DenseMatrix\\' provided');\n}\nfunction throwNoFraction(x) {\n  throw new Error(\"Cannot convert value \".concat(x, \" into a Fraction, no class 'Fraction' provided.\"));\n}"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1278, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 1588, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/plain/number/utils.js"],"sourcesContent":["import { isInteger } from '../../utils/number.js';\nvar n1 = 'number';\nexport function isIntegerNumber(x) {\n  return isInteger(x);\n}\nisIntegerNumber.signature = n1;\nexport function isNegativeNumber(x) {\n  return x < 0;\n}\nisNegativeNumber.signature = n1;\nexport function isPositiveNumber(x) {\n  return x > 0;\n}\nisPositiveNumber.signature = n1;\nexport function isZeroNumber(x) {\n  return x === 0;\n}\nisZeroNumber.signature = n1;\nexport function isNaNNumber(x) {\n  return Number.isNaN(x);\n}\nisNaNNumber.signature = n1;"],"names":[],"mappings":";;;;;;;AAAA;;AACA,IAAI,KAAK;AACF,SAAS,gBAAgB,CAAC;IAC/B,OAAO,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE;AACnB;AACA,gBAAgB,SAAS,GAAG;AACrB,SAAS,iBAAiB,CAAC;IAChC,OAAO,IAAI;AACb;AACA,iBAAiB,SAAS,GAAG;AACtB,SAAS,iBAAiB,CAAC;IAChC,OAAO,IAAI;AACb;AACA,iBAAiB,SAAS,GAAG;AACtB,SAAS,aAAa,CAAC;IAC5B,OAAO,MAAM;AACf;AACA,aAAa,SAAS,GAAG;AAClB,SAAS,YAAY,CAAC;IAC3B,OAAO,OAAO,KAAK,CAAC;AACtB;AACA,YAAY,SAAS,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1624, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/plain/number/arithmetic.js"],"sourcesContent":["import { cbrt, expm1, isInteger, log10, log1p, log2, sign, toFixed } from '../../utils/number.js';\nvar n1 = 'number';\nvar n2 = 'number, number';\nexport function absNumber(a) {\n  return Math.abs(a);\n}\nabsNumber.signature = n1;\nexport function addNumber(a, b) {\n  return a + b;\n}\naddNumber.signature = n2;\nexport function subtractNumber(a, b) {\n  return a - b;\n}\nsubtractNumber.signature = n2;\nexport function multiplyNumber(a, b) {\n  return a * b;\n}\nmultiplyNumber.signature = n2;\nexport function divideNumber(a, b) {\n  return a / b;\n}\ndivideNumber.signature = n2;\nexport function unaryMinusNumber(x) {\n  return -x;\n}\nunaryMinusNumber.signature = n1;\nexport function unaryPlusNumber(x) {\n  return x;\n}\nunaryPlusNumber.signature = n1;\nexport function cbrtNumber(x) {\n  return cbrt(x);\n}\ncbrtNumber.signature = n1;\nexport function cubeNumber(x) {\n  return x * x * x;\n}\ncubeNumber.signature = n1;\nexport function expNumber(x) {\n  return Math.exp(x);\n}\nexpNumber.signature = n1;\nexport function expm1Number(x) {\n  return expm1(x);\n}\nexpm1Number.signature = n1;\n\n/**\n * Calculate gcd for numbers\n * @param {number} a\n * @param {number} b\n * @returns {number} Returns the greatest common denominator of a and b\n */\nexport function gcdNumber(a, b) {\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function gcd must be integer numbers');\n  }\n\n  // https://en.wikipedia.org/wiki/Euclidean_algorithm\n  var r;\n  while (b !== 0) {\n    r = a % b;\n    a = b;\n    b = r;\n  }\n  return a < 0 ? -a : a;\n}\ngcdNumber.signature = n2;\n\n/**\n * Calculate lcm for two numbers\n * @param {number} a\n * @param {number} b\n * @returns {number} Returns the least common multiple of a and b\n */\nexport function lcmNumber(a, b) {\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function lcm must be integer numbers');\n  }\n  if (a === 0 || b === 0) {\n    return 0;\n  }\n\n  // https://en.wikipedia.org/wiki/Euclidean_algorithm\n  // evaluate lcm here inline to reduce overhead\n  var t;\n  var prod = a * b;\n  while (b !== 0) {\n    t = b;\n    b = a % t;\n    a = t;\n  }\n  return Math.abs(prod / a);\n}\nlcmNumber.signature = n2;\n\n/**\n * Calculate the logarithm of a value, optionally to a given base.\n * @param {number} x\n * @param {number | null | undefined} base\n * @return {number}\n */\nexport function logNumber(x, y) {\n  if (y) {\n    return Math.log(x) / Math.log(y);\n  }\n  return Math.log(x);\n}\n\n/**\n * Calculate the 10-base logarithm of a number\n * @param {number} x\n * @return {number}\n */\nexport function log10Number(x) {\n  return log10(x);\n}\nlog10Number.signature = n1;\n\n/**\n * Calculate the 2-base logarithm of a number\n * @param {number} x\n * @return {number}\n */\nexport function log2Number(x) {\n  return log2(x);\n}\nlog2Number.signature = n1;\n\n/**\n * Calculate the natural logarithm of a `number+1`\n * @param {number} x\n * @returns {number}\n */\nexport function log1pNumber(x) {\n  return log1p(x);\n}\nlog1pNumber.signature = n1;\n\n/**\n * Calculate the modulus of two numbers\n * @param {number} x\n * @param {number} y\n * @returns {number} res\n * @private\n */\nexport function modNumber(x, y) {\n  // We don't use JavaScript's % operator here as this doesn't work\n  // correctly for x < 0 and x === 0\n  // see https://en.wikipedia.org/wiki/Modulo_operation\n  return y === 0 ? x : x - y * Math.floor(x / y);\n}\nmodNumber.signature = n2;\n\n/**\n * Calculate the nth root of a, solve x^root == a\n * http://rosettacode.org/wiki/Nth_root#JavaScript\n * @param {number} a\n * @param {number} [2] root\n * @private\n */\nexport function nthRootNumber(a) {\n  var root = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var inv = root < 0;\n  if (inv) {\n    root = -root;\n  }\n  if (root === 0) {\n    throw new Error('Root must be non-zero');\n  }\n  if (a < 0 && Math.abs(root) % 2 !== 1) {\n    throw new Error('Root must be odd when a is negative.');\n  }\n\n  // edge cases zero and infinity\n  if (a === 0) {\n    return inv ? Infinity : 0;\n  }\n  if (!isFinite(a)) {\n    return inv ? 0 : a;\n  }\n  var x = Math.pow(Math.abs(a), 1 / root);\n  // If a < 0, we require that root is an odd integer,\n  // so (-1) ^ (1/root) = -1\n  x = a < 0 ? -x : x;\n  return inv ? 1 / x : x;\n\n  // Very nice algorithm, but fails with nthRoot(-2, 3).\n  // Newton's method has some well-known problems at times:\n  // https://en.wikipedia.org/wiki/Newton%27s_method#Failure_analysis\n  /*\n  let x = 1 // Initial guess\n  let xPrev = 1\n  let i = 0\n  const iMax = 10000\n  do {\n    const delta = (a / Math.pow(x, root - 1) - x) / root\n    xPrev = x\n    x = x + delta\n    i++\n  }\n  while (xPrev !== x && i < iMax)\n   if (xPrev !== x) {\n    throw new Error('Function nthRoot failed to converge')\n  }\n   return inv ? 1 / x : x\n  */\n}\nexport function signNumber(x) {\n  return sign(x);\n}\nsignNumber.signature = n1;\nexport function sqrtNumber(x) {\n  return Math.sqrt(x);\n}\nsqrtNumber.signature = n1;\nexport function squareNumber(x) {\n  return x * x;\n}\nsquareNumber.signature = n1;\n\n/**\n * Calculate xgcd for two numbers\n * @param {number} a\n * @param {number} b\n * @return {number} result\n * @private\n */\nexport function xgcdNumber(a, b) {\n  // source: https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm\n  var t; // used to swap two variables\n  var q; // quotient\n  var r; // remainder\n  var x = 0;\n  var lastx = 1;\n  var y = 1;\n  var lasty = 0;\n  if (!isInteger(a) || !isInteger(b)) {\n    throw new Error('Parameters in function xgcd must be integer numbers');\n  }\n  while (b) {\n    q = Math.floor(a / b);\n    r = a - q * b;\n    t = x;\n    x = lastx - q * x;\n    lastx = t;\n    t = y;\n    y = lasty - q * y;\n    lasty = t;\n    a = b;\n    b = r;\n  }\n  var res;\n  if (a < 0) {\n    res = [-a, -lastx, -lasty];\n  } else {\n    res = [a, a ? lastx : 0, lasty];\n  }\n  return res;\n}\nxgcdNumber.signature = n2;\n\n/**\n * Calculates the power of x to y, x^y, for two numbers.\n * @param {number} x\n * @param {number} y\n * @return {number} res\n */\nexport function powNumber(x, y) {\n  // x^Infinity === 0 if -1 < x < 1\n  // A real number 0 is returned instead of complex(0)\n  if (x * x < 1 && y === Infinity || x * x > 1 && y === -Infinity) {\n    return 0;\n  }\n  return Math.pow(x, y);\n}\npowNumber.signature = n2;\n\n/**\n * round a number to the given number of decimals, or to zero if decimals is\n * not provided\n * @param {number} value\n * @param {number} decimals       number of decimals, between 0 and 15 (0 by default)\n * @return {number} roundedValue\n */\nexport function roundNumber(value) {\n  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  if (!isInteger(decimals) || decimals < 0 || decimals > 15) {\n    throw new Error('Number of decimals in function round must be an integer from 0 to 15 inclusive');\n  }\n  return parseFloat(toFixed(value, decimals));\n}\n\n/**\n * Calculate the norm of a number, the absolute value.\n * @param {number} x\n * @return {number}\n */\nexport function normNumber(x) {\n  return Math.abs(x);\n}\nnormNumber.signature = n1;"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1881, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/plain/number/bitwise.js"],"sourcesContent":["import { isInteger } from '../../utils/number.js';\nvar n1 = 'number';\nvar n2 = 'number, number';\nexport function bitAndNumber(x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function bitAnd');\n  }\n  return x & y;\n}\nbitAndNumber.signature = n2;\nexport function bitNotNumber(x) {\n  if (!isInteger(x)) {\n    throw new Error('Integer expected in function bitNot');\n  }\n  return ~x;\n}\nbitNotNumber.signature = n1;\nexport function bitOrNumber(x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function bitOr');\n  }\n  return x | y;\n}\nbitOrNumber.signature = n2;\nexport function bitXorNumber(x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function bitXor');\n  }\n  return x ^ y;\n}\nbitXorNumber.signature = n2;\nexport function leftShiftNumber(x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function leftShift');\n  }\n  return x << y;\n}\nleftShiftNumber.signature = n2;\nexport function rightArithShiftNumber(x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function rightArithShift');\n  }\n  return x >> y;\n}\nrightArithShiftNumber.signature = n2;\nexport function rightLogShiftNumber(x, y) {\n  if (!isInteger(x) || !isInteger(y)) {\n    throw new Error('Integers expected in function rightLogShift');\n  }\n  return x >>> y;\n}\nrightLogShiftNumber.signature = n2;"],"names":[],"mappings":";;;;;;;;;AAAA;;AACA,IAAI,KAAK;AACT,IAAI,KAAK;AACF,SAAS,aAAa,CAAC,EAAE,CAAC;IAC/B,IAAI,CAAC,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,IAAI;QAClC,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,IAAI;AACb;AACA,aAAa,SAAS,GAAG;AAClB,SAAS,aAAa,CAAC;IAC5B,IAAI,CAAC,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,IAAI;QACjB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,CAAC;AACV;AACA,aAAa,SAAS,GAAG;AAClB,SAAS,YAAY,CAAC,EAAE,CAAC;IAC9B,IAAI,CAAC,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,IAAI;QAClC,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,IAAI;AACb;AACA,YAAY,SAAS,GAAG;AACjB,SAAS,aAAa,CAAC,EAAE,CAAC;IAC/B,IAAI,CAAC,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,IAAI;QAClC,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,IAAI;AACb;AACA,aAAa,SAAS,GAAG;AAClB,SAAS,gBAAgB,CAAC,EAAE,CAAC;IAClC,IAAI,CAAC,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,IAAI;QAClC,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,KAAK;AACd;AACA,gBAAgB,SAAS,GAAG;AACrB,SAAS,sBAAsB,CAAC,EAAE,CAAC;IACxC,IAAI,CAAC,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,IAAI;QAClC,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,KAAK;AACd;AACA,sBAAsB,SAAS,GAAG;AAC3B,SAAS,oBAAoB,CAAC,EAAE,CAAC;IACtC,IAAI,CAAC,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,MAAM,CAAC,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,IAAI;QAClC,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,MAAM;AACf;AACA,oBAAoB,SAAS,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1949, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/plain/number/logical.js"],"sourcesContent":["var n1 = 'number';\nvar n2 = 'number, number';\nexport function notNumber(x) {\n  return !x;\n}\nnotNumber.signature = n1;\nexport function orNumber(x, y) {\n  return !!(x || y);\n}\norNumber.signature = n2;\nexport function xorNumber(x, y) {\n  return !!x !== !!y;\n}\nxorNumber.signature = n2;\nexport function andNumber(x, y) {\n  return !!(x && y);\n}\nandNumber.signature = n2;"],"names":[],"mappings":";;;;;;AAAA,IAAI,KAAK;AACT,IAAI,KAAK;AACF,SAAS,UAAU,CAAC;IACzB,OAAO,CAAC;AACV;AACA,UAAU,SAAS,GAAG;AACf,SAAS,SAAS,CAAC,EAAE,CAAC;IAC3B,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;AAClB;AACA,SAAS,SAAS,GAAG;AACd,SAAS,UAAU,CAAC,EAAE,CAAC;IAC5B,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC;AACnB;AACA,UAAU,SAAS,GAAG;AACf,SAAS,UAAU,CAAC,EAAE,CAAC;IAC5B,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;AAClB;AACA,UAAU,SAAS,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1979, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/plain/number/trigonometry.js"],"sourcesContent":["import { acosh, asinh, atanh, cosh, sign, sinh, tanh } from '../../utils/number.js';\nvar n1 = 'number';\nvar n2 = 'number, number';\nexport function acosNumber(x) {\n  return Math.acos(x);\n}\nacosNumber.signature = n1;\nexport function acoshNumber(x) {\n  return acosh(x);\n}\nacoshNumber.signature = n1;\nexport function acotNumber(x) {\n  return Math.atan(1 / x);\n}\nacotNumber.signature = n1;\nexport function acothNumber(x) {\n  return isFinite(x) ? (Math.log((x + 1) / x) + Math.log(x / (x - 1))) / 2 : 0;\n}\nacothNumber.signature = n1;\nexport function acscNumber(x) {\n  return Math.asin(1 / x);\n}\nacscNumber.signature = n1;\nexport function acschNumber(x) {\n  var xInv = 1 / x;\n  return Math.log(xInv + Math.sqrt(xInv * xInv + 1));\n}\nacschNumber.signature = n1;\nexport function asecNumber(x) {\n  return Math.acos(1 / x);\n}\nasecNumber.signature = n1;\nexport function asechNumber(x) {\n  var xInv = 1 / x;\n  var ret = Math.sqrt(xInv * xInv - 1);\n  return Math.log(ret + xInv);\n}\nasechNumber.signature = n1;\nexport function asinNumber(x) {\n  return Math.asin(x);\n}\nasinNumber.signature = n1;\nexport function asinhNumber(x) {\n  return asinh(x);\n}\nasinhNumber.signature = n1;\nexport function atanNumber(x) {\n  return Math.atan(x);\n}\natanNumber.signature = n1;\nexport function atan2Number(y, x) {\n  return Math.atan2(y, x);\n}\natan2Number.signature = n2;\nexport function atanhNumber(x) {\n  return atanh(x);\n}\natanhNumber.signature = n1;\nexport function cosNumber(x) {\n  return Math.cos(x);\n}\ncosNumber.signature = n1;\nexport function coshNumber(x) {\n  return cosh(x);\n}\ncoshNumber.signature = n1;\nexport function cotNumber(x) {\n  return 1 / Math.tan(x);\n}\ncotNumber.signature = n1;\nexport function cothNumber(x) {\n  var e = Math.exp(2 * x);\n  return (e + 1) / (e - 1);\n}\ncothNumber.signature = n1;\nexport function cscNumber(x) {\n  return 1 / Math.sin(x);\n}\ncscNumber.signature = n1;\nexport function cschNumber(x) {\n  // consider values close to zero (+/-)\n  if (x === 0) {\n    return Number.POSITIVE_INFINITY;\n  } else {\n    return Math.abs(2 / (Math.exp(x) - Math.exp(-x))) * sign(x);\n  }\n}\ncschNumber.signature = n1;\nexport function secNumber(x) {\n  return 1 / Math.cos(x);\n}\nsecNumber.signature = n1;\nexport function sechNumber(x) {\n  return 2 / (Math.exp(x) + Math.exp(-x));\n}\nsechNumber.signature = n1;\nexport function sinNumber(x) {\n  return Math.sin(x);\n}\nsinNumber.signature = n1;\nexport function sinhNumber(x) {\n  return sinh(x);\n}\nsinhNumber.signature = n1;\nexport function tanNumber(x) {\n  return Math.tan(x);\n}\ntanNumber.signature = n1;\nexport function tanhNumber(x) {\n  return tanh(x);\n}\ntanhNumber.signature = n1;"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2125, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/plain/number/combinations.js"],"sourcesContent":["import { isInteger } from '../../utils/number.js';\nimport { product } from '../../utils/product.js';\nexport function combinationsNumber(n, k) {\n  if (!isInteger(n) || n < 0) {\n    throw new TypeError('Positive integer value expected in function combinations');\n  }\n  if (!isInteger(k) || k < 0) {\n    throw new TypeError('Positive integer value expected in function combinations');\n  }\n  if (k > n) {\n    throw new TypeError('k must be less than or equal to n');\n  }\n  var nMinusk = n - k;\n  var answer = 1;\n  var firstnumerator = k < nMinusk ? nMinusk + 1 : k + 1;\n  var nextdivisor = 2;\n  var lastdivisor = k < nMinusk ? k : nMinusk;\n  // balance multiplications and divisions to try to keep intermediate values\n  // in exact-integer range as long as possible\n  for (var nextnumerator = firstnumerator; nextnumerator <= n; ++nextnumerator) {\n    answer *= nextnumerator;\n    while (nextdivisor <= lastdivisor && answer % nextdivisor === 0) {\n      answer /= nextdivisor;\n      ++nextdivisor;\n    }\n  }\n  // for big n, k, floating point may have caused weirdness in remainder\n  if (nextdivisor <= lastdivisor) {\n    answer /= product(nextdivisor, lastdivisor);\n  }\n  return answer;\n}\ncombinationsNumber.signature = 'number, number';"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,SAAS,mBAAmB,CAAC,EAAE,CAAC;IACrC,IAAI,CAAC,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,MAAM,IAAI,GAAG;QAC1B,MAAM,IAAI,UAAU;IACtB;IACA,IAAI,CAAC,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,MAAM,IAAI,GAAG;QAC1B,MAAM,IAAI,UAAU;IACtB;IACA,IAAI,IAAI,GAAG;QACT,MAAM,IAAI,UAAU;IACtB;IACA,IAAI,UAAU,IAAI;IAClB,IAAI,SAAS;IACb,IAAI,iBAAiB,IAAI,UAAU,UAAU,IAAI,IAAI;IACrD,IAAI,cAAc;IAClB,IAAI,cAAc,IAAI,UAAU,IAAI;IACpC,2EAA2E;IAC3E,6CAA6C;IAC7C,IAAK,IAAI,gBAAgB,gBAAgB,iBAAiB,GAAG,EAAE,cAAe;QAC5E,UAAU;QACV,MAAO,eAAe,eAAe,SAAS,gBAAgB,EAAG;YAC/D,UAAU;YACV,EAAE;QACJ;IACF;IACA,sEAAsE;IACtE,IAAI,eAAe,aAAa;QAC9B,UAAU,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,aAAa;IACjC;IACA,OAAO;AACT;AACA,mBAAmB,SAAS,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2169, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/plain/number/probability.js"],"sourcesContent":["/* eslint-disable no-loss-of-precision */\n\nimport { isInteger } from '../../utils/number.js';\nimport { product } from '../../utils/product.js';\nexport function gammaNumber(n) {\n  var x;\n  if (isInteger(n)) {\n    if (n <= 0) {\n      return isFinite(n) ? Infinity : NaN;\n    }\n    if (n > 171) {\n      return Infinity; // Will overflow\n    }\n    return product(1, n - 1);\n  }\n  if (n < 0.5) {\n    return Math.PI / (Math.sin(Math.PI * n) * gammaNumber(1 - n));\n  }\n  if (n >= 171.35) {\n    return Infinity; // will overflow\n  }\n  if (n > 85.0) {\n    // Extended Stirling Approx\n    var twoN = n * n;\n    var threeN = twoN * n;\n    var fourN = threeN * n;\n    var fiveN = fourN * n;\n    return Math.sqrt(2 * Math.PI / n) * Math.pow(n / Math.E, n) * (1 + 1 / (12 * n) + 1 / (288 * twoN) - 139 / (51840 * threeN) - 571 / (2488320 * fourN) + 163879 / (209018880 * fiveN) + 5246819 / (75246796800 * fiveN * n));\n  }\n  --n;\n  x = gammaP[0];\n  for (var i = 1; i < gammaP.length; ++i) {\n    x += gammaP[i] / (n + i);\n  }\n  var t = n + gammaG + 0.5;\n  return Math.sqrt(2 * Math.PI) * Math.pow(t, n + 0.5) * Math.exp(-t) * x;\n}\ngammaNumber.signature = 'number';\n\n// TODO: comment on the variables g and p\n\nexport var gammaG = 4.7421875;\nexport var gammaP = [0.99999999999999709182, 57.156235665862923517, -59.597960355475491248, 14.136097974741747174, -0.49191381609762019978, 0.33994649984811888699e-4, 0.46523628927048575665e-4, -0.98374475304879564677e-4, 0.15808870322491248884e-3, -0.21026444172410488319e-3, 0.21743961811521264320e-3, -0.16431810653676389022e-3, 0.84418223983852743293e-4, -0.26190838401581408670e-4, 0.36899182659531622704e-5];\n\n// lgamma implementation ref: https://mrob.com/pub/ries/lanczos-gamma.html#code\n\n// log(2 * pi) / 2\nexport var lnSqrt2PI = 0.91893853320467274178;\nexport var lgammaG = 5; // Lanczos parameter \"g\"\nexport var lgammaN = 7; // Range of coefficients \"n\"\n\nexport var lgammaSeries = [1.000000000190015, 76.18009172947146, -86.50532032941677, 24.01409824083091, -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5];\nexport function lgammaNumber(n) {\n  if (n < 0) return NaN;\n  if (n === 0) return Infinity;\n  if (!isFinite(n)) return n;\n  if (n < 0.5) {\n    // Use Euler's reflection formula:\n    // gamma(z) = PI / (sin(PI * z) * gamma(1 - z))\n    return Math.log(Math.PI / Math.sin(Math.PI * n)) - lgammaNumber(1 - n);\n  }\n\n  // Compute the logarithm of the Gamma function using the Lanczos method\n\n  n = n - 1;\n  var base = n + lgammaG + 0.5; // Base of the Lanczos exponential\n  var sum = lgammaSeries[0];\n\n  // We start with the terms that have the smallest coefficients and largest denominator\n  for (var i = lgammaN - 1; i >= 1; i--) {\n    sum += lgammaSeries[i] / (n + i);\n  }\n  return lnSqrt2PI + (n + 0.5) * Math.log(base) - base + Math.log(sum);\n}\nlgammaNumber.signature = 'number';"],"names":[],"mappings":"AAAA,uCAAuC;;;;;;;;;;AAEvC;AACA;;;AACO,SAAS,YAAY,CAAC;IAC3B,IAAI;IACJ,IAAI,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAD,EAAE,IAAI;QAChB,IAAI,KAAK,GAAG;YACV,OAAO,SAAS,KAAK,WAAW;QAClC;QACA,IAAI,IAAI,KAAK;YACX,OAAO,UAAU,gBAAgB;QACnC;QACA,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,GAAG,IAAI;IACxB;IACA,IAAI,IAAI,KAAK;QACX,OAAO,KAAK,EAAE,GAAG,CAAC,KAAK,GAAG,CAAC,KAAK,EAAE,GAAG,KAAK,YAAY,IAAI,EAAE;IAC9D;IACA,IAAI,KAAK,QAAQ;QACf,OAAO,UAAU,gBAAgB;IACnC;IACA,IAAI,IAAI,MAAM;QACZ,2BAA2B;QAC3B,IAAI,OAAO,IAAI;QACf,IAAI,SAAS,OAAO;QACpB,IAAI,QAAQ,SAAS;QACrB,IAAI,QAAQ,QAAQ;QACpB,OAAO,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,KAAK,GAAG,CAAC,IAAI,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,MAAM,CAAC,QAAQ,MAAM,IAAI,MAAM,CAAC,UAAU,KAAK,IAAI,SAAS,CAAC,YAAY,KAAK,IAAI,UAAU,CAAC,cAAc,QAAQ,CAAC,CAAC;IAC5N;IACA,EAAE;IACF,IAAI,MAAM,CAAC,EAAE;IACb,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,EAAE,EAAG;QACtC,KAAK,MAAM,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC;IACzB;IACA,IAAI,IAAI,IAAI,SAAS;IACrB,OAAO,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,OAAO,KAAK,GAAG,CAAC,CAAC,KAAK;AACxE;AACA,YAAY,SAAS,GAAG;AAIjB,IAAI,SAAS;AACb,IAAI,SAAS;IAAC;IAAwB;IAAuB,CAAC;IAAuB;IAAuB,CAAC;IAAwB;IAA2B;IAA2B,CAAC;IAA2B;IAA2B,CAAC;IAA2B;IAA2B,CAAC;IAA2B;IAA2B,CAAC;IAA2B;CAA0B;AAKtZ,IAAI,YAAY;AAChB,IAAI,UAAU,GAAG,wBAAwB;AACzC,IAAI,UAAU,GAAG,4BAA4B;AAE7C,IAAI,eAAe;IAAC;IAAmB;IAAmB,CAAC;IAAmB;IAAmB,CAAC;IAAmB;IAAuB,CAAC;CAAmB;AAChK,SAAS,aAAa,CAAC;IAC5B,IAAI,IAAI,GAAG,OAAO;IAClB,IAAI,MAAM,GAAG,OAAO;IACpB,IAAI,CAAC,SAAS,IAAI,OAAO;IACzB,IAAI,IAAI,KAAK;QACX,kCAAkC;QAClC,+CAA+C;QAC/C,OAAO,KAAK,GAAG,CAAC,KAAK,EAAE,GAAG,KAAK,GAAG,CAAC,KAAK,EAAE,GAAG,MAAM,aAAa,IAAI;IACtE;IAEA,uEAAuE;IAEvE,IAAI,IAAI;IACR,IAAI,OAAO,IAAI,UAAU,KAAK,kCAAkC;IAChE,IAAI,MAAM,YAAY,CAAC,EAAE;IAEzB,sFAAsF;IACtF,IAAK,IAAI,IAAI,UAAU,GAAG,KAAK,GAAG,IAAK;QACrC,OAAO,YAAY,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC;IACjC;IACA,OAAO,YAAY,CAAC,IAAI,GAAG,IAAI,KAAK,GAAG,CAAC,QAAQ,OAAO,KAAK,GAAG,CAAC;AAClE;AACA,aAAa,SAAS,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2273, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/plain/number/constants.js"],"sourcesContent":["export var pi = Math.PI;\nexport var tau = 2 * Math.PI;\nexport var e = Math.E;\nexport var phi = 1.6180339887498948; // eslint-disable-line no-loss-of-precision"],"names":[],"mappings":";;;;;;AAAO,IAAI,KAAK,KAAK,EAAE;AAChB,IAAI,MAAM,IAAI,KAAK,EAAE;AACrB,IAAI,IAAI,KAAK,CAAC;AACd,IAAI,MAAM,oBAAoB,2CAA2C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2289, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/json/reviver.js"],"sourcesContent":["import { factory } from '../utils/factory.js';\nvar name = 'reviver';\nvar dependencies = ['classes'];\nexport var createReviver = /* #__PURE__ */factory(name, dependencies, _ref => {\n  var {\n    classes\n  } = _ref;\n  /**\n   * Instantiate mathjs data types from their JSON representation\n   * @param {string} key\n   * @param {*} value\n   * @returns {*} Returns the revived object\n   */\n  return function reviver(key, value) {\n    var constructor = classes[value && value.mathjs];\n    if (constructor && typeof constructor.fromJSON === 'function') {\n      return constructor.fromJSON(value);\n    }\n    return value;\n  };\n});"],"names":[],"mappings":";;;AAAA;;AACA,IAAI,OAAO;AACX,IAAI,eAAe;IAAC;CAAU;AACvB,IAAI,gBAAgB,aAAa,GAAE,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,MAAM,cAAc,CAAA;IACpE,IAAI,EACF,OAAO,EACR,GAAG;IACJ;;;;;GAKC,GACD,OAAO,SAAS,QAAQ,GAAG,EAAE,KAAK;QAChC,IAAI,cAAc,OAAO,CAAC,SAAS,MAAM,MAAM,CAAC;QAChD,IAAI,eAAe,OAAO,YAAY,QAAQ,KAAK,YAAY;YAC7D,OAAO,YAAY,QAAQ,CAAC;QAC9B;QACA,OAAO;IACT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2319, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/json/replacer.js"],"sourcesContent":["import { factory } from '../utils/factory.js';\nvar name = 'replacer';\nvar dependencies = [];\nexport var createReplacer = /* #__PURE__ */factory(name, dependencies, () => {\n  /**\n   * Stringify data types into their JSON representation.\n   * Most data types can be serialized using their `.toJSON` method,\n   * but not all, for example the number `Infinity`. For these cases you have\n   * to use the replacer. Example usage:\n   *\n   *     JSON.stringify([2, Infinity], math.replacer)\n   *\n   * @param {string} key\n   * @param {*} value\n   * @returns {*} Returns the replaced object\n   */\n  return function replacer(key, value) {\n    // the numeric values Infinitiy, -Infinity, and NaN cannot be serialized to JSON\n    if (typeof value === 'number' && (!isFinite(value) || isNaN(value))) {\n      return {\n        mathjs: 'number',\n        value: String(value)\n      };\n    }\n    if (typeof value === 'bigint') {\n      return {\n        mathjs: 'bigint',\n        value: String(value)\n      };\n    }\n    return value;\n  };\n});"],"names":[],"mappings":";;;AAAA;;AACA,IAAI,OAAO;AACX,IAAI,eAAe,EAAE;AACd,IAAI,iBAAiB,aAAa,GAAE,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,MAAM,cAAc;IACrE;;;;;;;;;;;GAWC,GACD,OAAO,SAAS,SAAS,GAAG,EAAE,KAAK;QACjC,gFAAgF;QAChF,IAAI,OAAO,UAAU,YAAY,CAAC,CAAC,SAAS,UAAU,MAAM,MAAM,GAAG;YACnE,OAAO;gBACL,QAAQ;gBACR,OAAO,OAAO;YAChB;QACF;QACA,IAAI,OAAO,UAAU,UAAU;YAC7B,OAAO;gBACL,QAAQ;gBACR,OAAO,OAAO;YAChB;QACF;QACA,OAAO;IACT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2361, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/version.js"],"sourcesContent":["export var version = '13.2.3';\n// Note: This file is automatically generated when building math.js.\n// Changes made in this file will be overwritten."],"names":[],"mappings":";;;AAAO,IAAI,UAAU,UACrB,oEAAoE;CACpE,iDAAiD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2372, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/constants.js"],"sourcesContent":["import { factory } from './utils/factory.js';\nimport { version } from './version.js';\nimport { createBigNumberE, createBigNumberPhi, createBigNumberPi, createBigNumberTau } from './utils/bignumber/constants.js';\nimport { pi, tau, e, phi } from './plain/number/index.js';\nexport var createTrue = /* #__PURE__ */factory('true', [], () => true);\nexport var createFalse = /* #__PURE__ */factory('false', [], () => false);\nexport var createNull = /* #__PURE__ */factory('null', [], () => null);\nexport var createInfinity = /* #__PURE__ */recreateFactory('Infinity', ['config', '?BigNumber'], _ref => {\n  var {\n    config,\n    BigNumber\n  } = _ref;\n  return config.number === 'BigNumber' ? new BigNumber(Infinity) : Infinity;\n});\nexport var createNaN = /* #__PURE__ */recreateFactory('NaN', ['config', '?BigNumber'], _ref2 => {\n  var {\n    config,\n    BigNumber\n  } = _ref2;\n  return config.number === 'BigNumber' ? new BigNumber(NaN) : NaN;\n});\nexport var createPi = /* #__PURE__ */recreateFactory('pi', ['config', '?BigNumber'], _ref3 => {\n  var {\n    config,\n    BigNumber\n  } = _ref3;\n  return config.number === 'BigNumber' ? createBigNumberPi(BigNumber) : pi;\n});\nexport var createTau = /* #__PURE__ */recreateFactory('tau', ['config', '?BigNumber'], _ref4 => {\n  var {\n    config,\n    BigNumber\n  } = _ref4;\n  return config.number === 'BigNumber' ? createBigNumberTau(BigNumber) : tau;\n});\nexport var createE = /* #__PURE__ */recreateFactory('e', ['config', '?BigNumber'], _ref5 => {\n  var {\n    config,\n    BigNumber\n  } = _ref5;\n  return config.number === 'BigNumber' ? createBigNumberE(BigNumber) : e;\n});\n\n// golden ratio, (1+sqrt(5))/2\nexport var createPhi = /* #__PURE__ */recreateFactory('phi', ['config', '?BigNumber'], _ref6 => {\n  var {\n    config,\n    BigNumber\n  } = _ref6;\n  return config.number === 'BigNumber' ? createBigNumberPhi(BigNumber) : phi;\n});\nexport var createLN2 = /* #__PURE__ */recreateFactory('LN2', ['config', '?BigNumber'], _ref7 => {\n  var {\n    config,\n    BigNumber\n  } = _ref7;\n  return config.number === 'BigNumber' ? new BigNumber(2).ln() : Math.LN2;\n});\nexport var createLN10 = /* #__PURE__ */recreateFactory('LN10', ['config', '?BigNumber'], _ref8 => {\n  var {\n    config,\n    BigNumber\n  } = _ref8;\n  return config.number === 'BigNumber' ? new BigNumber(10).ln() : Math.LN10;\n});\nexport var createLOG2E = /* #__PURE__ */recreateFactory('LOG2E', ['config', '?BigNumber'], _ref9 => {\n  var {\n    config,\n    BigNumber\n  } = _ref9;\n  return config.number === 'BigNumber' ? new BigNumber(1).div(new BigNumber(2).ln()) : Math.LOG2E;\n});\nexport var createLOG10E = /* #__PURE__ */recreateFactory('LOG10E', ['config', '?BigNumber'], _ref10 => {\n  var {\n    config,\n    BigNumber\n  } = _ref10;\n  return config.number === 'BigNumber' ? new BigNumber(1).div(new BigNumber(10).ln()) : Math.LOG10E;\n});\nexport var createSQRT1_2 = /* #__PURE__ */recreateFactory(\n// eslint-disable-line camelcase\n'SQRT1_2', ['config', '?BigNumber'], _ref11 => {\n  var {\n    config,\n    BigNumber\n  } = _ref11;\n  return config.number === 'BigNumber' ? new BigNumber('0.5').sqrt() : Math.SQRT1_2;\n});\nexport var createSQRT2 = /* #__PURE__ */recreateFactory('SQRT2', ['config', '?BigNumber'], _ref12 => {\n  var {\n    config,\n    BigNumber\n  } = _ref12;\n  return config.number === 'BigNumber' ? new BigNumber(2).sqrt() : Math.SQRT2;\n});\nexport var createI = /* #__PURE__ */recreateFactory('i', ['Complex'], _ref13 => {\n  var {\n    Complex\n  } = _ref13;\n  return Complex.I;\n});\n\n// for backward compatibility with v5\nexport var createUppercasePi = /* #__PURE__ */factory('PI', ['pi'], _ref14 => {\n  var {\n    pi\n  } = _ref14;\n  return pi;\n});\nexport var createUppercaseE = /* #__PURE__ */factory('E', ['e'], _ref15 => {\n  var {\n    e\n  } = _ref15;\n  return e;\n});\nexport var createVersion = /* #__PURE__ */factory('version', [], () => version);\n\n// helper function to create a factory with a flag recreateOnConfigChange\n// idea: allow passing optional properties to be attached to the factory function as 4th argument?\nfunction recreateFactory(name, dependencies, create) {\n  return factory(name, dependencies, create, {\n    recreateOnConfigChange: true\n  });\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;AACO,IAAI,aAAa,aAAa,GAAE,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,QAAQ,EAAE,EAAE,IAAM;AAC1D,IAAI,cAAc,aAAa,GAAE,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,SAAS,EAAE,EAAE,IAAM;AAC5D,IAAI,aAAa,aAAa,GAAE,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,QAAQ,EAAE,EAAE,IAAM;AAC1D,IAAI,iBAAiB,aAAa,GAAE,gBAAgB,YAAY;IAAC;IAAU;CAAa,EAAE,CAAA;IAC/F,IAAI,EACF,MAAM,EACN,SAAS,EACV,GAAG;IACJ,OAAO,OAAO,MAAM,KAAK,cAAc,IAAI,UAAU,YAAY;AACnE;AACO,IAAI,YAAY,aAAa,GAAE,gBAAgB,OAAO;IAAC;IAAU;CAAa,EAAE,CAAA;IACrF,IAAI,EACF,MAAM,EACN,SAAS,EACV,GAAG;IACJ,OAAO,OAAO,MAAM,KAAK,cAAc,IAAI,UAAU,OAAO;AAC9D;AACO,IAAI,WAAW,aAAa,GAAE,gBAAgB,MAAM;IAAC;IAAU;CAAa,EAAE,CAAA;IACnF,IAAI,EACF,MAAM,EACN,SAAS,EACV,GAAG;IACJ,OAAO,OAAO,MAAM,KAAK,cAAc,CAAA,GAAA,0KAAA,CAAA,oBAAiB,AAAD,EAAE,aAAa,uKAAA,CAAA,KAAE;AAC1E;AACO,IAAI,YAAY,aAAa,GAAE,gBAAgB,OAAO;IAAC;IAAU;CAAa,EAAE,CAAA;IACrF,IAAI,EACF,MAAM,EACN,SAAS,EACV,GAAG;IACJ,OAAO,OAAO,MAAM,KAAK,cAAc,CAAA,GAAA,0KAAA,CAAA,qBAAkB,AAAD,EAAE,aAAa,uKAAA,CAAA,MAAG;AAC5E;AACO,IAAI,UAAU,aAAa,GAAE,gBAAgB,KAAK;IAAC;IAAU;CAAa,EAAE,CAAA;IACjF,IAAI,EACF,MAAM,EACN,SAAS,EACV,GAAG;IACJ,OAAO,OAAO,MAAM,KAAK,cAAc,CAAA,GAAA,0KAAA,CAAA,mBAAgB,AAAD,EAAE,aAAa,uKAAA,CAAA,IAAC;AACxE;AAGO,IAAI,YAAY,aAAa,GAAE,gBAAgB,OAAO;IAAC;IAAU;CAAa,EAAE,CAAA;IACrF,IAAI,EACF,MAAM,EACN,SAAS,EACV,GAAG;IACJ,OAAO,OAAO,MAAM,KAAK,cAAc,CAAA,GAAA,0KAAA,CAAA,qBAAkB,AAAD,EAAE,aAAa,uKAAA,CAAA,MAAG;AAC5E;AACO,IAAI,YAAY,aAAa,GAAE,gBAAgB,OAAO;IAAC;IAAU;CAAa,EAAE,CAAA;IACrF,IAAI,EACF,MAAM,EACN,SAAS,EACV,GAAG;IACJ,OAAO,OAAO,MAAM,KAAK,cAAc,IAAI,UAAU,GAAG,EAAE,KAAK,KAAK,GAAG;AACzE;AACO,IAAI,aAAa,aAAa,GAAE,gBAAgB,QAAQ;IAAC;IAAU;CAAa,EAAE,CAAA;IACvF,IAAI,EACF,MAAM,EACN,SAAS,EACV,GAAG;IACJ,OAAO,OAAO,MAAM,KAAK,cAAc,IAAI,UAAU,IAAI,EAAE,KAAK,KAAK,IAAI;AAC3E;AACO,IAAI,cAAc,aAAa,GAAE,gBAAgB,SAAS;IAAC;IAAU;CAAa,EAAE,CAAA;IACzF,IAAI,EACF,MAAM,EACN,SAAS,EACV,GAAG;IACJ,OAAO,OAAO,MAAM,KAAK,cAAc,IAAI,UAAU,GAAG,GAAG,CAAC,IAAI,UAAU,GAAG,EAAE,MAAM,KAAK,KAAK;AACjG;AACO,IAAI,eAAe,aAAa,GAAE,gBAAgB,UAAU;IAAC;IAAU;CAAa,EAAE,CAAA;IAC3F,IAAI,EACF,MAAM,EACN,SAAS,EACV,GAAG;IACJ,OAAO,OAAO,MAAM,KAAK,cAAc,IAAI,UAAU,GAAG,GAAG,CAAC,IAAI,UAAU,IAAI,EAAE,MAAM,KAAK,MAAM;AACnG;AACO,IAAI,gBAAgB,aAAa,GAAE,gBAC1C,gCAAgC;AAChC,WAAW;IAAC;IAAU;CAAa,EAAE,CAAA;IACnC,IAAI,EACF,MAAM,EACN,SAAS,EACV,GAAG;IACJ,OAAO,OAAO,MAAM,KAAK,cAAc,IAAI,UAAU,OAAO,IAAI,KAAK,KAAK,OAAO;AACnF;AACO,IAAI,cAAc,aAAa,GAAE,gBAAgB,SAAS;IAAC;IAAU;CAAa,EAAE,CAAA;IACzF,IAAI,EACF,MAAM,EACN,SAAS,EACV,GAAG;IACJ,OAAO,OAAO,MAAM,KAAK,cAAc,IAAI,UAAU,GAAG,IAAI,KAAK,KAAK,KAAK;AAC7E;AACO,IAAI,UAAU,aAAa,GAAE,gBAAgB,KAAK;IAAC;CAAU,EAAE,CAAA;IACpE,IAAI,EACF,OAAO,EACR,GAAG;IACJ,OAAO,QAAQ,CAAC;AAClB;AAGO,IAAI,oBAAoB,aAAa,GAAE,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,MAAM;IAAC;CAAK,EAAE,CAAA;IAClE,IAAI,EACF,EAAE,EACH,GAAG;IACJ,OAAO;AACT;AACO,IAAI,mBAAmB,aAAa,GAAE,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,KAAK;IAAC;CAAI,EAAE,CAAA;IAC/D,IAAI,EACF,CAAC,EACF,GAAG;IACJ,OAAO;AACT;AACO,IAAI,gBAAgB,aAAa,GAAE,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,WAAW,EAAE,EAAE,IAAM,kJAAA,CAAA,UAAO;AAE9E,yEAAyE;AACzE,kGAAkG;AAClG,SAAS,gBAAgB,IAAI,EAAE,YAAY,EAAE,MAAM;IACjD,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,MAAM,cAAc,QAAQ;QACzC,wBAAwB;IAC1B;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2893, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/Offline%20Excel/node_modules/mathjs/lib/esm/entry/allFactoriesAny.js"],"sourcesContent":["// creating all factories here in a separate file is needed to get tree-shaking working\nimport * as allFactories from '../factoriesAny.js';\nexport var all = allFactories;"],"names":[],"mappings":"AAAA,uFAAuF;;;;AACvF;;AACO,IAAI,MAAM","ignoreList":[0],"debugId":null}}]
}