{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/db.ts"],"sourcesContent":["import type { SpreadsheetData, SpreadsheetInfo } from '@/types/spreadsheet';\n\nconst DB_NAME = 'OfflineSheetDB';\nconst DB_VERSION = 1;\nconst SPREADSHEET_STORE_NAME = 'spreadsheets';\n\ninterface DBResult<T> {\n  success: boolean;\n  data?: T;\n  error?: string;\n}\n\nfunction openDB(): Promise<IDBDatabase> {\n  return new Promise((resolve, reject) => {\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\n\n    request.onerror = () => reject(request.error);\n    request.onsuccess = () => resolve(request.result);\n\n    request.onupgradeneeded = (event) => {\n      const db = (event.target as IDBOpenDBRequest).result;\n      if (!db.objectStoreNames.contains(SPREADSHEET_STORE_NAME)) {\n        const store = db.createObjectStore(SPREADSHEET_STORE_NAME, { keyPath: 'id' });\n        store.createIndex('name', 'name', { unique: false });\n        store.createIndex('updatedAt', 'updatedAt', { unique: false });\n      }\n    };\n  });\n}\n\nexport async function saveSpreadsheet(spreadsheet: SpreadsheetData): Promise<DBResult<void>> {\n  try {\n    const db = await openDB();\n    const transaction = db.transaction(SPREADSHEET_STORE_NAME, 'readwrite');\n    const store = transaction.objectStore(SPREADSHEET_STORE_NAME);\n    \n    return new Promise((resolve, reject) => {\n      const request = store.put(spreadsheet);\n      request.onsuccess = () => resolve({ success: true });\n      request.onerror = () => reject(request.error);\n      transaction.oncomplete = () => db.close();\n      transaction.onerror = () => reject(transaction.error);\n    });\n  } catch (error) {\n    return { success: false, error: error instanceof Error ? error.message : String(error) };\n  }\n}\n\nexport async function getSpreadsheet(id: string): Promise<DBResult<SpreadsheetData>> {\n  try {\n    const db = await openDB();\n    const transaction = db.transaction(SPREADSHEET_STORE_NAME, 'readonly');\n    const store = transaction.objectStore(SPREADSHEET_STORE_NAME);\n    \n    return new Promise((resolve, reject) => {\n      const request = store.get(id);\n      request.onsuccess = () => resolve({ success: true, data: request.result as SpreadsheetData });\n      request.onerror = () => reject(request.error);\n      transaction.oncomplete = () => db.close();\n      transaction.onerror = () => reject(transaction.error);\n    });\n  } catch (error) {\n    return { success: false, error: error instanceof Error ? error.message : String(error) };\n  }\n}\n\nexport async function getAllSpreadsheetInfo(): Promise<DBResult<SpreadsheetInfo[]>> {\n try {\n    const db = await openDB();\n    const transaction = db.transaction(SPREADSHEET_STORE_NAME, 'readonly');\n    const store = transaction.objectStore(SPREADSHEET_STORE_NAME);\n    const index = store.index('updatedAt'); // Sort by most recently updated\n    \n    return new Promise<DBResult<SpreadsheetInfo[]>>((resolve, reject) => {\n      const spreadsheetsInfo: SpreadsheetInfo[] = [];\n      // Iterate in reverse to get newest first\n      const cursorRequest = index.openCursor(null, \"prev\"); \n\n      cursorRequest.onsuccess = (event) => {\n        const cursor = (event.target as IDBRequest<IDBCursorWithValue>).result;\n        if (cursor) {\n          const { id, name, createdAt, updatedAt } = cursor.value as SpreadsheetData;\n          spreadsheetsInfo.push({ id, name, createdAt, updatedAt });\n          cursor.continue();\n        } else {\n          resolve({ success: true, data: spreadsheetsInfo });\n        }\n      };\n      cursorRequest.onerror = () => reject(cursorRequest.error);\n      transaction.oncomplete = () => db.close();\n      transaction.onerror = () => reject(transaction.error);\n    });\n  } catch (error) {\n    return { success: false, error: error instanceof Error ? error.message : String(error) };\n  }\n}\n\nexport async function deleteSpreadsheet(id: string): Promise<DBResult<void>> {\n  try {\n    const db = await openDB();\n    const transaction = db.transaction(SPREADSHEET_STORE_NAME, 'readwrite');\n    const store = transaction.objectStore(SPREADSHEET_STORE_NAME);\n\n    return new Promise((resolve, reject) => {\n      const request = store.delete(id);\n      request.onsuccess = () => resolve({ success: true });\n      request.onerror = () => reject(request.error);\n      transaction.oncomplete = () => db.close();\n      transaction.onerror = () => reject(transaction.error);\n    });\n  } catch (error) {\n    return { success: false, error: error instanceof Error ? error.message : String(error) };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/spreadsheet.ts"],"sourcesContent":["\nexport interface CellStyle {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  textAlign?: 'left' | 'center' | 'right';\n}\n\nexport interface CellAddress {\n  sheetId: string;\n  rowIndex: number;\n  colIndex: number;\n}\n\nexport interface SelectionRange {\n  start: CellAddress;\n  end: CellAddress;\n}\n\nexport interface CellData {\n  id: string; // e.g., \"A1\", \"B2\"\n  rawValue?: string | number; // Content entered by user, could be \"123\", \"abc\", or \"=SUM(A1:A2)\"\n  value?: string | number | boolean; // Calculated value or display value for non-formulas\n  style?: CellStyle;\n  formula?: string; // If rawValue starts with '=', this holds the formula part, e.g., \"SUM(A1:A2)\"\n}\n\nexport type RowData = CellData[]; // An array of cells representing a row\n\nexport interface SheetData {\n  id: string;\n  name: string;\n  cells: CellData[][]; // A 2D array for grid: cells[rowIndex][colIndex]\n  rowCount: number;\n  columnCount: number;\n  columnWidths?: number[]; // Array to store individual column widths\n}\n\nexport interface SpreadsheetInfo {\n  id:string;\n  name: string;\n  createdAt: number;\n  updatedAt: number;\n}\n\nexport interface SpreadsheetData extends SpreadsheetInfo {\n  sheets: SheetData[];\n  activeSheetId: string;\n}\n\nexport const DEFAULT_ROW_COUNT = 100;\nexport const DEFAULT_COLUMN_COUNT = 50;\nexport const DEFAULT_COLUMN_WIDTH = 120; // Default width for columns in pixels\n\n// Helper to generate cell ID like \"A1\", \"B2\"\nexport function getCellId(rowIndex: number, colIndex: number): string {\n  let colName = \"\";\n  let n = colIndex;\n  do {\n    colName = String.fromCharCode((n % 26) + 65) + colName;\n    n = Math.floor(n / 26) - 1;\n  } while (n >= 0);\n  return `${colName}${rowIndex + 1}`;\n}\n\nexport function createEmptyCell(rowIndex: number, colIndex: number): CellData {\n  return {\n    id: getCellId(rowIndex, colIndex),\n    rawValue: '',\n    value: '', // Initialize value to empty string for display\n  };\n}\n\nexport function createInitialSheet(id: string, name: string): SheetData {\n  const cells: CellData[][] = [];\n  for (let i = 0; i < DEFAULT_ROW_COUNT; i++) {\n    const row: CellData[] = [];\n    for (let j = 0; j < DEFAULT_COLUMN_COUNT; j++) {\n      row.push(createEmptyCell(i, j));\n    }\n    cells.push(row);\n  }\n  const columnWidths = Array(DEFAULT_COLUMN_COUNT).fill(DEFAULT_COLUMN_WIDTH);\n  return {\n    id,\n    name,\n    cells,\n    rowCount: DEFAULT_ROW_COUNT,\n    columnCount: DEFAULT_COLUMN_COUNT,\n    columnWidths,\n  };\n}\n"],"names":[],"mappings":";;;;;;;;AAkDO,MAAM,oBAAoB;AAC1B,MAAM,uBAAuB;AAC7B,MAAM,uBAAuB,KAAK,sCAAsC;AAGxE,SAAS,UAAU,QAAgB,EAAE,QAAgB;IAC1D,IAAI,UAAU;IACd,IAAI,IAAI;IACR,GAAG;QACD,UAAU,OAAO,YAAY,CAAC,AAAC,IAAI,KAAM,MAAM;QAC/C,IAAI,KAAK,KAAK,CAAC,IAAI,MAAM;IAC3B,QAAS,KAAK,EAAG;IACjB,OAAO,GAAG,UAAU,WAAW,GAAG;AACpC;AAEO,SAAS,gBAAgB,QAAgB,EAAE,QAAgB;IAChE,OAAO;QACL,IAAI,UAAU,UAAU;QACxB,UAAU;QACV,OAAO;IACT;AACF;AAEO,SAAS,mBAAmB,EAAU,EAAE,IAAY;IACzD,MAAM,QAAsB,EAAE;IAC9B,IAAK,IAAI,IAAI,GAAG,IAAI,mBAAmB,IAAK;QAC1C,MAAM,MAAkB,EAAE;QAC1B,IAAK,IAAI,IAAI,GAAG,IAAI,sBAAsB,IAAK;YAC7C,IAAI,IAAI,CAAC,gBAAgB,GAAG;QAC9B;QACA,MAAM,IAAI,CAAC;IACb;IACA,MAAM,eAAe,MAAM,sBAAsB,IAAI,CAAC;IACtD,OAAO;QACL;QACA;QACA;QACA,UAAU;QACV,aAAa;QACb;IACF;AACF","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/contexts/SpreadsheetContext.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { Dispatch, ReactNode, SetStateAction} from 'react';\nimport { createContext, useState, useEffect, useCallback, useRef }\nfrom 'react';\nimport type { SpreadsheetData, SheetData, CellData, CellStyle, CellAddress, SelectionRange } from '@/types/spreadsheet';\nimport { getSpreadsheet, saveSpreadsheet as dbSaveSpreadsheet } from '@/lib/db';\nimport { useToast } from '@/hooks/use-toast';\nimport { createEmptyCell, getCellId, DEFAULT_COLUMN_WIDTH, DEFAULT_ROW_COUNT, DEFAULT_COLUMN_COUNT, createInitialSheet as createInitialSheetUtil } from '@/types/spreadsheet'; // Renamed to avoid conflict\nimport { v4 as uuidv4 } from 'uuid';\nimport { create, all, type Matrix, type MathNode } from 'mathjs';\n\nconst MAX_UNDO_HISTORY = 20;\nconst MAX_FORMULA_RECURSION_DEPTH = 20;\n\nconst CUSTOM_FUNCTION_REGEX = /^([A-Z_][A-Z0-9_]*)\\((.*)\\)$/i;\nconst CELL_REF_REGEX = /^[A-Z]+[1-9]\\d*$/i;\nconst RANGE_REF_REGEX = /^([A-Z]+[1-9]\\d*):([A-Z]+[1-9]\\d*)$/i;\nconst NUMERIC_LITERAL_REGEX = /^-?\\d+(\\.\\d+)?$/;\n\n\nfunction parseCellId(id: string): { rowIndex: number; colIndex: number } | null {\n  if (!id || typeof id !== 'string') return null;\n  const match = id.toUpperCase().match(CELL_REF_REGEX);\n  if (!match) return null;\n\n  const lettersMatch = id.toUpperCase().match(/^([A-Z]+)/);\n  const numbersMatch = id.toUpperCase().match(/([1-9]\\d*)$/);\n\n  if (!lettersMatch || !numbersMatch) return null;\n\n  const colStr = lettersMatch[1];\n  const rowStr = numbersMatch[1];\n\n  let colIndex = 0;\n  for (let i = 0; i < colStr.length; i++) {\n    colIndex = colIndex * 26 + (colStr.charCodeAt(i) - 64);\n  }\n  colIndex -= 1;\n\n  const rowIndex = parseInt(rowStr, 10) - 1;\n\n  if (isNaN(colIndex) || isNaN(rowIndex) || colIndex < 0 || rowIndex < 0) return null;\n  return { rowIndex, colIndex };\n}\n\nlet actualEvaluateFormulaLogic: (\n  currentSpreadsheetData: SpreadsheetData,\n  sheetId: string,\n  formulaExpressionWithEquals: string,\n  visitedCellsInCurrentChain: Set<string>\n) => string | number;\n\nconst getResolvedCellValue = (\n    spreadsheetData: SpreadsheetData,\n    targetSheetId: string,\n    address: { rowIndex: number; colIndex: number },\n    visitedCellsInCurrentEvalPath: Set<string>\n  ): string | number => {\n    const cellIdForVisited = `${targetSheetId}:${getCellId(address.rowIndex, address.colIndex)}`;\n\n    if (visitedCellsInCurrentEvalPath.has(cellIdForVisited)) {\n      return \"#CIRCREF!\";\n    }\n\n    const sheet = spreadsheetData.sheets.find(s => s.id === targetSheetId);\n    if (!sheet || address.rowIndex < 0 || address.rowIndex >= sheet.rowCount || address.colIndex < 0 || address.colIndex >= sheet.columnCount) {\n      return \"#REF!\";\n    }\n    const cell = sheet.cells[address.rowIndex]?.[address.colIndex];\n    if (!cell) {\n        return \"#REF!\";\n    }\n\n    const raw = cell.rawValue;\n\n    if (raw === undefined || raw === null || String(raw).trim() === '') {\n        return 0; // Treat empty cells as 0 for formula evaluation (e.g., in SUM)\n    }\n\n    if (typeof raw === 'number') {\n        return raw;\n    }\n\n    if (typeof raw === 'string') {\n        if (raw.startsWith('=')) {\n            const newVisitedPath = new Set(visitedCellsInCurrentEvalPath);\n            newVisitedPath.add(cellIdForVisited);\n            if (typeof actualEvaluateFormulaLogic === 'function') {\n              return actualEvaluateFormulaLogic(spreadsheetData, targetSheetId, raw, newVisitedPath);\n            } else {\n              console.error(\"actualEvaluateFormulaLogic not yet defined when resolving cell value\");\n              return \"#ERROR!\";\n            }\n        }\n        const num = parseFloat(raw);\n        return isNaN(num) ? raw : num;\n    }\n    return String(raw);\n};\n\nconst resolveRangeToArray = (\n  rangeStr: string,\n  spreadsheetData: SpreadsheetData,\n  currentSheetId: string,\n  visitedCells: Set<string>\n): (string | number)[][] | string => {\n  const rangeMatch = rangeStr.toUpperCase().match(RANGE_REF_REGEX);\n  if (!rangeMatch) return \"#VALUE!\";\n\n  const startCellStr = rangeMatch[1];\n  const endCellStr = rangeMatch[2];\n\n  const startCoord = parseCellId(startCellStr);\n  const endCoord = parseCellId(endCellStr);\n  const currentSheet = spreadsheetData.sheets.find(s => s.id === currentSheetId);\n\n  if (!startCoord || !endCoord || !currentSheet) {\n    return \"#REF!\";\n  }\n\n  const minRow = Math.min(startCoord.rowIndex, endCoord.rowIndex);\n  const maxRow = Math.max(startCoord.rowIndex, endCoord.rowIndex);\n  const minCol = Math.min(startCoord.colIndex, endCoord.colIndex);\n  const maxCol = Math.max(startCoord.colIndex, endCoord.colIndex);\n\n  if (minRow < 0 || maxRow >= currentSheet.rowCount || minCol < 0 || maxCol >= currentSheet.columnCount) {\n    return \"#REF!\";\n  }\n\n  const result: (string | number)[][] = [];\n  for (let r = minRow; r <= maxRow; r++) {\n    const rowValues: (string | number)[] = [];\n    for (let c = minCol; c <= maxCol; c++) {\n      // Pass a *new Set* for each cell to avoid interference between sibling cell evaluations in a range\n      const cellVal = getResolvedCellValue(spreadsheetData, currentSheetId, { rowIndex: r, colIndex: c }, new Set(visitedCells));\n      rowValues.push(cellVal);\n    }\n    result.push(rowValues);\n  }\n  return result;\n};\n\nfunction parseCustomFunctionArgs(argsString: string): string[] {\n  if (argsString.trim() === \"\") return [];\n  let balance = 0;\n  let currentArg = \"\";\n  const args: string[] = [];\n  for (let i = 0; i < argsString.length; i++) {\n    const char = argsString[i];\n    if (char === '(') balance++;\n    else if (char === ')') balance--;\n\n    if (char === ',' && balance === 0) {\n      args.push(currentArg.trim());\n      currentArg = \"\";\n    } else {\n      currentArg += char;\n    }\n  }\n  args.push(currentArg.trim());\n  return args;\n}\n\nconst processAggregateArg = (\n    argString: string,\n    spreadsheetData: SpreadsheetData,\n    sheetId: string,\n    visitedCells: Set<string>\n  ): any | string => {\n\n    const trimmedArg = argString.trim();\n\n    if (NUMERIC_LITERAL_REGEX.test(trimmedArg)) {\n      return parseFloat(trimmedArg);\n    }\n    if (CELL_REF_REGEX.test(trimmedArg)) {\n      const coord = parseCellId(trimmedArg);\n      return coord ? getResolvedCellValue(spreadsheetData, sheetId, coord, new Set(visitedCells)) : \"#NAME?\";\n    }\n    if (RANGE_REF_REGEX.test(trimmedArg)) {\n      return resolveRangeToArray(trimmedArg, spreadsheetData, sheetId, new Set(visitedCells));\n    }\n\n    // If it looks like an expression, evaluate it\n    if (trimmedArg.includes('+') || trimmedArg.includes('-') || trimmedArg.includes('*') || trimmedArg.includes('/') || trimmedArg.includes('(') ) {\n       const subExpressionResult = actualEvaluateFormulaLogic(spreadsheetData, sheetId, '=' + trimmedArg, new Set(visitedCells));\n       return subExpressionResult;\n    }\n    \n    // If it's unquoted text that's not a cell/range/expression, it's a #NAME? error for aggregates\n    // or could be a string literal if quoted (though our parser doesn't handle quoted strings yet)\n    return `\"${trimmedArg}\"`; // Treat as string literal, will be ignored by SUM etc.\n  };\n\n\nactualEvaluateFormulaLogic = (\n  currentSpreadsheetData: SpreadsheetData,\n  sheetId: string,\n  formulaExpressionWithEquals: string,\n  visitedCellsInCurrentChain: Set<string>\n): string | number => {\n  if (visitedCellsInCurrentChain.size > MAX_FORMULA_RECURSION_DEPTH) {\n    return \"#CIRCREF!\";\n  }\n\n  const currentSheet = currentSpreadsheetData.sheets.find(s => s.id === sheetId);\n  if (!currentSheet) return \"#REF!\";\n\n  const cleanExpression = formulaExpressionWithEquals.startsWith('=')\n    ? formulaExpressionWithEquals.substring(1).trim()\n    : formulaExpressionWithEquals.trim();\n\n  const topLevelFunctionMatch = cleanExpression.match(CUSTOM_FUNCTION_REGEX);\n\n  if (topLevelFunctionMatch) {\n    const functionName = topLevelFunctionMatch[1].toUpperCase();\n    const argsString = topLevelFunctionMatch[2];\n    const rawArgs = parseCustomFunctionArgs(argsString);\n\n    const resolvedArgValues: any[] = [];\n    let firstErrorInArgs: string | null = null;\n\n    for (const rawArg of rawArgs) {\n      if (firstErrorInArgs) break; // Stop processing if an error is already found\n      const processedVal = processAggregateArg(rawArg, currentSpreadsheetData, sheetId, new Set(visitedCellsInCurrentChain));\n      if (typeof processedVal === 'string' && processedVal.startsWith('#')) {\n        firstErrorInArgs = processedVal;\n      }\n      resolvedArgValues.push(processedVal);\n    }\n    \n    if (firstErrorInArgs) return firstErrorInArgs;\n\n    const flatValues = resolvedArgValues.flat(Infinity);\n    let firstErrorInFlatValues: string | null = null;\n    \n    // Check for errors in flattened values *before* filtering for numbers\n    for (const val of flatValues) {\n        if (typeof val === 'string' && val.startsWith('#')) {\n            if (!firstErrorInFlatValues) firstErrorInFlatValues = val;\n            break; \n        }\n    }\n    if (firstErrorInFlatValues) return firstErrorInFlatValues;\n\n    const numbers = flatValues.filter(val => typeof val === 'number' && isFinite(val));\n\n    switch (functionName) {\n      case 'SUM':\n        return numbers.reduce((acc, val) => acc + val, 0);\n      case 'AVERAGE':\n        if (numbers.length === 0) return \"#DIV/0!\";\n        return numbers.reduce((acc, val) => acc + val, 0) / numbers.length;\n      case 'COUNT':\n        return numbers.length;\n      case 'MAX':\n        return numbers.length > 0 ? Math.max(...numbers) : 0;\n      case 'MIN':\n        return numbers.length > 0 ? Math.min(...numbers) : 0;\n      case 'IF': {\n        if (rawArgs.length < 2) return \"#N/A\"; // IF needs at least condition and true_value\n        \n        let conditionResult: boolean;\n        const conditionValue = resolvedArgValues[0]; // This is the already resolved/evaluated first argument\n\n        if (typeof conditionValue === 'string' && conditionValue.startsWith('#')) return conditionValue;\n\n        if (typeof conditionValue === 'number') {\n            conditionResult = conditionValue !== 0;\n        } else if (typeof conditionValue === 'boolean') {\n            conditionResult = conditionValue;\n        } else {\n            const upperCond = String(conditionValue).toUpperCase();\n            if (upperCond === \"TRUE\") conditionResult = true;\n            else if (upperCond === \"FALSE\") conditionResult = false;\n            else if (String(conditionValue).trim() === \"\") conditionResult = false; // Empty text is FALSE\n            else return \"#VALUE!\"; // Unrecognized text for condition\n        }\n        \n        const valueIfTrue = resolvedArgValues[1];\n        if (typeof valueIfTrue === 'string' && valueIfTrue.startsWith('#')) return valueIfTrue;\n\n        if (conditionResult) {\n            return valueIfTrue;\n        } else {\n            if (rawArgs.length > 2) {\n                const valueIfFalse = resolvedArgValues[2];\n                if (typeof valueIfFalse === 'string' && valueIfFalse.startsWith('#')) return valueIfFalse;\n                return valueIfFalse;\n            }\n            return false; // Excel IF returns FALSE (numeric 0 displayed) if third arg is omitted and condition is false\n        }\n      }\n      default:\n        // Fall through to math.js if function name is not one of our custom ones\n        break;\n    }\n  }\n\n  const scope: Record<string, any> = {};\n  const cellRefRegexForScope = /[A-Z]+[1-9]\\d*(?![A-Z0-9_.:(])/gi;\n  const uniqueCellRefs = new Set<string>();\n  let match;\n  while((match = cellRefRegexForScope.exec(cleanExpression)) !== null) {\n      uniqueCellRefs.add(match[0].toUpperCase());\n  }\n\n  for (const cellRef of uniqueCellRefs) {\n      const coord = parseCellId(cellRef);\n      if (coord) {\n          const val = getResolvedCellValue(currentSpreadsheetData, sheetId, coord, new Set(visitedCellsInCurrentChain));\n          scope[cellRef] = val; \n          if (typeof val === 'string' && val.startsWith('#')) { // If a dependency is an error, the whole formula fails\n              return val;\n          }\n      } else {\n        // If a potential cellRef isn't parsable, it might be a named range or function not yet supported or a typo\n        // For now, if it's not a known cell, it could lead to #NAME? via math.js if used directly\n      }\n  }\n  \n  const mathInstance = create(all);\n  const customFunctionsForMathJS: Record<string, (...args: any[]) => any> = {\n    SUM: (...args: any[]): number | string => {\n        const flatArgs = args.flat(Infinity);\n        let firstError: string | null = null;\n        const nums = flatArgs.reduce((acc: number[], val: any) => {\n            if (val && typeof val === 'object' && (val as any).isMatrix === true) { // Handle math.js Matrix\n                (val as Matrix).toArray().flat(Infinity).forEach(mVal => {\n                    if (typeof mVal === 'number' && isFinite(mVal)) acc.push(mVal);\n                    else if (typeof mVal === 'string' && mVal.startsWith('#')) { if (!firstError) firstError = mVal; }\n                });\n            } else if (typeof val === 'number' && isFinite(val)) {\n                acc.push(val);\n            } else if (typeof val === 'string' && val.startsWith('#')) {\n                if (!firstError) firstError = val;\n            }\n            return acc;\n        }, []);\n        if (firstError) return firstError;\n        return nums.reduce((s, v) => s + v, 0);\n    },\n    AVERAGE: (...args: any[]): number | string => {\n        const flatArgs = args.flat(Infinity);\n        let firstError: string | null = null;\n        const nums = flatArgs.reduce((acc: number[], val: any) => {\n            if (val && typeof val === 'object' && (val as any).isMatrix === true) {\n                (val as Matrix).toArray().flat(Infinity).forEach(mVal => {\n                    if (typeof mVal === 'number' && isFinite(mVal)) acc.push(mVal);\n                    else if (typeof mVal === 'string' && mVal.startsWith('#')) { if (!firstError) firstError = mVal; }\n                });\n            } else if (typeof val === 'number' && isFinite(val)) {\n                acc.push(val);\n            } else if (typeof val === 'string' && val.startsWith('#')) {\n                 if (!firstError) firstError = val;\n            }\n            return acc;\n        }, []);\n        if (firstError) return firstError;\n        if (nums.length === 0) return \"#DIV/0!\";\n        return nums.reduce((s, v) => s + v, 0) / nums.length;\n    },\n     COUNT: (...args: any[]): number | string => {\n        const flatArgs = args.flat(Infinity);\n        let firstError: string | null = null; // COUNT should ignore errors and count numbers\n        const nums = flatArgs.reduce((acc: number[], val: any) => {\n             if (val && typeof val === 'object' && (val as any).isMatrix === true) {\n                (val as Matrix).toArray().flat(Infinity).forEach(mVal => {\n                    if (typeof mVal === 'number' && isFinite(mVal)) acc.push(mVal);\n                    // Do not set firstError for COUNT, just ignore non-numbers\n                });\n            } else if (typeof val === 'number' && isFinite(val)) {\n                acc.push(val);\n            }\n            return acc;\n        }, []);\n        // if (firstError) return firstError; // COUNT ignores errors in arguments\n        return nums.length;\n    },\n    MAX: (...args: any[]): number | string => {\n        const flatArgs = args.flat(Infinity);\n        let firstError: string | null = null;\n        const nums = flatArgs.reduce((acc: number[], val: any) => {\n             if (val && typeof val === 'object' && (val as any).isMatrix === true) {\n                (val as Matrix).toArray().flat(Infinity).forEach(mVal => {\n                    if (typeof mVal === 'number' && isFinite(mVal)) acc.push(mVal);\n                    else if (typeof mVal === 'string' && mVal.startsWith('#')) { if (!firstError) firstError = mVal; }\n                });\n            } else if (typeof val === 'number' && isFinite(val)) {\n                acc.push(val);\n            } else if (typeof val === 'string' && val.startsWith('#')) {\n                if (!firstError) firstError = val;\n            }\n            return acc;\n        }, []);\n        if (firstError) return firstError;\n        return nums.length > 0 ? Math.max(...nums) : 0;\n    },\n    MIN: (...args: any[]): number | string => {\n        const flatArgs = args.flat(Infinity);\n        let firstError: string | null = null;\n        const nums = flatArgs.reduce((acc: number[], val: any) => {\n            if (val && typeof val === 'object' && (val as any).isMatrix === true) {\n                (val as Matrix).toArray().flat(Infinity).forEach(mVal => {\n                    if (typeof mVal === 'number' && isFinite(mVal)) acc.push(mVal);\n                    else if (typeof mVal === 'string' && mVal.startsWith('#')) { if (!firstError) firstError = mVal; }\n                });\n            } else if (typeof val === 'number' && isFinite(val)) {\n                acc.push(val);\n            } else if (typeof val === 'string' && val.startsWith('#')) {\n                if (!firstError) firstError = val;\n            }\n            return acc;\n        }, []);\n        if (firstError) return firstError;\n        return nums.length > 0 ? Math.min(...nums) : 0;\n    },\n    IF: (condition: any, value_if_true: any, value_if_false?: any): any => {\n        // This IF is for math.js scope, assuming condition/values are already resolved by math.js if they were expressions\n        let condResult: boolean;\n        if (typeof condition === 'string' && condition.startsWith('#')) return condition;\n        if (typeof condition === 'number') condResult = condition !== 0;\n        else if (typeof condition === 'boolean') condResult = condition;\n        else {\n            const upperCond = String(condition).toUpperCase();\n            if (upperCond === \"TRUE\") condResult = true;\n            else if (upperCond === \"FALSE\") condResult = false;\n            else if (String(condition).trim() === \"\") condResult = false;\n            else return \"#VALUE!\";\n        }\n\n        const trueValResolved = (typeof value_if_true === 'object' && (value_if_true as any)?.isMatrix === true) ? (value_if_true as Matrix).toArray()[0][0] : value_if_true;\n        if (typeof trueValResolved === 'string' && trueValResolved.startsWith('#')) return trueValResolved;\n        \n        let falseValResolved = value_if_false;\n        if (value_if_false !== undefined && typeof value_if_false === 'object' && (value_if_false as any)?.isMatrix === true) {\n            falseValResolved = (value_if_false as Matrix).toArray()[0][0];\n        }\n        if (typeof falseValResolved === 'string' && falseValResolved.startsWith('#')) return falseValResolved;\n\n\n        if (condResult) {\n            return trueValResolved;\n        } else {\n            if (value_if_false === undefined) return false;\n            return falseValResolved;\n        }\n    }\n  };\n  mathInstance.import(customFunctionsForMathJS, { override: true });\n\n  try {\n    const evalResultNode = mathInstance.parse(cleanExpression);\n    const evalResult = evalResultNode.evaluate(scope);\n\n    if (evalResult === undefined || evalResult === null) return 0;\n    if (typeof evalResult === 'number') {\n        return isFinite(evalResult) ? evalResult : \"#NUM!\";\n    }\n     if (typeof evalResult === 'string' && evalResult.startsWith('#')) {\n        return evalResult;\n    }\n    if ((evalResult as any)?.isMatrix === true) {\n        const matrixData = (evalResult as Matrix).toArray();\n        if (Array.isArray(matrixData) && matrixData.length > 0 && Array.isArray(matrixData[0]) && matrixData[0].length > 0) {\n            // For functions returning arrays (like array formulas, not common for SUM/AVG), return first element or #VALUE!\n            const singleValue = matrixData[0][0]; \n            if (typeof singleValue === 'number' && isFinite(singleValue)) return singleValue;\n            if (typeof singleValue === 'string' && singleValue.startsWith('#')) return singleValue;\n            return String(singleValue); // Or #VALUE! if array results aren't directly supported\n        }\n        return \"#VALUE!\";\n    }\n    if (evalResult && typeof evalResult.valueOf === 'function' && typeof evalResult !== 'function') {\n        const primitiveResult = evalResult.valueOf();\n        if (typeof primitiveResult === 'number' && isFinite(primitiveResult)) return primitiveResult;\n        if (primitiveResult === undefined || primitiveResult === null) return 0;\n        return String(primitiveResult);\n    }\n    return String(evalResult);\n  } catch (error: any) {\n    const msgLower = String(error?.message || '').toLowerCase();\n    if (msgLower.includes(\"undefined symbol\") || msgLower.includes(\"unknown function\")) return \"#NAME?\";\n    if (msgLower.includes(\"division by zero\")) return \"#DIV/0!\";\n    if (msgLower.includes(\"value expected\") || msgLower.includes(\"typeerror\") || msgLower.includes(\"cannot convert\") || msgLower.includes(\"unexpected type of argument\") || msgLower.includes(\"dimension mismatch\")) return \"#VALUE!\";\n    if (msgLower.includes(\"incorrect number of arguments\")) return \"#N/A\";\n    return \"#ERROR!\";\n  }\n};\n\nconst reevaluateSheetFormulas = (spreadsheetData: SpreadsheetData, sheetToReevaluateId: string): SpreadsheetData => {\n    const updatedSpreadsheet = JSON.parse(JSON.stringify(spreadsheetData)) as SpreadsheetData; // Deep clone\n    const sheetToUpdate = updatedSpreadsheet.sheets.find(s => s.id === sheetToReevaluateId);\n\n    if (sheetToUpdate) {\n      const cellsToUpdate: {r: number, c: number}[] = [];\n      for (let r = 0; r < sheetToUpdate.rowCount; r++) {\n        for (let c = 0; c < sheetToUpdate.columnCount; c++) {\n           if (!sheetToUpdate.cells[r]) sheetToUpdate.cells[r] = []; // Ensure row exists\n           if (!sheetToUpdate.cells[r][c]) sheetToUpdate.cells[r][c] = createEmptyCell(r,c); // Ensure cell exists\n\n           const cell = sheetToUpdate.cells[r][c];\n           if (typeof cell.rawValue === 'string' && cell.rawValue.startsWith('=')) {\n                cellsToUpdate.push({r, c});\n           } else { // Non-formula cell, set its display value\n             cell.formula = undefined;\n             if (cell.rawValue === undefined || cell.rawValue === null || String(cell.rawValue).trim() === '') {\n                 cell.value = '';\n             } else if (typeof cell.rawValue === 'number') {\n                 cell.value = cell.rawValue;\n             } else if (typeof cell.rawValue === 'string') {\n                 const num = parseFloat(cell.rawValue);\n                 cell.value = isNaN(num) ? cell.rawValue : num;\n             } else {\n                 cell.value = String(cell.rawValue);\n             }\n           }\n        }\n      }\n      // For simplicity, we'll re-evaluate all formula cells.\n      // A more optimized approach uses a dependency graph.\n      // We might need multiple passes if interdependencies are complex.\n      // For now, one pass:\n      cellsToUpdate.forEach(pos => {\n          const cell = sheetToUpdate.cells[pos.r][pos.c];\n          cell.formula = cell.rawValue as string; // We know it starts with =\n          // Use a *new* copy of the entire spreadsheet state for each top-level formula evaluation\n          // to ensure it sees the most up-to-date values of dependencies that might have been calculated\n          // earlier in *this same re-evaluation pass*. This is a step towards iterative calculation.\n          const spreadsheetForThisSpecificEval = JSON.parse(JSON.stringify(updatedSpreadsheet)) as SpreadsheetData;\n          cell.value = actualEvaluateFormulaLogic(spreadsheetForThisSpecificEval, sheetToReevaluateId, cell.formula, new Set());\n      });\n\n    }\n    return updatedSpreadsheet;\n  };\n\n\nexport interface FormulaBarApi {\n  appendText: (text: string) => void;\n  replaceText: (oldTextSubString: string, newText: string) => void;\n  setText: (text: string) => void;\n  focus: () => void;\n  getValue: () => string;\n}\n\ninterface SpreadsheetContextType {\n  spreadsheet: SpreadsheetData | null;\n  setSpreadsheet: Dispatch<SetStateAction<SpreadsheetData | null>>;\n  isLoading: boolean;\n  loadSpreadsheet: (id: string) => Promise<void>;\n  saveSpreadsheet: () => Promise<void>;\n  updateCell: (sheetId: string, rowIndex: number, colIndex: number, newCellData: Partial<Pick<CellData, 'rawValue' | 'style'>>) => void;\n  activeCell: CellAddress | null;\n  selectionRange: SelectionRange | null;\n  setActiveCellAndSelection: (\n    cellAddress: CellAddress | null,\n    isShiftKey: boolean,\n    isDrag: boolean,\n    endAddressOverrideForDrag?: CellAddress\n  ) => void;\n  updateSelectedCellStyle: (styleChanges: Partial<CellStyle>) => void;\n  formatSelectionAsTable: () => void;\n  insertRow: (sheetId: string, rowIndex: number) => void;\n  deleteRow: (sheetId: string, rowIndex: number) => void;\n  insertColumn: (sheetId: string, colIndex: number) => void;\n  deleteColumn: (sheetId: string, colIndex: number) => void;\n  appendRow: (sheetId: string) => void;\n  appendColumn: (sheetId: string) => void;\n  undo: () => void;\n  redo: () => void;\n  canUndo: boolean;\n  canRedo: boolean;\n  evaluateFormula: (sheetId: string, formulaWithEquals: string) => string | number;\n  copySelectionToClipboard: () => Promise<void>;\n  deleteSelectionContents: () => void;\n  updateMultipleCellsRawValue: (newValue: string | number) => void;\n  isActivelyEditingFormula: boolean;\n  setIsActivelyEditingFormula: (isEditing: boolean) => void;\n  formulaBarApiRef: React.MutableRefObject<FormulaBarApi | null>;\n}\n\nexport const SpreadsheetContext = createContext<SpreadsheetContextType | undefined>(undefined);\n\nexport function SpreadsheetProvider({ children }: { children: ReactNode }) {\n  const [internalSpreadsheetState, setInternalSpreadsheetState] = useState<SpreadsheetData | null>(null);\n  const internalSpreadsheetRef = useRef<SpreadsheetData | null>(null);\n\n  useEffect(() => {\n    internalSpreadsheetRef.current = internalSpreadsheetState;\n  }, [internalSpreadsheetState]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n\n  const [activeCell, setActiveCellState] = useState<CellAddress | null>(null);\n  const [selectionRange, setSelectionRangeState] = useState<SelectionRange | null>(null);\n\n  const [undoStack, setUndoStack] = useState<SpreadsheetData[]>([]);\n  const [redoStack, setRedoStack] = useState<SpreadsheetData[]>([]);\n\n  const [isActivelyEditingFormula, setIsActivelyEditingFormulaState] = useState<boolean>(false);\n  const formulaBarApiRef = useRef<FormulaBarApi | null>(null);\n\n  const setIsActivelyEditingFormula = useCallback((isEditing: boolean) => {\n    setIsActivelyEditingFormulaState(isEditing);\n  }, []);\n\n  const setSpreadsheetWithHistory = useCallback((\n    updater: SetStateAction<SpreadsheetData | null>,\n    actionSource?: 'undo' | 'redo' | 'internal_no_history' | 'save' | 'reeval'\n    ) => {\n    setInternalSpreadsheetState(current => {\n      const currentDeepCloneForHistory = current ? JSON.parse(JSON.stringify(current)) as SpreadsheetData : null;\n\n      let newSpreadsheetRaw: SpreadsheetData | null;\n      if (typeof updater === 'function') {\n        newSpreadsheetRaw = updater(currentDeepCloneForHistory ? JSON.parse(JSON.stringify(currentDeepCloneForHistory)) : null );\n      } else {\n        newSpreadsheetRaw = updater;\n      }\n      \n      let newSpreadsheet = newSpreadsheetRaw ? JSON.parse(JSON.stringify(newSpreadsheetRaw)) as SpreadsheetData : null;\n\n      if (newSpreadsheet && actionSource !== 'reeval') { // Re-eval happens after most user actions or loads\n          newSpreadsheet.sheets.forEach(sheet => {\n            newSpreadsheet = reevaluateSheetFormulas(newSpreadsheet!, sheet.id);\n          });\n      }\n      \n      if (actionSource !== 'undo' && actionSource !== 'redo' &&\n          actionSource !== 'internal_no_history' && actionSource !== 'save' && actionSource !== 'reeval' &&\n          currentDeepCloneForHistory && newSpreadsheet &&\n          JSON.stringify(currentDeepCloneForHistory) !== JSON.stringify(newSpreadsheet)) {\n        setUndoStack(prev => [...prev.slice(-MAX_UNDO_HISTORY + 1), currentDeepCloneForHistory]);\n        setRedoStack([]);\n      }\n      internalSpreadsheetRef.current = newSpreadsheet;\n      return newSpreadsheet;\n    });\n  }, []);\n\n  const exposedSetSpreadsheet = useCallback((value: SetStateAction<SpreadsheetData | null>) => {\n     setSpreadsheetWithHistory(value);\n  }, [setSpreadsheetWithHistory]);\n\n\n  const evaluateFormulaContext = useCallback((sheetId: string, formulaExpressionWithEquals: string): string | number => {\n    if (!internalSpreadsheetRef.current) {\n      return \"#REF!\";\n    }\n    const spreadsheetClone = JSON.parse(JSON.stringify(internalSpreadsheetRef.current)) as SpreadsheetData;\n    return actualEvaluateFormulaLogic(spreadsheetClone, sheetId, formulaExpressionWithEquals, new Set());\n  }, []);\n\n\n  const loadSpreadsheet = useCallback(async (id: string) => {\n    setIsLoading(true);\n    setActiveCellState(null);\n    setSelectionRangeState(null);\n    setUndoStack([]);\n    setRedoStack([]);\n\n    const result = await getSpreadsheet(id);\n    if (result.success && result.data) {\n      let loadedSpreadsheet = JSON.parse(JSON.stringify(result.data)) as SpreadsheetData;\n\n      loadedSpreadsheet.sheets = loadedSpreadsheet.sheets.map(sheet_from_db => {\n        const rowCount = sheet_from_db.rowCount > 0 ? sheet_from_db.rowCount : DEFAULT_ROW_COUNT;\n        const columnCount = sheet_from_db.columnCount > 0 ? sheet_from_db.columnCount : DEFAULT_COLUMN_COUNT;\n\n        let cellsFromDb = sheet_from_db.cells || [];\n        const newCells = Array.from({ length: rowCount }, (_, r) =>\n            Array.from({ length: columnCount }, (_, c) => {\n                const existingCellData = cellsFromDb[r]?.[c];\n                const baseCell = createEmptyCell(r,c); \n                return existingCellData ? {...baseCell, ...existingCellData, id: getCellId(r,c)} : baseCell;\n            })\n        );\n        \n        const currentProcessingSheet: SheetData = {\n          ...sheet_from_db,\n          cells: newCells,\n          rowCount,\n          columnCount,\n          columnWidths: (sheet_from_db.columnWidths && sheet_from_db.columnWidths.length === columnCount)\n            ? sheet_from_db.columnWidths\n            : Array(columnCount).fill(DEFAULT_COLUMN_WIDTH)\n        };\n        return currentProcessingSheet;\n      });\n      \n      // Perform initial full evaluation after loading and constructing the full spreadsheet object\n      let spreadsheetAfterInitialEval = loadedSpreadsheet;\n      loadedSpreadsheet.sheets.forEach(sheet => {\n        spreadsheetAfterInitialEval = reevaluateSheetFormulas(spreadsheetAfterInitialEval, sheet.id);\n      });\n      \n      setSpreadsheetWithHistory(() => spreadsheetAfterInitialEval, 'internal_no_history');\n    } else {\n      setSpreadsheetWithHistory(() => null, 'internal_no_history');\n      setTimeout(() => {\n        toast({ title: \"Error\", description: `Failed to load spreadsheet: ${result.error || 'Not found'}.`, variant: \"destructive\" });\n      }, 0);\n    }\n    setIsLoading(false);\n  }, [toast, setSpreadsheetWithHistory]);\n\n\n  const saveSpreadsheet = useCallback(async () => {\n    if (!internalSpreadsheetRef.current) {\n      setTimeout(() => {\n        toast({ title: \"Error\", description: \"No spreadsheet data to save.\", variant: \"destructive\" });\n      },0);\n      return;\n    }\n    setIsLoading(true);\n    const spreadsheetToSave = JSON.parse(JSON.stringify(internalSpreadsheetRef.current)) as SpreadsheetData;\n    spreadsheetToSave.updatedAt = Date.now();\n\n    const result = await dbSaveSpreadsheet(spreadsheetToSave);\n    if (result.success) {\n      setSpreadsheetWithHistory(prev => prev ? {...prev, updatedAt: spreadsheetToSave.updatedAt} : null, 'save');\n      setTimeout(() => {\n        toast({ title: \"Success\", description: \"Spreadsheet saved locally.\" });\n      },0);\n    } else {\n      setTimeout(() => {\n        toast({ title: \"Error\", description: `Failed to save spreadsheet: ${result.error}.`, variant: \"destructive\" });\n      },0);\n    }\n    setIsLoading(false);\n  }, [toast, setSpreadsheetWithHistory]);\n\n\n  const updateCell = useCallback((sheetId: string, rowIndex: number, colIndex: number, newCellData: Partial<Pick<CellData, 'rawValue' | 'style'>>) => {\n    setSpreadsheetWithHistory(prevSpreadsheet => {\n      if (!prevSpreadsheet) return null;\n      let spreadsheetCopy = JSON.parse(JSON.stringify(prevSpreadsheet)) as SpreadsheetData;\n      const sheetToUpdate = spreadsheetCopy.sheets.find(sheet => sheet.id === sheetId);\n\n      if (!sheetToUpdate || rowIndex < 0 || rowIndex >= sheetToUpdate.rowCount || colIndex < 0 || colIndex >= sheetToUpdate.columnCount) {\n         console.error(\"updateCell called with invalid address or sheet not found:\", sheetId, rowIndex, colIndex);\n         return prevSpreadsheet;\n      }\n      if (!sheetToUpdate.cells[rowIndex]) sheetToUpdate.cells[rowIndex] = [];\n      if (!sheetToUpdate.cells[rowIndex][colIndex]) sheetToUpdate.cells[rowIndex][colIndex] = createEmptyCell(rowIndex, colIndex);\n      \n      const cellToUpdate = sheetToUpdate.cells[rowIndex][colIndex];\n\n      if (newCellData.rawValue !== undefined) {\n        cellToUpdate.rawValue = newCellData.rawValue;\n      }\n      if (newCellData.style) {\n        cellToUpdate.style = {...(cellToUpdate.style || {}), ...newCellData.style};\n      }\n      \n      spreadsheetCopy.updatedAt = Date.now();\n      // No direct re-evaluation here, it will be handled by setSpreadsheetWithHistory\n      return spreadsheetCopy;\n    });\n  }, [setSpreadsheetWithHistory]);\n\n\n  const setActiveCellAndSelection = useCallback((\n    newCellAddress: CellAddress | null,\n    isShiftKey: boolean,\n    isDrag: boolean,\n    endAddressOverrideForDrag?: CellAddress\n  ) => {\n    if (isActivelyEditingFormula) { // Note: using the state value here\n        return;\n    }\n\n    setActiveCellState(currentActiveCell => {\n      if (newCellAddress === null) {\n        setSelectionRangeState(null);\n        return null;\n      }\n\n      const nextActiveCell = isDrag ? (currentActiveCell || newCellAddress) : newCellAddress;\n\n      setSelectionRangeState(currentSelRange => {\n        let startAddress = newCellAddress;\n        let endAddress = newCellAddress;\n\n        if (isDrag && currentSelRange?.start && currentSelRange.start.sheetId === newCellAddress.sheetId) {\n          startAddress = currentSelRange.start;\n          endAddress = endAddressOverrideForDrag || newCellAddress;\n        } else if (isShiftKey && activeCell && activeCell.sheetId === newCellAddress.sheetId) {\n          startAddress = activeCell;\n          endAddress = newCellAddress;\n        }\n        return { start: startAddress, end: endAddress };\n      });\n      return nextActiveCell;\n    });\n  }, [isActivelyEditingFormula, activeCell, selectionRange]);\n\n\n  const updateSelectedCellStyle = useCallback((styleChanges: Partial<CellStyle>) => {\n    if (!selectionRange || !internalSpreadsheetRef.current) return;\n\n    setSpreadsheetWithHistory(prevSpreadsheet => {\n      if (!prevSpreadsheet) return null;\n      const spreadsheetCopy = JSON.parse(JSON.stringify(prevSpreadsheet)) as SpreadsheetData;\n      const {start, end} = selectionRange;\n      const sheetIdToUpdate = start.sheetId;\n      const sheetToUpdate = spreadsheetCopy.sheets.find(sheet => sheet.id === sheetIdToUpdate);\n      if (!sheetToUpdate) return prevSpreadsheet;\n\n      const minRow = Math.min(start.rowIndex, end.rowIndex);\n      const maxRow = Math.max(start.rowIndex, end.rowIndex);\n      const minCol = Math.min(start.colIndex, end.colIndex);\n      const maxCol = Math.max(start.colIndex, end.colIndex);\n\n      for (let rIdx = minRow; rIdx <= maxRow; rIdx++) {\n        for (let cIdx = minCol; cIdx <= maxCol; cIdx++) {\n           if (!sheetToUpdate.cells[rIdx]) sheetToUpdate.cells[rIdx] = [];\n           if (!sheetToUpdate.cells[rIdx][cIdx]) sheetToUpdate.cells[rIdx][cIdx] = createEmptyCell(rIdx, cIdx);\n           const cell = sheetToUpdate.cells[rIdx][cIdx];\n           cell.style = { ...(cell.style || {}), ...styleChanges };\n        }\n      }\n      spreadsheetCopy.updatedAt = Date.now();\n      return spreadsheetCopy;\n    });\n  }, [selectionRange, setSpreadsheetWithHistory]);\n\n\n  const formatSelectionAsTable = useCallback(() => {\n    if (!selectionRange || !internalSpreadsheetRef.current) return;\n\n    setSpreadsheetWithHistory(prevSpreadsheet => {\n      if (!prevSpreadsheet) return null;\n      const spreadsheetCopy = JSON.parse(JSON.stringify(prevSpreadsheet)) as SpreadsheetData;\n      const { start, end } = selectionRange;\n      const sheetIdToUpdate = start.sheetId;\n      const sheetToUpdate = spreadsheetCopy.sheets.find(sheet => sheet.id === sheetIdToUpdate);\n      if (!sheetToUpdate) return prevSpreadsheet;\n\n      const minRow = Math.min(start.rowIndex, end.rowIndex);\n      const maxRow = Math.max(start.rowIndex, end.rowIndex);\n      const minCol = Math.min(start.colIndex, end.colIndex);\n      const maxCol = Math.max(start.colIndex, end.colIndex);\n\n      for (let r = minRow; r <= maxRow; r++) {\n        for (let c = minCol; c <= maxCol; c++) {\n          if (!sheetToUpdate.cells[r]) sheetToUpdate.cells[r] = [];\n          if (!sheetToUpdate.cells[r][c]) sheetToUpdate.cells[r][c] = createEmptyCell(r,c);\n          const cell = sheetToUpdate.cells[r][c];\n          \n          const isHeaderRow = r === minRow;\n          cell.style = {\n            ...(cell.style || {}),\n            bold: isHeaderRow,\n            // Example: You might define HSL values for borders/backgrounds in globals.css\n            // and then reference them here or apply Tailwind classes if you extend Cell to accept className\n            // For now, just simple bold and a conceptual border\n          };\n          // This is where you'd apply more distinct table styles\n          // e.g., cell.style.backgroundColor = isHeaderRow ? 'hsl(var(--muted))' : 'hsl(var(--card))';\n          // cell.style.border = '1px solid hsl(var(--border))';\n        }\n      }\n      spreadsheetCopy.updatedAt = Date.now();\n      setTimeout(() => toast({ title: \"Table Formatted\", description: \"Selected range formatted as a basic table.\" }), 0);\n      return spreadsheetCopy;\n    });\n  }, [selectionRange, setSpreadsheetWithHistory, toast]);\n\n  const modifySheetStructure = useCallback((\n    sheetId: string,\n    operation: 'insertRow' | 'deleteRow' | 'insertColumn' | 'deleteColumn' | 'appendRow' | 'appendColumn',\n    index?: number\n  ) => {\n    setSpreadsheetWithHistory(prevSpreadsheet => {\n      if (!prevSpreadsheet) return null;\n      let spreadsheetCopy = JSON.parse(JSON.stringify(prevSpreadsheet)) as SpreadsheetData;\n      const sheet = spreadsheetCopy.sheets.find(s => s.id === sheetId);\n      if (!sheet) return prevSpreadsheet;\n\n      let updateRowCount = sheet.rowCount;\n      let updateColCount = sheet.columnCount;\n      let toastInfo: { title: string, description: string, variant?: \"destructive\" } | null = null;\n\n      switch (operation) {\n        case 'insertRow':\n          if (index === undefined || index < 0 || index > updateRowCount) return prevSpreadsheet;\n          const newRowData: CellData[] = Array.from({ length: updateColCount }, (_, cIdx) => createEmptyCell(index, cIdx));\n          sheet.cells.splice(index, 0, newRowData);\n          updateRowCount++;\n          toastInfo = { title: \"Row Inserted\", description: `Row inserted at index ${index + 1}.` };\n          break;\n        case 'deleteRow':\n          if (index === undefined || updateRowCount <= 1 || index < 0 || index >= updateRowCount) {\n            if(updateRowCount <= 1) toastInfo = { title: \"Cannot Delete\", description: \"Spreadsheet must have at least one row.\", variant: \"destructive\"};\n            if(toastInfo) setTimeout(() => { toast(toastInfo!); }, 0);\n            return prevSpreadsheet;\n          }\n          sheet.cells.splice(index, 1);\n          updateRowCount--;\n          toastInfo = { title: \"Row Deleted\", description: `Row at index ${index + 1} deleted.` };\n          break;\n        case 'appendRow':\n          const appendRowIndex = updateRowCount;\n          const appendedRowData: CellData[] = Array.from({ length: updateColCount }, (_, cIdx) => createEmptyCell(appendRowIndex, cIdx));\n          sheet.cells.push(appendedRowData);\n          updateRowCount++;\n          toastInfo = { title: \"Row Added\", description: `Row added at the end.` };\n          break;\n        case 'insertColumn':\n          if (index === undefined || index < 0 || index > updateColCount) return prevSpreadsheet;\n          sheet.cells.forEach((row, rIdx) => {\n            row.splice(index, 0, createEmptyCell(rIdx, index));\n          });\n          sheet.columnWidths = sheet.columnWidths || Array(sheet.columnCount).fill(DEFAULT_COLUMN_WIDTH);\n          if (sheet.columnWidths.length < updateColCount +1) { // ensure it covers new column\n             sheet.columnWidths = [...sheet.columnWidths, ...Array( (updateColCount + 1) - sheet.columnWidths.length).fill(DEFAULT_COLUMN_WIDTH)];\n          }\n          sheet.columnWidths.splice(index, 0, DEFAULT_COLUMN_WIDTH);\n          updateColCount++;\n          toastInfo = { title: \"Column Inserted\", description: `Column inserted at index ${getCellId(0,index).replace(/[0-9]/g, '')}.` };\n          break;\n        case 'deleteColumn':\n          if (index === undefined || updateColCount <= 1 || index < 0 || index >= updateColCount) {\n            if(updateColCount <= 1) toastInfo = { title: \"Cannot Delete\", description: \"Spreadsheet must have at least one column.\", variant: \"destructive\"};\n             if(toastInfo) setTimeout(() => { toast(toastInfo!); }, 0);\n            return prevSpreadsheet;\n          }\n          sheet.cells.forEach(row => row.splice(index, 1));\n          if (sheet.columnWidths && sheet.columnWidths.length > index) sheet.columnWidths.splice(index, 1);\n          updateColCount--;\n          toastInfo = { title: \"Column Deleted\", description: `Column ${getCellId(0,index).replace(/[0-9]/g, '')} deleted.` };\n          break;\n        case 'appendColumn':\n          const appendColIndex = updateColCount;\n          sheet.cells.forEach((row, rIdx) => row.push(createEmptyCell(rIdx, appendColIndex)));\n          sheet.columnWidths = sheet.columnWidths || Array(sheet.columnCount).fill(DEFAULT_COLUMN_WIDTH);\n          sheet.columnWidths.push(DEFAULT_COLUMN_WIDTH);\n          updateColCount++;\n          toastInfo = { title: \"Column Added\", description: `Column added at the end.` };\n          break;\n      }\n\n      if (toastInfo) {\n        setTimeout(() => toast(toastInfo!), 0);\n      }\n\n      sheet.rowCount = updateRowCount;\n      sheet.columnCount = updateColCount;\n\n      for (let r = 0; r < sheet.rowCount; r++) {\n        if(!sheet.cells[r]) sheet.cells[r] = Array.from({ length: sheet.columnCount }, (_, c) => createEmptyCell(r, c));\n        for (let c = 0; c < sheet.columnCount; c++) {\n          if (sheet.cells[r]?.[c]) {\n            sheet.cells[r][c].id = getCellId(r, c);\n          } else {\n            if(!sheet.cells[r]) sheet.cells[r] = []; // Should be created by outer loop\n            sheet.cells[r][c] = createEmptyCell(r,c);\n          }\n        }\n      }\n      spreadsheetCopy.updatedAt = Date.now();\n      // No direct re-evaluation here, it will be handled by setSpreadsheetWithHistory\n      return spreadsheetCopy;\n    });\n  }, [setSpreadsheetWithHistory, toast]);\n\n  const insertRow = useCallback((sheetId: string, rowIndex: number) => modifySheetStructure(sheetId, 'insertRow', rowIndex), [modifySheetStructure]);\n  const deleteRow = useCallback((sheetId: string, rowIndex: number) => modifySheetStructure(sheetId, 'deleteRow', rowIndex), [modifySheetStructure]);\n  const insertColumn = useCallback((sheetId: string, colIndex: number) => modifySheetStructure(sheetId, 'insertColumn', colIndex), [modifySheetStructure]);\n  const deleteColumn = useCallback((sheetId: string, colIndex: number) => modifySheetStructure(sheetId, 'deleteColumn', colIndex), [modifySheetStructure]);\n  const appendRow = useCallback((sheetId: string) => modifySheetStructure(sheetId, 'appendRow'), [modifySheetStructure]);\n  const appendColumn = useCallback((sheetId: string) => modifySheetStructure(sheetId, 'appendColumn'), [modifySheetStructure]);\n\n  const undo = useCallback(() => {\n    if (undoStack.length > 0) {\n      const previousState = undoStack[undoStack.length - 1];\n      if (internalSpreadsheetRef.current) {\n        const currentCopyForRedo = JSON.parse(JSON.stringify(internalSpreadsheetRef.current)) as SpreadsheetData;\n        setRedoStack(prev => [currentCopyForRedo, ...prev.slice(0, MAX_UNDO_HISTORY -1)]);\n      }\n      setUndoStack(prev => prev.slice(0, -1));\n      setSpreadsheetWithHistory(() => JSON.parse(JSON.stringify(previousState)), 'undo');\n      setActiveCellState(null);\n      setSelectionRangeState(null);\n      setTimeout(() => {\n        toast({ title: \"Undo\", description: \"Last action reverted.\" });\n      }, 0);\n    }\n  }, [undoStack, setSpreadsheetWithHistory, toast]);\n\n  const redo = useCallback(() => {\n    if (redoStack.length > 0) {\n      const nextState = redoStack[0];\n       if (internalSpreadsheetRef.current) {\n        const currentCopyForUndo = JSON.parse(JSON.stringify(internalSpreadsheetRef.current)) as SpreadsheetData;\n        setUndoStack(prev => [...prev.slice(-MAX_UNDO_HISTORY + 1), currentCopyForUndo]);\n       }\n      setRedoStack(prev => prev.slice(1));\n      setSpreadsheetWithHistory(() => JSON.parse(JSON.stringify(nextState)), 'redo');\n      setActiveCellState(null);\n      setSelectionRangeState(null);\n      setTimeout(() => {\n        toast({ title: \"Redo\", description: \"Last undone action applied.\" });\n      }, 0);\n    }\n  }, [redoStack, setSpreadsheetWithHistory, toast]);\n\n\n  const copySelectionToClipboard = useCallback(async () => {\n    if (!selectionRange || !internalSpreadsheetRef.current) {\n      setTimeout(() => {\n        toast({ title: \"Copy Failed\", description: \"No cells selected to copy.\", variant: \"destructive\" });\n      }, 0);\n      return;\n    }\n\n    const { start, end } = selectionRange;\n    const sheet = internalSpreadsheetRef.current.sheets.find(s => s.id === start.sheetId);\n    if (!sheet) {\n       setTimeout(() => {\n        toast({ title: \"Copy Failed\", description: \"Sheet not found for selection.\", variant: \"destructive\" });\n      }, 0);\n      return;\n    }\n\n    const minRow = Math.min(start.rowIndex, end.rowIndex);\n    const maxRow = Math.max(start.rowIndex, end.rowIndex);\n    const minCol = Math.min(start.colIndex, end.colIndex);\n    const maxCol = Math.max(start.colIndex, end.colIndex);\n\n    let textToCopy = \"\";\n    for (let r = minRow; r <= maxRow; r++) {\n      for (let c = minCol; c <= maxCol; c++) {\n        const cell = sheet.cells[r]?.[c];\n        const valueToCopy = cell?.value === '' && (cell?.rawValue === '' || cell?.rawValue === null || cell?.rawValue === undefined) \n                            ? '' \n                            : cell?.rawValue?.toString() ?? \"\";\n        textToCopy += valueToCopy;\n        if (c < maxCol) {\n          textToCopy += \"\\t\";\n        }\n      }\n      if (r < maxRow) {\n        textToCopy += \"\\n\";\n      }\n    }\n\n    try {\n      await navigator.clipboard.writeText(textToCopy);\n      setTimeout(() => {\n        toast({ title: \"Copied\", description: \"Selected cells copied to clipboard.\" });\n      }, 0);\n    } catch (err) {\n      console.error(\"Failed to copy text: \", err);\n       setTimeout(() => {\n        toast({ title: \"Copy Failed\", description: \"Could not copy cells to clipboard.\", variant: \"destructive\" });\n      }, 0);\n    }\n  }, [selectionRange, toast]);\n\n\n  const deleteSelectionContents = useCallback(() => {\n    if (!selectionRange || !internalSpreadsheetRef.current) return;\n\n    setSpreadsheetWithHistory(prevSpreadsheet => {\n      if (!prevSpreadsheet) return null;\n      let spreadsheetCopy = JSON.parse(JSON.stringify(prevSpreadsheet)) as SpreadsheetData;\n      const { start, end } = selectionRange;\n      const sheetToUpdate = spreadsheetCopy.sheets.find(s => s.id === start.sheetId);\n\n      if (!sheetToUpdate) return prevSpreadsheet;\n\n      const minRow = Math.min(start.rowIndex, end.rowIndex);\n      const maxRow = Math.max(start.rowIndex, end.rowIndex);\n      const minCol = Math.min(start.colIndex, end.colIndex);\n      const maxCol = Math.max(start.colIndex, end.colIndex);\n\n      let changed = false;\n      for (let r = minRow; r <= maxRow; r++) {\n        for (let c = minCol; c <= maxCol; c++) {\n          if (!sheetToUpdate.cells[r]) sheetToUpdate.cells[r] = [];\n          if (!sheetToUpdate.cells[r][c]) sheetToUpdate.cells[r][c] = createEmptyCell(r, c);\n          const cell = sheetToUpdate.cells[r][c];\n          if (cell.rawValue !== '' ) {\n              changed = true;\n          }\n          cell.rawValue = ''; // Set rawValue to empty for clearing\n        }\n      }\n\n      if (changed) {\n        spreadsheetCopy.updatedAt = Date.now();\n        // No direct re-evaluation here, it will be handled by setSpreadsheetWithHistory\n        setTimeout(() => {\n            toast({ title: \"Contents Cleared\", description: \"Contents of selected cells have been cleared.\" });\n        }, 0);\n      }\n      return spreadsheetCopy;\n    });\n  }, [selectionRange, setSpreadsheetWithHistory, toast]);\n\n  const updateMultipleCellsRawValue = useCallback((newValue: string | number) => {\n    if (!selectionRange || !internalSpreadsheetRef.current) return;\n\n    setSpreadsheetWithHistory(prevSpreadsheet => {\n      if (!prevSpreadsheet) return null;\n      let spreadsheetCopy = JSON.parse(JSON.stringify(prevSpreadsheet)) as SpreadsheetData;\n      const { start, end } = selectionRange;\n      const sheetToUpdate = spreadsheetCopy.sheets.find(s => s.id === start.sheetId);\n\n      if (!sheetToUpdate) return prevSpreadsheet;\n\n      const minRow = Math.min(start.rowIndex, end.rowIndex);\n      const maxRow = Math.max(start.rowIndex, end.rowIndex);\n      const minCol = Math.min(start.colIndex, end.colIndex);\n      const maxCol = Math.max(start.colIndex, end.colIndex);\n\n      for (let r = minRow; r <= maxRow; r++) {\n        for (let c = minCol; c <= maxCol; c++) {\n          if (!sheetToUpdate.cells[r]) sheetToUpdate.cells[r] = [];\n          if (!sheetToUpdate.cells[r][c]) sheetToUpdate.cells[r][c] = createEmptyCell(r,c);\n          const cell = sheetToUpdate.cells[r][c];\n          cell.rawValue = newValue;\n        }\n      }\n      spreadsheetCopy.updatedAt = Date.now();\n      // No direct re-evaluation here, it will be handled by setSpreadsheetWithHistory\n      setTimeout(() => {\n          toast({ title: \"Cells Updated\", description: \"Selected cells have been updated.\" });\n      }, 0);\n      return spreadsheetCopy;\n    });\n  }, [selectionRange, setSpreadsheetWithHistory, toast]);\n\n\n  const canUndo = undoStack.length > 0;\n  const canRedo = redoStack.length > 0;\n\n  return (\n    <SpreadsheetContext.Provider value={{\n      spreadsheet: internalSpreadsheetState,\n      setSpreadsheet: exposedSetSpreadsheet,\n      isLoading,\n      loadSpreadsheet,\n      saveSpreadsheet,\n      updateCell,\n      activeCell: activeCell,\n      selectionRange: selectionRange,\n      setActiveCellAndSelection,\n      updateSelectedCellStyle,\n      formatSelectionAsTable,\n      insertRow,\n      deleteRow,\n      insertColumn,\n      deleteColumn,\n      appendRow,\n      appendColumn,\n      undo,\n      redo,\n      canUndo,\n      canRedo,\n      evaluateFormula: evaluateFormulaContext,\n      copySelectionToClipboard,\n      deleteSelectionContents,\n      updateMultipleCellsRawValue,\n      isActivelyEditingFormula: isActivelyEditingFormula,\n      setIsActivelyEditingFormula,\n      formulaBarApiRef\n    }}>\n      {children}\n    </SpreadsheetContext.Provider>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1512, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/useSpreadsheet.ts"],"sourcesContent":["\"use client\";\n\nimport { useContext } from 'react';\nimport { SpreadsheetContext } from '@/contexts/SpreadsheetContext';\n\nexport function useSpreadsheet() {\n  const context = useContext(SpreadsheetContext);\n  if (context === undefined) {\n    throw new Error('useSpreadsheet must be used within a SpreadsheetProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":";;;AAEA;AACA;;AAHA;;;AAKO,SAAS;;IACd,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,yIAAA,CAAA,qBAAkB;IAC7C,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANgB","debugId":null}},
    {"offset": {"line": 1539, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1606, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1642, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/icons/OfflineSheetLogo.tsx"],"sourcesContent":["import type { SVGProps } from 'react';\n\nexport function OfflineSheetLogo(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 100\"\n      width=\"40\"\n      height=\"40\"\n      aria-label=\"OfflineSheet Logo\"\n      {...props}\n    >\n      <defs>\n        <linearGradient id=\"logoGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n          <stop offset=\"0%\" style={{ stopColor: 'hsl(var(--primary))', stopOpacity: 1 }} />\n          <stop offset=\"100%\" style={{ stopColor: 'hsl(var(--accent))', stopOpacity: 1 }} />\n        </linearGradient>\n      </defs>\n      <rect width=\"100\" height=\"100\" rx=\"15\" fill=\"url(#logoGradient)\" />\n      <path\n        d=\"M25 75 L25 25 L75 25 M25 40 L65 40 M25 55 L65 55 M40 25 L40 75 M55 25 L55 75\"\n        stroke=\"hsl(var(--primary-foreground))\"\n        strokeWidth=\"5\"\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEO,SAAS,iBAAiB,KAA8B;IAC7D,qBACE,6LAAC;QACC,OAAM;QACN,SAAQ;QACR,OAAM;QACN,QAAO;QACP,cAAW;QACV,GAAG,KAAK;;0BAET,6LAAC;0BACC,cAAA,6LAAC;oBAAe,IAAG;oBAAe,IAAG;oBAAK,IAAG;oBAAK,IAAG;oBAAO,IAAG;;sCAC7D,6LAAC;4BAAK,QAAO;4BAAK,OAAO;gCAAE,WAAW;gCAAuB,aAAa;4BAAE;;;;;;sCAC5E,6LAAC;4BAAK,QAAO;4BAAO,OAAO;gCAAE,WAAW;gCAAsB,aAAa;4BAAE;;;;;;;;;;;;;;;;;0BAGjF,6LAAC;gBAAK,OAAM;gBAAM,QAAO;gBAAM,IAAG;gBAAK,MAAK;;;;;;0BAC5C,6LAAC;gBACC,GAAE;gBACF,QAAO;gBACP,aAAY;gBACZ,MAAK;gBACL,eAAc;gBACd,gBAAe;;;;;;;;;;;;AAIvB;KA3BgB","debugId":null}},
    {"offset": {"line": 1738, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/menubar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2045, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n\n    "],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;AAIf,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2083, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2234, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2311, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2449, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/spreadsheet/AvailableFunctionsDialog.tsx"],"sourcesContent":["\n\"use client\";\n\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n} from \"@/components/ui/dialog\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\n\ninterface AvailableFunctionsDialogProps {\n  isOpen: boolean;\n  onOpenChange: (isOpen: boolean) => void;\n}\n\nconst functionsList = [\n  // Math & Trig\n  { name: \"SUM\", syntax: \"SUM(number1, [number2], ...)\", description: \"Adds all the numbers in a range of cells.\" },\n  { name: \"AVERAGE\", syntax: \"AVERAGE(number1, [number2], ...)\", description: \"Returns the average (arithmetic mean) of its arguments.\" },\n  { name: \"COUNT\", syntax: \"COUNT(value1, [value2], ...)\", description: \"Counts the number of cells that contain numbers.\" },\n  { name: \"MAX\", syntax: \"MAX(number1, [number2], ...)\", description: \"Returns the largest value in a set of values.\" },\n  { name: \"MIN\", syntax: \"MIN(number1, [number2], ...)\", description: \"Returns the smallest number in a set of values.\" },\n  { name: \"ROUND\", syntax: \"ROUND(number, num_digits)\", description: \"Rounds a number to a specified number of digits.\" },\n  { name: \"RAND\", syntax: \"RAND()\", description: \"Returns an evenly distributed random real number greater than or equal to 0 and less than 1.\" },\n  { name: \"RANDBETWEEN\", syntax: \"RANDBETWEEN(bottom, top)\", description: \"Returns a random integer number between the numbers you specify.\" },\n  { name: \"ABS\", syntax: \"ABS(number)\", description: \"Returns the absolute value of a number.\" },\n  { name: \"INT\", syntax: \"INT(number)\", description: \"Rounds a number down to the nearest integer.\" },\n  { name: \"MOD\", syntax: \"MOD(number, divisor)\", description: \"Returns the remainder after a number is divided by a divisor.\" },\n  { name: \"POWER\", syntax: \"POWER(number, power)\", description: \"Returns the result of a number raised to a power.\" },\n  { name: \"PRODUCT\", syntax: \"PRODUCT(number1, [number2], ...)\", description: \"Multiplies all the numbers given as arguments.\" },\n  { name: \"SQRT\", syntax: \"SQRT(number)\", description: \"Returns a positive square root.\" },\n  { name: \"SUBTOTAL\", syntax: \"SUBTOTAL(function_num, ref1, [ref2],...)\", description: \"Returns a subtotal in a list or database. It is versatile, allowing various functions like SUM, AVERAGE, COUNT, etc., while ignoring other subtotals and optionally hidden rows.\" },\n  // Text\n  { name: \"CONCATENATE\", syntax: \"CONCATENATE(text1, [text2], ...)\", description: \"Joins several text strings into one text string. (Excel also supports CONCAT).\" },\n  { name: \"TEXT\", syntax: \"TEXT(value, format_text)\", description: \"Converts a value to text in a specific number format.\" },\n  { name: \"LEFT\", syntax: \"LEFT(text, [num_chars])\", description: \"Returns the specified number of characters from the start of a text string.\" },\n  { name: \"RIGHT\", syntax: \"RIGHT(text, [num_chars])\", description: \"Returns the specified number of characters from the end of a text string.\" },\n  { name: \"MID\", syntax: \"MID(text, start_num, num_chars)\", description: \"Returns a specific number of characters from a text string, starting at the position you specify.\" },\n  { name: \"LEN\", syntax: \"LEN(text)\", description: \"Returns the number of characters in a text string.\" },\n  { name: \"FIND\", syntax: \"FIND(find_text, within_text, [start_num])\", description: \"Finds one text string within another (case-sensitive).\" },\n  { name: \"REPLACE\", syntax: \"REPLACE(old_text, start_num, num_chars, new_text)\", description: \"Replaces part of a text string with a different text string.\" },\n  { name: \"SUBSTITUTE\", syntax: \"SUBSTITUTE(text, old_text, new_text, [instance_num])\", description: \"Substitutes new_text for old_text in a text string.\" },\n  { name: \"TRIM\", syntax: \"TRIM(text)\", description: \"Removes leading and trailing spaces from text.\" },\n  // Logical\n  { name: \"IF\", syntax: \"IF(logical_test, value_if_true, [value_if_false])\", description: \"Checks whether a condition is met, and returns one value if TRUE, and another value if FALSE.\" },\n  { name: \"AND\", syntax: \"AND(logical1, [logical2], ...)\", description: \"Returns TRUE if all its arguments are TRUE; returns FALSE if one or more arguments are FALSE.\" },\n  { name: \"OR\", syntax: \"OR(logical1, [logical2], ...)\", description: \"Returns TRUE if any argument is TRUE; returns FALSE if all arguments are FALSE.\" },\n  { name: \"NOT\", syntax: \"NOT(logical)\", description: \"Reverses the logical value of its argument.\" },\n  { name: \"IFERROR\", syntax: \"IFERROR(value, value_if_error)\", description: \"Returns value_if_error if expression is an error and the value of the expression itself otherwise.\" },\n  // Date & Time\n  { name: \"TODAY\", syntax: \"TODAY()\", description: \"Returns the current date as a serial number.\" },\n  { name: \"NOW\", syntax: \"NOW()\", description: \"Returns the current date and time as a serial number.\" },\n  { name: \"DATE\", syntax: \"DATE(year, month, day)\", description: \"Returns the serial number of a particular date.\" },\n  { name: \"YEAR\", syntax: \"YEAR(serial_number)\", description: \"Returns the year corresponding to a date.\" },\n  { name: \"MONTH\", syntax: \"MONTH(serial_number)\", description: \"Returns the month, a number from 1 (January) to 12 (December).\" },\n  { name: \"DAY\", syntax: \"DAY(serial_number)\", description: \"Returns the day of the month, a number from 1 to 31.\" },\n  { name: \"HOUR\", syntax: \"HOUR(serial_number)\", description: \"Returns the hour as a number from 0 (12:00 A.M.) to 23 (11:00 P.M.).\" },\n  { name: \"MINUTE\", syntax: \"MINUTE(serial_number)\", description: \"Returns the minute as a number from 0 to 59.\" },\n  { name: \"SECOND\", syntax: \"SECOND(serial_number)\", description: \"Returns the second as a number from 0 to 59.\" },\n  { name: \"EDATE\", syntax: \"EDATE(start_date, months)\", description: \"Returns the serial number of the date that is the indicated number of months before or after the start date.\" },\n  // Lookup & Reference\n  { name: \"VLOOKUP\", syntax: \"VLOOKUP(lookup_value, table_array, col_index_num, [range_lookup])\", description: \"Looks for a value in the leftmost column of a table, and then returns a value in the same row from a column you specify.\" },\n  { name: \"HLOOKUP\", syntax: \"HLOOKUP(lookup_value, table_array, row_index_num, [range_lookup])\", description: \"Looks for a value in the top row of a table or array of values and returns the value in the same column from a row you specify.\" },\n  { name: \"INDEX\", syntax: \"INDEX(array, row_num, [column_num])\", description: \"Returns a value or reference of the cell at the intersection of a particular row and column, in a given range.\" },\n  { name: \"MATCH\", syntax: \"MATCH(lookup_value, lookup_array, [match_type])\", description: \"Returns the relative position of an item in an array that matches a specified value in a specified order.\" },\n  { name: \"OFFSET\", syntax: \"OFFSET(reference, rows, cols, [height], [width])\", description: \"Returns a reference to a range that is a specified number of rows and columns from a cell or range of cells.\" },\n  { name: \"CHOOSE\", syntax: \"CHOOSE(index_num, value1, [value2], ...)\", description: \"Uses index_num to return a value from the list of value arguments.\" },\n  { name: \"INDIRECT\", syntax: \"INDIRECT(ref_text, [a1])\", description: \"Returns the reference specified by a text string.\" },\n  // Statistical\n  { name: \"COUNTA\", syntax: \"COUNTA(value1, [value2], ...)\", description: \"Counts the number of cells that are not empty.\" },\n  { name: \"COUNTBLANK\", syntax: \"COUNTBLANK(range)\", description: \"Counts the number of empty cells in a specified range of cells.\" },\n  { name: \"COUNTIF\", syntax: \"COUNTIF(range, criteria)\", description: \"Counts the number of cells within a range that meet the given criteria.\" },\n  { name: \"COUNTIFS\", syntax: \"COUNTIFS(criteria_range1, criteria1, [criteria_range2, criteria2]…)\", description: \"Counts the number of cells specified by a given set of conditions or criteria.\" },\n  { name: \"AVERAGEIF\", syntax: \"AVERAGEIF(range, criteria, [average_range])\", description: \"Finds average for the cells specified by a given condition or criteria.\" },\n  { name: \"AVERAGEIFS\", syntax: \"AVERAGEIFS(average_range, criteria_range1, criteria1, [criteria_range2, criteria2]…)\", description: \"Finds average for the cells specified by a given set of conditions or criteria.\" },\n  { name: \"SUMIF\", syntax: \"SUMIF(range, criteria, [sum_range])\", description: \"Adds the cells specified by a given criteria.\" },\n  { name: \"SUMIFS\", syntax: \"SUMIFS(sum_range, criteria_range1, criteria1, [criteria_range2, criteria2]…)\", description: \"Adds all of its arguments that meet multiple criteria.\" },\n  { name: \"MEDIAN\", syntax: \"MEDIAN(number1, [number2], ...)\", description: \"Returns the median of the given numbers. The median is the number in the middle of a set of numbers.\" },\n  { name: \"MODE.SNGL\", syntax: \"MODE.SNGL(number1, [number2], ...)\", description: \"Returns the most frequently occurring, or repetitive, value in an array or range of data. (Older Excel versions use MODE).\" },\n  // Financial\n  { name: \"PMT\", syntax: \"PMT(rate, nper, pv, [fv], [type])\", description: \"Calculates the payment for a loan based on constant payments and a constant interest rate.\" },\n  { name: \"FV\", syntax: \"FV(rate, nper, pmt, [pv], [type])\", description: \"Returns the future value of an investment based on periodic, constant payments and a constant interest rate.\" },\n  { name: \"PV\", syntax: \"PV(rate, nper, pmt, [fv], [type])\", description: \"Returns the present value of an investment.\" },\n  { name: \"NPER\", syntax: \"NPER(rate, pmt, pv, [fv], [type])\", description: \"Returns the number of periods for an investment based on periodic, constant payments and a constant interest rate.\" },\n  { name: \"RATE\", syntax: \"RATE(nper, pmt, pv, [fv], [type], [guess])\", description: \"Returns the interest rate per period of an annuity.\" },\n  { name: \"NPV\", syntax: \"NPV(rate, value1, [value2], ...)\", description: \"Returns the net present value of an investment based on a series of periodic cash flows and a discount rate.\" },\n  { name: \"IRR\", syntax: \"IRR(values, [guess])\", description: \"Returns the internal rate of return for a series of cash flows.\" },\n  { name: \"DB\", syntax: \"DB(cost, salvage, life, period, [month])\", description: \"Returns the depreciation of an asset for a specified period using the fixed-declining balance method.\" },\n  { name: \"SLN\", syntax: \"SLN(cost, salvage, life)\", description: \"Returns the straight-line depreciation of an asset for one period.\" },\n  { name: \"SYD\", syntax: \"SYD(cost, salvage, life, per)\", description: \"Returns the sum-of-years' digits depreciation of an asset for a specified period.\" },\n  { name: \"IPMT\", syntax: \"IPMT(rate, per, nper, pv, [fv], [type])\", description: \"Returns the interest payment for a given period for an investment based on periodic, constant payments and a constant interest rate.\" },\n  { name: \"PPMT\", syntax: \"PPMT(rate, per, nper, pv, [fv], [type])\", description: \"Returns the payment on the principal for a given period for an investment based on periodic, constant payments and a constant interest rate.\" },\n];\n\n\nexport function AvailableFunctionsDialog({ isOpen, onOpenChange }: AvailableFunctionsDialogProps) {\n  return (\n    <Dialog open={isOpen} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-3xl max-h-[80vh]\">\n        <DialogHeader>\n          <DialogTitle>Available Functions (Reference)</DialogTitle>\n          <DialogDescription>\n            This is a list of commonly used spreadsheet functions. The application currently stores formulas as text and does not perform calculations.\n          </DialogDescription>\n        </DialogHeader>\n        <ScrollArea className=\"h-[60vh] w-full rounded-md border p-4\">\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead className=\"w-[150px]\">Function</TableHead>\n                <TableHead className=\"w-[250px]\">Syntax</TableHead>\n                <TableHead>Description</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {functionsList.map((func) => (\n                <TableRow key={func.name}>\n                  <TableCell className=\"font-medium\">{func.name}</TableCell>\n                  <TableCell className=\"font-mono text-xs\">{func.syntax}</TableCell>\n                  <TableCell>{func.description}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </ScrollArea>\n      </DialogContent>\n    </Dialog>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2957, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/spreadsheet/Toolbar.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React from 'react'; \nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { useSpreadsheet } from \"@/hooks/useSpreadsheet\";\nimport { OfflineSheetLogo } from \"../icons/OfflineSheetLogo\";\nimport Link from \"next/link\";\nimport { useRouter } from 'next/navigation';\nimport { \n    Save, Home, Upload, Download, Undo, Redo, Bold, Italic, Underline, \n    AlignLeft, AlignCenter, AlignRight, FileText, RowsIcon, Columns, Trash2, \n    PlusSquare, MinusSquare, ListChecks, Sun, Moon, FilePlus, ClipboardCopy, Eraser, Edit,\n    TableIcon, Wand2, Pilcrow, Sigma // Added TableIcon, Wand2, Pilcrow, Sigma\n} from \"lucide-react\"; \nimport {\n  Menubar,\n  MenubarContent,\n  MenubarItem,\n  MenubarMenu,\n  MenubarSeparator,\n  MenubarShortcut,\n  MenubarTrigger,\n  MenubarGroup,\n  MenubarSub, // Added MenubarSub\n  MenubarSubContent, // Added MenubarSubContent\n  MenubarSubTrigger, // Added MenubarSubTrigger\n} from \"@/components/ui/menubar\"\nimport { Separator } from \"@/components/ui/separator\"; \nimport { cn } from '@/lib/utils';\nimport { AvailableFunctionsDialog } from './AvailableFunctionsDialog';\nimport { \n  Dialog, \n  DialogContent, \n  DialogHeader, \n  DialogTitle, \n  DialogDescription,\n  DialogFooter, // Added DialogFooter\n} from '@/components/ui/dialog'; // For placeholder dialogs\n\n\ninterface ToolbarProps {\n  spreadsheetName: string;\n  theme: string | undefined;\n  setTheme: (theme: string) => void;\n}\n\nexport default function Toolbar({ spreadsheetName, theme, setTheme }: ToolbarProps) {\n  const { \n    saveSpreadsheet, \n    spreadsheet, \n    setSpreadsheet: setContextSpreadsheet,\n    activeCell, \n    selectionRange, \n    updateSelectedCellStyle,\n    formatSelectionAsTable,\n    insertRow,\n    deleteRow,\n    insertColumn,\n    deleteColumn,\n    appendRow,\n    appendColumn,\n    undo,\n    redo,\n    canUndo,\n    canRedo,\n    copySelectionToClipboard, \n    deleteSelectionContents, \n    updateMultipleCellsRawValue \n  } = useSpreadsheet();\n  const router = useRouter(); \n\n  const [isFunctionsDialogOpen, setIsFunctionsDialogOpen] = React.useState(false);\n  const [isConditionalFormattingDialogOpen, setIsConditionalFormattingDialogOpen] = React.useState(false);\n\n\n  const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (spreadsheet && setContextSpreadsheet) {\n      setContextSpreadsheet(prev => prev ? ({ ...prev, name: e.target.value, updatedAt: Date.now() }) : null);\n    }\n  };\n\n  const toggleTheme = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n\n  const selectedCellStyle = React.useMemo(() => {\n    if (!spreadsheet || !activeCell) return {};\n    const sheet = spreadsheet.sheets.find(s => s.id === activeCell.sheetId);\n    if (!sheet) return {};\n    const cell = sheet.cells[activeCell.rowIndex]?.[activeCell.colIndex];\n    return cell?.style || {};\n  }, [spreadsheet, activeCell]);\n\n  const handleToggleBold = () => {\n    if (activeCell || selectionRange) updateSelectedCellStyle({ bold: !selectedCellStyle?.bold });\n  };\n  const handleToggleItalic = () => {\n    if (activeCell || selectionRange) updateSelectedCellStyle({ italic: !selectedCellStyle?.italic });\n  };\n  const handleToggleUnderline = () => {\n    if (activeCell || selectionRange) updateSelectedCellStyle({ underline: !selectedCellStyle?.underline });\n  };\n\n  const handleExport = (format: 'xlsx' | 'csv') => console.log(`Export as ${format} (Not implemented)`);\n  const handleLoadFromFile = () => console.log(\"Load from file (Not implemented)\");\n  \n  const handleInsertRowAction = () => {\n    if (spreadsheet && activeCell) {\n      insertRow(activeCell.sheetId, activeCell.rowIndex);\n    } else if (spreadsheet?.activeSheetId) {\n      insertRow(spreadsheet.activeSheetId, 0); // Insert at the top if no cell selected\n    }\n  };\n  const handleDeleteRowAction = () => {\n    if (spreadsheet && activeCell) {\n      deleteRow(activeCell.sheetId, activeCell.rowIndex);\n    }\n  };\n  const handleInsertColumnAction = () => {\n     if (spreadsheet && activeCell) {\n      insertColumn(activeCell.sheetId, activeCell.colIndex);\n    } else if (spreadsheet?.activeSheetId) {\n      insertColumn(spreadsheet.activeSheetId, 0); // Insert at the beginning if no cell selected\n    }\n  };\n  const handleDeleteColumnAction = () => {\n    if (spreadsheet && activeCell) {\n      deleteColumn(activeCell.sheetId, activeCell.colIndex);\n    }\n  };\n\n  const handleAppendRowAction = () => {\n    if (spreadsheet?.activeSheetId) appendRow(spreadsheet.activeSheetId);\n  };\n  const handleAppendColumnAction = () => {\n    if (spreadsheet?.activeSheetId) appendColumn(spreadsheet.activeSheetId);\n  };\n  \n  const setTextAlign = (align: 'left' | 'center' | 'right') => {\n    if (activeCell || selectionRange) updateSelectedCellStyle({ textAlign: align });\n  };\n\n  const handleNewSpreadsheet = () => {\n    router.push('/'); \n  };\n\n  const handleEditSelectedCells = () => {\n    if (!selectionRange) return;\n    const newValue = window.prompt(\"Enter new value for all selected cells:\", \"\");\n    if (newValue !== null) { \n      updateMultipleCellsRawValue(newValue);\n    }\n  };\n\n  const handleFormatAsTable = () => {\n    if (selectionRange) {\n      formatSelectionAsTable();\n    }\n  };\n\n  const isSelectionActive = !!selectionRange && (\n    selectionRange.start.rowIndex !== selectionRange.end.rowIndex || \n    selectionRange.start.colIndex !== selectionRange.end.colIndex || \n    !!activeCell \n  );\n\n  return (\n    <div className=\"p-2 border-b bg-card flex flex-col md:flex-row items-start md:items-center justify-between gap-2 shadow-sm flex-wrap print:hidden\">\n      <div className=\"flex items-center gap-2 w-full md:w-auto\">\n        <Link href=\"/\" aria-label=\"Back to dashboard\">\n          <OfflineSheetLogo className=\"h-8 w-8\"/>\n        </Link>\n        <Input \n          value={spreadsheetName} \n          onChange={handleNameChange}\n          className=\"font-semibold text-lg w-auto min-w-[150px] max-w-[300px]\"\n          aria-label=\"Spreadsheet Name\"\n          disabled={!spreadsheet}\n        />\n        <Button onClick={toggleTheme} variant=\"ghost\" size=\"icon\" className=\"ml-auto md:ml-2\" title={theme === 'dark' ? 'Switch to Light Mode' : 'Switch to Dark Mode'}>\n            {theme === 'dark' ? <Sun /> : <Moon />}\n        </Button>\n         <Menubar className=\"border-none shadow-none p-0 h-auto\">\n          <MenubarMenu>\n            <MenubarTrigger className=\"px-3 py-1.5\">File</MenubarTrigger>\n            <MenubarContent>\n              <MenubarItem onClick={handleNewSpreadsheet}><FilePlus className=\"mr-2 h-4 w-4\" /> New</MenubarItem>\n              <MenubarSeparator />\n              <MenubarItem onClick={saveSpreadsheet} disabled={!spreadsheet}><Save className=\"mr-2 h-4 w-4\" /> Save</MenubarItem>\n              <MenubarItem onClick={handleLoadFromFile}><Upload className=\"mr-2 h-4 w-4\" /> Load from File...</MenubarItem>\n              <MenubarSeparator />\n              <MenubarItem onClick={() => handleExport('xlsx')}><Download className=\"mr-2 h-4 w-4\" /> Export as .xlsx</MenubarItem>\n              <MenubarItem onClick={() => handleExport('csv')}><FileText className=\"mr-2 h-4 w-4\" /> Export as .csv</MenubarItem>\n              <MenubarSeparator />\n              <MenubarItem asChild><Link href=\"/\"><Home className=\"mr-2 h-4 w-4\" /> Dashboard</Link></MenubarItem>\n            </MenubarContent>\n          </MenubarMenu>\n\n          <MenubarMenu>\n            <MenubarTrigger className=\"px-3 py-1.5\">Edit</MenubarTrigger>\n            <MenubarContent>\n              <MenubarItem onClick={undo} disabled={!canUndo}><Undo className=\"mr-2 h-4 w-4\" /> Undo <MenubarShortcut>Ctrl+Z</MenubarShortcut></MenubarItem>\n              <MenubarItem onClick={redo} disabled={!canRedo}><Redo className=\"mr-2 h-4 w-4\" /> Redo <MenubarShortcut>Ctrl+Y</MenubarShortcut></MenubarItem>\n              <MenubarSeparator />\n              <MenubarItem onClick={copySelectionToClipboard} disabled={!selectionRange}><ClipboardCopy className=\"mr-2 h-4 w-4\" /> Copy</MenubarItem>\n              {/* Add Cut and Paste later */}\n              <MenubarSeparator />\n              <MenubarItem onClick={deleteSelectionContents} disabled={!selectionRange}><Eraser className=\"mr-2 h-4 w-4\" /> Clear Contents</MenubarItem>\n              <MenubarItem onClick={handleEditSelectedCells} disabled={!selectionRange}>\n                <Edit className=\"mr-2 h-4 w-4\" /> Edit Selected Cells...\n              </MenubarItem>\n            </MenubarContent>\n          </MenubarMenu>\n          \n          <MenubarMenu>\n            <MenubarTrigger className=\"px-3 py-1.5\">Insert</MenubarTrigger>\n            <MenubarContent>\n                <MenubarItem onClick={handleInsertRowAction} disabled={!spreadsheet}><RowsIcon className=\"mr-2 h-4 w-4\" /> Insert Row Above</MenubarItem>\n                <MenubarItem onClick={handleDeleteRowAction} disabled={!activeCell}><Trash2 className=\"mr-2 h-4 w-4\" /> Delete Row</MenubarItem>\n                <MenubarItem onClick={handleAppendRowAction} disabled={!spreadsheet}><PlusSquare className=\"mr-2 h-4 w-4\" /> Add Row to End</MenubarItem>\n                <MenubarSeparator />\n                <MenubarItem onClick={handleInsertColumnAction} disabled={!spreadsheet}><Columns className=\"mr-2 h-4 w-4\" /> Insert Column Left</MenubarItem>\n                <MenubarItem onClick={handleDeleteColumnAction} disabled={!activeCell}><Trash2 className=\"mr-2 h-4 w-4\" /> Delete Column</MenubarItem>\n                <MenubarItem onClick={handleAppendColumnAction} disabled={!spreadsheet}><PlusSquare className=\"mr-2 h-4 w-4\" /> Add Column to End</MenubarItem>\n                <MenubarSeparator />\n                <MenubarItem onClick={handleFormatAsTable} disabled={!isSelectionActive}>\n                    <TableIcon className=\"mr-2 h-4 w-4\" /> Format as Table\n                </MenubarItem>\n                 <MenubarItem onClick={() => setIsFunctionsDialogOpen(true)}>\n                    <Sigma className=\"mr-2 h-4 w-4\" /> Functions...\n                </MenubarItem>\n            </MenubarContent>\n          </MenubarMenu>\n\n          <MenubarMenu>\n            <MenubarTrigger className=\"px-3 py-1.5\">Format</MenubarTrigger>\n            <MenubarContent>\n              <MenubarGroup>\n                  <MenubarItem onClick={handleToggleBold} disabled={!isSelectionActive} className={cn(selectedCellStyle?.bold && \"bg-accent\")}>\n                    <Bold className=\"mr-2 h-4 w-4\" /> Bold\n                  </MenubarItem>\n                  <MenubarItem onClick={handleToggleItalic} disabled={!isSelectionActive} className={cn(selectedCellStyle?.italic && \"bg-accent\")}>\n                    <Italic className=\"mr-2 h-4 w-4\" /> Italic\n                  </MenubarItem>\n                  <MenubarItem onClick={handleToggleUnderline} disabled={!isSelectionActive} className={cn(selectedCellStyle?.underline && \"bg-accent\")}>\n                    <Underline className=\"mr-2 h-4 w-4\" /> Underline\n                  </MenubarItem>\n              </MenubarGroup>\n              <MenubarSeparator />\n              <MenubarSub>\n                  <MenubarSubTrigger disabled={!isSelectionActive}>\n                      <AlignLeft className=\"mr-2 h-4 w-4\" /> Align Text\n                  </MenubarSubTrigger>\n                  <MenubarSubContent>\n                      <MenubarItem onClick={() => setTextAlign('left')} className={cn(selectedCellStyle?.textAlign === 'left' && \"bg-accent\")}><AlignLeft className=\"mr-2 h-4 w-4\" /> Left</MenubarItem>\n                      <MenubarItem onClick={() => setTextAlign('center')} className={cn(selectedCellStyle?.textAlign === 'center' && \"bg-accent\")}><AlignCenter className=\"mr-2 h-4 w-4\" /> Center</MenubarItem>\n                      <MenubarItem onClick={() => setTextAlign('right')} className={cn(selectedCellStyle?.textAlign === 'right' && \"bg-accent\")}><AlignRight className=\"mr-2 h-4 w-4\" /> Right</MenubarItem>\n                  </MenubarSubContent>\n              </MenubarSub>\n              <MenubarSeparator />\n              <MenubarItem onClick={() => setIsConditionalFormattingDialogOpen(true)}>\n                <Wand2 className=\"mr-2 h-4 w-4\" /> Conditional Formatting...\n              </MenubarItem>\n            </MenubarContent>\n          </MenubarMenu>\n        </Menubar>\n      </div>\n\n      <div className=\"flex items-center gap-1 flex-wrap mt-2 md:mt-0 border-t md:border-t-0 pt-2 md:pt-0 w-full md:w-auto\">\n        <Button variant=\"ghost\" size=\"icon\" onClick={saveSpreadsheet} aria-label=\"Save Spreadsheet\" title=\"Save\" disabled={!spreadsheet}><Save /></Button>\n        <Button variant=\"ghost\" size=\"icon\" onClick={undo} aria-label=\"Undo\" title=\"Undo\" disabled={!canUndo}><Undo /></Button>\n        <Button variant=\"ghost\" size=\"icon\" onClick={redo} aria-label=\"Redo\" title=\"Redo\" disabled={!canRedo}><Redo /></Button>\n        \n        <Separator orientation=\"vertical\" className=\"h-6 mx-1\"/>\n        <Button variant=\"ghost\" size=\"icon\" onClick={copySelectionToClipboard} aria-label=\"Copy Selection\" title=\"Copy Selection\" disabled={!selectionRange}><ClipboardCopy /></Button>\n        <Button variant=\"ghost\" size=\"icon\" onClick={deleteSelectionContents} aria-label=\"Clear Contents of Selection\" title=\"Clear Contents\" disabled={!selectionRange}><Eraser /></Button>\n        \n        <Separator orientation=\"vertical\" className=\"h-6 mx-1\"/>\n        \n        <Button \n          variant={selectedCellStyle?.bold ? \"secondary\" : \"ghost\"} \n          size=\"icon\" \n          onClick={handleToggleBold} \n          aria-label=\"Bold\" \n          title=\"Bold (Ctrl+B)\"\n          disabled={!isSelectionActive}\n        ><Bold /></Button>\n        <Button \n          variant={selectedCellStyle?.italic ? \"secondary\" : \"ghost\"} \n          size=\"icon\" \n          onClick={handleToggleItalic} \n          aria-label=\"Italic\" \n          title=\"Italic (Ctrl+I)\"\n          disabled={!isSelectionActive}\n        ><Italic /></Button>\n        <Button \n          variant={selectedCellStyle?.underline ? \"secondary\" : \"ghost\"} \n          size=\"icon\" \n          onClick={handleToggleUnderline} \n          aria-label=\"Underline\" \n          title=\"Underline (Ctrl+U)\"\n          disabled={!isSelectionActive}\n        ><Underline /></Button>\n\n        <Separator orientation=\"vertical\" className=\"h-6 mx-1\"/>\n        \n        <Button \n          variant={selectedCellStyle?.textAlign === 'left' ? \"secondary\" : \"ghost\"} \n          size=\"icon\" \n          onClick={() => setTextAlign('left')} \n          aria-label=\"Align Left\" \n          title=\"Align Left\"\n          disabled={!isSelectionActive}\n        ><AlignLeft /></Button>\n        <Button \n          variant={selectedCellStyle?.textAlign === 'center' ? \"secondary\" : \"ghost\"} \n          size=\"icon\" \n          onClick={() => setTextAlign('center')} \n          aria-label=\"Align Center\"\n          title=\"Align Center\" \n          disabled={!isSelectionActive}\n        ><AlignCenter /></Button>\n        <Button \n          variant={selectedCellStyle?.textAlign === 'right' ? \"secondary\" : \"ghost\"} \n          size=\"icon\" \n          onClick={() => setTextAlign('right')} \n          aria-label=\"Align Right\" \n          title=\"Align Right\"\n          disabled={!isSelectionActive}\n        ><AlignRight /></Button>\n      </div>\n      <AvailableFunctionsDialog isOpen={isFunctionsDialogOpen} onOpenChange={setIsFunctionsDialogOpen} />\n      <Dialog open={isConditionalFormattingDialogOpen} onOpenChange={setIsConditionalFormattingDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Conditional Formatting</DialogTitle>\n            <DialogDescription>\n              This feature allows you to apply formatting to cells based on certain rules or conditions.\n              Full implementation is coming soon!\n            </DialogDescription>\n          </DialogHeader>\n           <DialogFooter>\n            <Button onClick={() => setIsConditionalFormattingDialogOpen(false)}>Close</Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4154, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AANA;;;;;;AAQA,MAAM,cAAc,8KAAA,CAAA,OAAyB;AAE7C,MAAM,qBAAqB,8KAAA,CAAA,UAA4B;AAEvD,MAAM,oBAAoB,8KAAA,CAAA,SAA2B;AAErD,MAAM,mCAAqB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,8KAAA,CAAA,UAA4B;QAC3B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;KAVH;AAaN,mBAAmB,WAAW,GAAG,8KAAA,CAAA,UAA4B,CAAC,WAAW;AAEzE,MAAM,mCAAqB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,8KAAA,CAAA,UAA4B;gBAC3B,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,8KAAA,CAAA,UAA4B,CAAC,WAAW;AAEzE,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,8KAAA,CAAA,QAA0B;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,8KAAA,CAAA,QAA0B,CAAC,WAAW;AAErE,MAAM,uCAAyB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG5C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,8KAAA,CAAA,cAAgC;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,uBAAuB,WAAW,GAChC,8KAAA,CAAA,cAAgC,CAAC,WAAW;AAE9C,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,8KAAA,CAAA,SAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,KAAK;QAC/B,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,8KAAA,CAAA,SAA2B,CAAC,WAAW;AAEvE,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,8KAAA,CAAA,SAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,8KAAA,CAAA,SAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 4306, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/spreadsheet/SheetTabs.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport type { SheetData } from \"@/types/spreadsheet\";\nimport { useSpreadsheet } from \"@/hooks/useSpreadsheet\";\nimport { PlusCircle, Edit2, Trash2, Check, X } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { useState, useRef, useEffect } from 'react';\nimport { Input } from \"@/components/ui/input\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { createInitialSheet } from '@/types/spreadsheet';\nimport { useToast } from \"@/hooks/use-toast\";\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from \"@/components/ui/alert-dialog\";\n\n\ninterface SheetTabsProps {\n  sheets: SheetData[];\n  activeSheetId: string;\n}\n\nexport default function SheetTabs({ sheets, activeSheetId }: SheetTabsProps) {\n  const { spreadsheet, setSpreadsheet, saveSpreadsheet } = useSpreadsheet();\n  const [editingSheetId, setEditingSheetId] = useState<string | null>(null);\n  const [editingName, setEditingName] = useState('');\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    if (editingSheetId && inputRef.current) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, [editingSheetId]);\n\n  const handleTabClick = (sheetId: string) => {\n    if (spreadsheet && setSpreadsheet && spreadsheet.activeSheetId !== sheetId) {\n      setSpreadsheet({ ...spreadsheet, activeSheetId: sheetId, updatedAt: Date.now() });\n    }\n  };\n\n  const handleAddSheet = () => {\n    if (spreadsheet && setSpreadsheet) {\n      const newSheetName = `Sheet${spreadsheet.sheets.length + 1}`;\n      const newSheetId = uuidv4();\n      const newSheet = createInitialSheet(newSheetId, newSheetName);\n      const updatedSheets = [...spreadsheet.sheets, newSheet];\n      setSpreadsheet({\n        ...spreadsheet,\n        sheets: updatedSheets,\n        activeSheetId: newSheetId,\n        updatedAt: Date.now(),\n      });\n      // Optionally save immediately or let user save via toolbar\n      // saveSpreadsheet(); \n    }\n  };\n\n  const handleRenameSheet = (sheetId: string, currentName: string) => {\n    setEditingSheetId(sheetId);\n    setEditingName(currentName);\n  };\n\n  const handleSaveRename = () => {\n    if (spreadsheet && setSpreadsheet && editingSheetId && editingName.trim()) {\n      const updatedSheets = spreadsheet.sheets.map(sheet =>\n        sheet.id === editingSheetId ? { ...sheet, name: editingName.trim() } : sheet\n      );\n      setSpreadsheet({ ...spreadsheet, sheets: updatedSheets, updatedAt: Date.now() });\n      setEditingSheetId(null);\n      setEditingName('');\n    } else if (!editingName.trim()) {\n        toast({title: \"Error\", description: \"Sheet name cannot be empty.\", variant: \"destructive\"});\n    }\n  };\n\n  const handleCancelRename = () => {\n    setEditingSheetId(null);\n    setEditingName('');\n  };\n\n  const handleDeleteSheet = (sheetIdToDelete: string) => {\n     if (spreadsheet && setSpreadsheet) {\n        if (spreadsheet.sheets.length <= 1) {\n            toast({title: \"Cannot Delete\", description: \"A spreadsheet must have at least one sheet.\", variant: \"destructive\"});\n            return;\n        }\n        const updatedSheets = spreadsheet.sheets.filter(sheet => sheet.id !== sheetIdToDelete);\n        let newActiveSheetId = spreadsheet.activeSheetId;\n        if (spreadsheet.activeSheetId === sheetIdToDelete) {\n            // If active sheet is deleted, make the first remaining sheet active\n            newActiveSheetId = updatedSheets[0].id;\n        }\n        setSpreadsheet({\n            ...spreadsheet,\n            sheets: updatedSheets,\n            activeSheetId: newActiveSheetId,\n            updatedAt: Date.now(),\n        });\n     }\n  };\n\n\n  return (\n    <div className=\"p-2 border-t bg-card flex items-center gap-1 overflow-x-auto\">\n      {sheets.map((sheet) => (\n        <div key={sheet.id} className=\"flex items-center\">\n          {editingSheetId === sheet.id ? (\n            <div className=\"flex items-center gap-1 p-1 bg-background rounded-md\">\n              <Input\n                ref={inputRef}\n                type=\"text\"\n                value={editingName}\n                onChange={(e) => setEditingName(e.target.value)}\n                onBlur={handleSaveRename} // Save on blur\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter') handleSaveRename();\n                  if (e.key === 'Escape') handleCancelRename();\n                }}\n                className=\"h-8 text-sm\"\n                aria-label=\"Edit sheet name\"\n              />\n              <Button variant=\"ghost\" size=\"icon\" onClick={handleSaveRename} className=\"h-8 w-8\" aria-label=\"Save sheet name\"><Check size={16}/></Button>\n              <Button variant=\"ghost\" size=\"icon\" onClick={handleCancelRename} className=\"h-8 w-8\" aria-label=\"Cancel rename\"><X size={16}/></Button>\n            </div>\n          ) : (\n            <Button\n              variant={sheet.id === activeSheetId ? \"secondary\" : \"ghost\"}\n              size=\"sm\"\n              onClick={() => handleTabClick(sheet.id)}\n              onDoubleClick={() => handleRenameSheet(sheet.id, sheet.name)}\n              className={cn(\n                \"px-3 py-1.5 h-auto text-sm rounded-md\",\n                sheet.id === activeSheetId && \"font-semibold bg-primary text-primary-foreground hover:bg-primary/90\"\n              )}\n            >\n              {sheet.name}\n            </Button>\n          )}\n          {editingSheetId !== sheet.id && (\n            <div className=\"flex\">\n                <Button variant=\"ghost\" size=\"icon\" onClick={() => handleRenameSheet(sheet.id, sheet.name)} className=\"h-6 w-6 opacity-60 hover:opacity-100\" aria-label={`Rename ${sheet.name}`}>\n                    <Edit2 size={12} />\n                </Button>\n                 <AlertDialog>\n                  <AlertDialogTrigger asChild>\n                    <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 opacity-60 hover:opacity-100 text-destructive hover:text-destructive\" aria-label={`Delete ${sheet.name}`}>\n                        <Trash2 size={12} />\n                    </Button>\n                  </AlertDialogTrigger>\n                  <AlertDialogContent>\n                    <AlertDialogHeader>\n                      <AlertDialogTitle>Delete Sheet \"{sheet.name}\"?</AlertDialogTitle>\n                      <AlertDialogDescription>\n                        This action cannot be undone. Are you sure you want to delete this sheet?\n                      </AlertDialogDescription>\n                    </AlertDialogHeader>\n                    <AlertDialogFooter>\n                      <AlertDialogCancel>Cancel</AlertDialogCancel>\n                      <AlertDialogAction onClick={() => handleDeleteSheet(sheet.id)}>\n                        Delete\n                      </AlertDialogAction>\n                    </AlertDialogFooter>\n                  </AlertDialogContent>\n                </AlertDialog>\n            </div>\n          )}\n        </div>\n      ))}\n      <Button variant=\"ghost\" size=\"icon\" onClick={handleAddSheet} className=\"ml-2\" aria-label=\"Add new sheet\">\n        <PlusCircle size={18} />\n      </Button>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4679, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/spreadsheet/Cell.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { FocusEvent, MouseEvent as ReactMouseEvent } from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport type { CellData, CellAddress } from '@/types/spreadsheet';\nimport { Input } from \"@/components/ui/input\";\nimport { cn } from '@/lib/utils';\nimport { getCellId as getCellIdUtil } from '@/types/spreadsheet';\n\ninterface CellProps {\n  cellData: CellData;\n  address: CellAddress;\n  onCellChange: (rowIndex: number, colIndex: number, rawValue: string | number) => void;\n  isActive: boolean; // Is this the primary active cell in the grid (for styling, formula bar target)\n  isInSelectionRange: boolean; // Is this cell part of the general multi-cell selection range\n  isFormulaHighlightTarget: boolean; // Is this cell part of the formula construction highlight\n  onSelect: (address: CellAddress, isShiftKey: boolean, isDrag: boolean) => void; \n  startEditing: (address: CellAddress) => void; \n  stopEditing: () => void;\n  isEditingThisCell: boolean; // Is this specific cell currently in direct input edit mode\n  width?: number;\n  isActivelyEditingFormulaGlobal?: boolean; // Is the formula bar globally active for editing\n}\n\nexport default function Cell({ \n  cellData, \n  address, \n  onCellChange, \n  isActive, \n  isInSelectionRange,\n  isFormulaHighlightTarget,\n  onSelect,\n  startEditing,\n  stopEditing,\n  isEditingThisCell,\n  width,\n  isActivelyEditingFormulaGlobal \n}: CellProps) {\n  const [editValue, setEditValue] = useState(cellData.rawValue || '');\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    // If this cell is not the one being edited, sync its display value from cellData.rawValue\n    if (!isEditingThisCell) {\n      setEditValue(cellData.rawValue?.toString() || '');\n    }\n  }, [cellData.rawValue, isEditingThisCell]);\n\n  useEffect(() => {\n    if (isEditingThisCell && inputRef.current) {\n      inputRef.current.focus();\n      // Move cursor to the end of the input value\n      inputRef.current.selectionStart = inputRef.current.selectionEnd = inputRef.current.value.length;\n    }\n  }, [isEditingThisCell]);\n  \n  const handleMouseDown = (e: ReactMouseEvent<HTMLTableCellElement>) => {\n    // If this cell is already being edited and the click is inside its input, do nothing.\n    if (isEditingThisCell && inputRef.current && inputRef.current.contains(e.target as Node)) {\n      return; \n    }\n    // Otherwise, delegate to onSelect.\n    // `isDrag` is false for mousedown, as it's the start of a potential drag.\n    onSelect(address, e.shiftKey, false); \n  };\n  \n  const handleClick = (e: ReactMouseEvent<HTMLTableCellElement>) => {\n    // If the formula bar is active, clicks on cells are for formula building (handled by onMouseDown/onSelect).\n    // Prevent further actions like starting direct cell edit.\n    if (isActivelyEditingFormulaGlobal) {\n        e.preventDefault(); \n        return;\n    }\n\n    // If this cell is already being edited and click is on input, do nothing.\n    if (isEditingThisCell && inputRef.current && inputRef.current.contains(e.target as Node)) {\n        return;\n    }\n\n    // If the cell is active but not being edited directly, start editing.\n    // (onMouseDown would have made it active if it wasn't already)\n    if (isActive && !isEditingThisCell) {\n        startEditing(address);\n    } else if (!isActive && !isEditingThisCell) {\n        // This case implies onMouseDown made it active, now this click should start editing.\n        // However, onMouseDown already calls onSelect which might make it active.\n        // For simplicity, a single click should make it active (via onSelect) and then editable.\n        startEditing(address); \n    }\n  };\n\n  const handleDoubleClick = (e: ReactMouseEvent<HTMLTableCellElement>) => {\n    if (isActivelyEditingFormulaGlobal) {\n        e.preventDefault();\n        return;\n    }\n    // Always start editing on double click if not already editing.\n    if (!isEditingThisCell) {\n        startEditing(address);\n    }\n  };\n\n  const handleMouseEnter = (e: ReactMouseEvent<HTMLTableCellElement>) => {\n    // If left mouse button is pressed (i.e., dragging)\n    if (e.buttons === 1) { \n      // Pass true for isDrag parameter to onSelect for drag selection\n      onSelect(address, false, true); \n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEditValue(e.target.value);\n    // If formula bar is active, and user types in cell, potentially update formula bar? (Complex interaction, defer)\n    // For now, direct cell edit updates formula bar if it was targeting this cell.\n    if (isActivelyEditingFormulaGlobal && isActive) {\n        // This sync is tricky. Formula bar should be source of truth when it's active.\n        // Perhaps disable direct cell edit entirely if formula bar is active?\n        // For now, assume if user types in cell while formula bar is active for THIS cell, it's fine.\n    }\n  };\n\n  const handleBlur = (e: FocusEvent<HTMLInputElement>) => {\n    // Only commit change if the value actually changed from the original rawValue\n    // Or if it's a formula (starts with '='), always commit to re-evaluate.\n    if (String(editValue) !== String(cellData.rawValue) || String(editValue).startsWith('=')) { \n      onCellChange(address.rowIndex, address.colIndex, editValue);\n    }\n    stopEditing(); \n  };\n  \n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter' || e.key === 'Tab') {\n      e.preventDefault(); \n      inputRef.current?.blur(); // Triggers handleBlur to save and stop editing\n      // TODO: Add navigation to next cell on Enter/Tab\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      setEditValue(cellData.rawValue?.toString() || ''); // Revert to original\n      inputRef.current?.blur(); // Triggers stopEditing without saving changes via onCellChange\n    }\n  };\n\n  const cellStyleFromData = cellData.style || {};\n  const appliedStyle: React.CSSProperties = {\n    fontWeight: cellStyleFromData.bold ? 'bold' : 'normal',\n    fontStyle: cellStyleFromData.italic ? 'italic' : 'normal',\n    textDecoration: cellStyleFromData.underline ? 'underline' : 'none',\n    textAlign: cellStyleFromData.textAlign as React.CSSProperties['textAlign'],\n    width: width ? `${width}px` : undefined,\n    // Background color can be conditional here based on selection states\n  };\n\n  const cellClasses = cn(\n    \"p-1.5 border text-sm truncate min-w-[var(--default-cell-width,120px)] relative select-none outline-none\",\n    // Base styling\n    {\"font-bold\": cellData.style?.bold},\n    {\"italic\": cellData.style?.italic},\n    {\"underline\": cellData.style?.underline},\n    cellData.style?.textAlign === 'left' && \"text-left\",\n    cellData.style?.textAlign === 'center' && \"text-center\",\n    cellData.style?.textAlign === 'right' && \"text-right\",\n    // Conditional styling for selection states\n    // Normal selection range (not the primary active cell, and not formula editing)\n    isInSelectionRange && !isActive && !isActivelyEditingFormulaGlobal && \"bg-primary/20\", \n    // Formula highlight target (has precedence over isInSelectionRange if both true)\n    isFormulaHighlightTarget && \"bg-green-500/30 border-green-700 border-dashed\",\n  );\n\n\n  // If this cell is being directly edited (input field is active)\n  if (isEditingThisCell && !isActivelyEditingFormulaGlobal) { \n    return (\n      <td \n        className={cn(cellClasses, \"p-0 z-10\")} // Remove padding from td, apply to input\n        style={{...appliedStyle, minWidth: width ? `${width}px` : '120px'}}\n        // Mouse down on the td itself (not the input) should still behave like normal cell mousedown\n        onMouseDown={(e) => { \n            // Prevent mousedown on td from interfering if target is already the input\n            if (inputRef.current && !inputRef.current.contains(e.target as Node)) {\n                handleMouseDown(e);\n            }\n        }}\n        onMouseEnter={handleMouseEnter} // Allow drag selection over an editing cell\n      >\n        {/* Active cell border shown when this cell is the primary active one AND not in global formula editing mode */}\n        {isActive && !isActivelyEditingFormulaGlobal && (\n            <div className=\"absolute inset-[-1px] border-2 border-primary pointer-events-none rounded-[1px] z-20\" />\n        )}\n        <Input\n          ref={inputRef}\n          type=\"text\"\n          value={editValue}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          className=\"w-full h-full p-1.5 box-border text-sm outline-none rounded-none border-transparent focus:ring-0 focus:border-transparent bg-background\"\n          style={{ \n            fontWeight: appliedStyle.fontWeight,\n            fontStyle: appliedStyle.fontStyle,\n            textDecoration: appliedStyle.textDecoration,\n            textAlign: appliedStyle.textAlign,\n          }}\n          aria-label={`Edit cell ${getCellIdUtil(address.rowIndex, address.colIndex)}`}\n        />\n      </td>\n    );\n  }\n\n  // Default display mode for the cell\n  return (\n    <td\n      className={cellClasses}\n      style={{...appliedStyle, minWidth: width ? `${width}px` : '120px'}}\n      onClick={handleClick}\n      onDoubleClick={handleDoubleClick}\n      onMouseDown={handleMouseDown}\n      onMouseEnter={handleMouseEnter}\n      tabIndex={0} \n      aria-readonly={true} \n      data-cell-id={getCellIdUtil(address.rowIndex, address.colIndex)}\n    >\n      {/* Active cell border shown when this cell is the primary active one AND not in global formula editing mode */}\n      {isActive && !isActivelyEditingFormulaGlobal && (\n          <div className=\"absolute inset-[-1px] border-2 border-primary pointer-events-none rounded-[1px] z-20\" />\n      )}\n      {/* Special highlight for formula target, if not the primary active cell (primary active gets its own border) */}\n      {isFormulaHighlightTarget && !isActive && (\n         <div className=\"absolute inset-[-1px] border border-dashed border-green-700 pointer-events-none rounded-[1px] z-10\" />\n      )}\n      {String(cellData.value ?? '')}\n    </td>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4917, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/spreadsheet/Grid.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { MouseEvent as ReactMouseEvent } from 'react';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport type { SheetData, CellAddress, SelectionRange } from '@/types/spreadsheet';\nimport { useSpreadsheet } from '@/hooks/useSpreadsheet';\nimport Cell from './Cell';\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { DEFAULT_COLUMN_WIDTH, getCellId as getCellIdUtil } from '@/types/spreadsheet';\n\ninterface GridProps {\n  sheet: SheetData;\n}\n\nconst getColumnName = (index: number): string => {\n  let name = '';\n  let n = index;\n  do {\n    name = String.fromCharCode(65 + (n % 26)) + name;\n    n = Math.floor(n / 26) -1;\n  } while (n >= 0)\n  return name;\n};\n\nfunction makeRangeString(start: CellAddress, end: CellAddress): string {\n  const minR = Math.min(start.rowIndex, end.rowIndex);\n  const maxR = Math.max(start.rowIndex, end.rowIndex);\n  const minC = Math.min(start.colIndex, end.colIndex);\n  const maxC = Math.max(start.colIndex, end.colIndex);\n  \n  const startId = getCellIdUtil(minR, minC);\n  const endId = getCellIdUtil(maxR, maxC);\n\n  return startId === endId ? startId : `${startId}:${endId}`;\n}\n\n\nexport default function Grid({ sheet }: GridProps) {\n  const { \n    spreadsheet, \n    updateCell, \n    activeCell, \n    selectionRange, \n    setActiveCellAndSelection,\n    isActivelyEditingFormula,\n    formulaBarApiRef,\n  } = useSpreadsheet();\n  \n  const [editingCell, setEditingCell] = useState<CellAddress | null>(null);\n  const gridRef = useRef<HTMLDivElement>(null);\n  const isMouseDownRef = useRef(false); // To track mouse button state globally for drag\n\n  const formulaSelectionStartCellRef = useRef<CellAddress | null>(null);\n  const currentFormulaDragRangeStringRef = useRef<string | null>(null); \n  const [formulaHighlightRange, setFormulaHighlightRange] = useState<SelectionRange | null>(null);\n\n\n  const handleCellChange = useCallback((rowIndex: number, colIndex: number, rawValue: string | number) => {\n    updateCell(sheet.id, rowIndex, colIndex, { rawValue });\n  },[updateCell, sheet.id]);\n\n\n  const handleCellSelect = useCallback((address: CellAddress, isShiftKey: boolean, isDrag: boolean) => {\n    if (formulaBarApiRef.current && isActivelyEditingFormula) {\n        const newCellId = getCellIdUtil(address.rowIndex, address.colIndex);\n\n        if (isDrag) { \n            if (!formulaSelectionStartCellRef.current) { \n                formulaSelectionStartCellRef.current = address;\n                currentFormulaDragRangeStringRef.current = newCellId;\n                formulaBarApiRef.current.appendText(newCellId); \n                setFormulaHighlightRange({ start: address, end: address });\n            } else { \n                const newRangeString = makeRangeString(formulaSelectionStartCellRef.current, address);\n                const currentFullFormula = formulaBarApiRef.current.getValue();\n                const oldRangeToken = currentFormulaDragRangeStringRef.current;\n\n                if (oldRangeToken && currentFullFormula.endsWith(oldRangeToken)) {\n                    const baseFormula = currentFullFormula.slice(0, -oldRangeToken.length);\n                    formulaBarApiRef.current.setText(baseFormula + newRangeString);\n                } else {\n                    formulaBarApiRef.current.appendText(newRangeString); // Fallback\n                }\n                currentFormulaDragRangeStringRef.current = newRangeString;\n                setFormulaHighlightRange({ start: formulaSelectionStartCellRef.current, end: address });\n            }\n        } else { // Single click (onMouseDown, not a drag continuation)\n            const currentFullFormula = formulaBarApiRef.current.getValue();\n            const endsWithCellOrRangeRegex = /([A-Z]+[1-9]\\d*(?::[A-Z]+[1-9]\\d*)?)$/;\n            const formulaEndsWithMatch = currentFullFormula.match(endsWithCellOrRangeRegex);\n            const endsWithOperatorOrParenOrComma = /[+\\-*/,(]$/.test(currentFullFormula);\n            const isFormulaEmptyIsh = currentFullFormula === \"=\" || currentFullFormula === \"\";\n\n            if (formulaEndsWithMatch && !endsWithOperatorOrParenOrComma && !isFormulaEmptyIsh) {\n                // Ends with a cell or range, and not immediately after an operator/comma: REPLACE\n                const oldToken = formulaEndsWithMatch[1];\n                const baseFormula = currentFullFormula.slice(0, -oldToken.length);\n                formulaBarApiRef.current.setText(baseFormula + newCellId);\n            } else {\n                // Empty, ends with operator/comma, or some other case: APPEND\n                formulaBarApiRef.current.appendText(newCellId);\n            }\n            \n            formulaSelectionStartCellRef.current = address; \n            currentFormulaDragRangeStringRef.current = newCellId;\n            setFormulaHighlightRange({ start: address, end: address });\n        }\n        formulaBarApiRef.current.focus();\n        return; \n    }\n    // If not actively editing formula, perform normal selection\n    setActiveCellAndSelection(address, isShiftKey, isDrag, isDrag ? address : undefined);\n    setFormulaHighlightRange(null); \n  }, [\n    setActiveCellAndSelection, \n    isActivelyEditingFormula, \n    formulaBarApiRef, \n    sheet.id,\n  ]);\n\n  const startCellEditing = useCallback((address: CellAddress) => {\n    if (isActivelyEditingFormula) return;\n    if (activeCell && activeCell.sheetId === address.sheetId && activeCell.rowIndex === address.rowIndex && activeCell.colIndex === address.colIndex) {\n       if (editingCell?.rowIndex !== address.rowIndex || editingCell?.colIndex !== address.colIndex || editingCell?.sheetId !== address.sheetId) {\n         setEditingCell(address);\n       }\n    }\n  }, [editingCell, activeCell, isActivelyEditingFormula]);\n\n  const stopCellEditing = useCallback(() => {\n    setEditingCell(null);\n  }, []);\n\n  const handleGridMouseUp = useCallback(() => {\n    isMouseDownRef.current = false; // Track mouse up globally\n    if (isActivelyEditingFormula) {\n      // Don't clear formulaSelectionStartCellRef here, as user might type after selecting a range.\n      // It will be cleared if user clicks away or submits formula.\n      // currentFormulaDragRangeStringRef is also kept for the same reason.\n      if (formulaBarApiRef.current) {\n           formulaBarApiRef.current.focus();\n      }\n    }\n  }, [isActivelyEditingFormula, formulaBarApiRef]);\n\n  const handleGridMouseLeave = useCallback(() => {\n    // If mouse is down and leaves grid, treat as mouse up for drag end.\n    if (isMouseDownRef.current && isActivelyEditingFormula && formulaSelectionStartCellRef.current) { \n        handleGridMouseUp();\n    }\n  }, [isActivelyEditingFormula, handleGridMouseUp]);\n\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (gridRef.current && !gridRef.current.contains(event.target as Node) && editingCell) {\n          const activeInputElement = document.querySelector(`td[data-cell-id=\"${getCellIdUtil(editingCell.rowIndex, editingCell.colIndex)}\"] input`) as HTMLInputElement;\n          activeInputElement?.blur(); \n      }\n    };\n    \n    // Global mouse up listener to correctly reset isMouseDownRef\n    document.addEventListener('mouseup', handleGridMouseUp);\n    document.addEventListener('mousedown', handleClickOutside);\n    \n    return () => {\n      document.removeEventListener('mouseup', handleGridMouseUp);\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [editingCell, handleGridMouseUp]); \n\n  useEffect(() => {\n    if (!isActivelyEditingFormula) {\n      setFormulaHighlightRange(null);\n      currentFormulaDragRangeStringRef.current = null; \n      formulaSelectionStartCellRef.current = null;\n    }\n  }, [isActivelyEditingFormula]);\n\n\n  const columnWidths = sheet.columnWidths || Array(sheet.columnCount).fill(DEFAULT_COLUMN_WIDTH);\n\n  const isCellInSelection = useCallback((rowIndex: number, colIndex: number): boolean => {\n    if (!selectionRange || selectionRange.start.sheetId !== sheet.id || selectionRange.end.sheetId !== sheet.id) return false;\n    \n    const { start, end } = selectionRange;\n    const minRow = Math.min(start.rowIndex, end.rowIndex);\n    const maxRow = Math.max(start.rowIndex, end.rowIndex);\n    const minCol = Math.min(start.colIndex, end.colIndex);\n    const maxCol = Math.max(start.colIndex, end.colIndex);\n\n    return rowIndex >= minRow && rowIndex <= maxRow && colIndex >= minCol && colIndex <= maxCol;\n  }, [selectionRange, sheet.id]);\n\n  const isCellInFormulaHighlight = useCallback((rowIndex: number, colIndex: number): boolean => {\n    if (!isActivelyEditingFormula || !formulaHighlightRange || formulaHighlightRange.start.sheetId !== sheet.id) return false;\n    const { start, end } = formulaHighlightRange;\n    const minRow = Math.min(start.rowIndex, end.rowIndex);\n    const maxRow = Math.max(start.rowIndex, end.rowIndex);\n    const minCol = Math.min(start.colIndex, end.colIndex);\n    const maxCol = Math.max(start.colIndex, end.colIndex);\n    return rowIndex >= minRow && rowIndex <= maxRow && colIndex >= minCol && colIndex <= maxCol;\n  }, [isActivelyEditingFormula, formulaHighlightRange, sheet.id]);\n  \n  if (!sheet || !sheet.cells) {\n    return <div className=\"p-4\">Loading sheet data...</div>;\n  }\n\n  return (\n    <ScrollArea \n      className=\"h-full w-full p-1 bg-muted/20 focus-within:outline-none focus-within:ring-2 focus-within:ring-ring focus-within:ring-offset-2 rounded-md\" \n      tabIndex={-1} \n      onMouseLeave={handleGridMouseLeave} \n      ref={gridRef}\n    >\n        <Table \n          className=\"min-w-full border-collapse table-fixed select-none\"\n          style={{ '--default-cell-width': `${DEFAULT_COLUMN_WIDTH}px` } as React.CSSProperties}\n          onMouseDown={() => { isMouseDownRef.current = true; }} // Track mouse down on the table itself\n        >\n          <TableHeader className=\"sticky top-0 bg-card z-20 shadow-sm print:bg-white\">\n            <TableRow>\n              <TableHead \n                className=\"w-12 min-w-[3rem] p-0 text-center border sticky left-0 bg-card z-30 select-none print:bg-white\"\n                style={{ width: '3rem', minWidth: '3rem' }}\n              >\n                #\n              </TableHead>\n              {Array.from({ length: sheet.columnCount }).map((_, colIndex) => (\n                <TableHead \n                    key={`header-${colIndex}`} \n                    className=\"p-0 text-center border select-none print:bg-white\"\n                    style={{ width: `${columnWidths[colIndex]}px`, minWidth: `${columnWidths[colIndex]}px` }}\n                >\n                  {getColumnName(colIndex)}\n                </TableHead>\n              ))}\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {sheet.cells.map((row, rowIndex) => (\n              <TableRow key={`row-${rowIndex}`}>\n                <TableHead \n                    className=\"w-12 min-w-[3rem] p-0 text-center border sticky left-0 bg-card z-10 select-none print:bg-white\"\n                    style={{ width: '3rem', minWidth: '3rem' }}\n                >\n                  {rowIndex + 1}\n                </TableHead>\n                {row.map((cell, colIndex) => {\n                  const currentCellAddress: CellAddress = { sheetId: sheet.id, rowIndex, colIndex };\n                  const isCurrentActive = !isActivelyEditingFormula && activeCell?.sheetId === sheet.id && activeCell.rowIndex === rowIndex && activeCell.colIndex === colIndex;\n                  const isEditingThis = !isActivelyEditingFormula && editingCell?.sheetId === sheet.id && editingCell.rowIndex === rowIndex && editingCell.colIndex === colIndex;\n                  \n                  return (\n                    <Cell\n                      key={cell.id} \n                      cellData={cell}\n                      address={currentCellAddress}\n                      onCellChange={handleCellChange}\n                      isActive={isCurrentActive}\n                      isInSelectionRange={!isActivelyEditingFormula && isCellInSelection(rowIndex, colIndex)}\n                      isFormulaHighlightTarget={isCellInFormulaHighlight(rowIndex, colIndex)}\n                      onSelect={handleCellSelect}\n                      startEditing={startCellEditing}\n                      stopEditing={stopCellEditing}\n                      isEditingThisCell={isEditingThis}\n                      width={columnWidths[colIndex]}\n                      isActivelyEditingFormulaGlobal={isActivelyEditingFormula} \n                    />\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      <div className=\"h-4\"></div> \n    </ScrollArea>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5304, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 5343, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/spreadsheet/FormulaBar.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Button } from \"@/components/ui/button\";\nimport { useSpreadsheet } from \"@/hooks/useSpreadsheet\";\nimport type { FormulaBarApi } from '@/contexts/SpreadsheetContext';\nimport { getCellId } from '@/types/spreadsheet'; \nimport { Check, XIcon, FunctionSquare } from 'lucide-react'; \n\nexport default function FormulaBar() {\n  const { \n    spreadsheet, \n    activeCell, \n    updateCell, \n    setIsActivelyEditingFormula,\n    formulaBarApiRef,\n    evaluateFormula // Get evaluateFormula from context for preview if needed\n  } = useSpreadsheet(); \n\n  const [currentFormula, setCurrentFormula] = useState('');\n  const [showConfirmCancel, setShowConfirmCancel] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  // Expose API to context\n  useEffect(() => {\n    if (formulaBarApiRef) { // Check if formulaBarApiRef itself is defined\n      const api: FormulaBarApi = {\n        appendText: (text) => {\n          setCurrentFormula(prev => {\n            const input = inputRef.current;\n            if (input) {\n                const start = input.selectionStart ?? prev.length; // Default to end if null\n                const end = input.selectionEnd ?? prev.length;   // Default to end if null\n                const newValue = prev.substring(0, start) + text + prev.substring(end);\n                // Set timeout to allow React to re-render before setting selection\n                // This ensures the input value is updated in the DOM first.\n                setTimeout(() => {\n                    input.focus(); // Re-focus just in case\n                    input.selectionStart = input.selectionEnd = start + text.length;\n                }, 0);\n                return newValue;\n            }\n            return prev + text; // Fallback if input ref not available\n          });\n          if (!showConfirmCancel) setShowConfirmCancel(true);\n        },\n        replaceText: (oldTextSubString, newText) => {\n             setCurrentFormula(prev => {\n                // This is a simple replacement, primarily for live range updates.\n                // It assumes oldTextSubString is likely at the end.\n                if (prev.endsWith(oldTextSubString)) {\n                     return prev.slice(0, -oldTextSubString.length) + newText;\n                }\n                // If not at the end, this simple version might not behave as expected for complex edits.\n                // For now, if it's not at the end, we'll append. A more robust solution would require\n                // knowledge of what specific token to replace if not simply the end.\n                return prev + newText; \n             });\n             if (!showConfirmCancel) setShowConfirmCancel(true);\n        },\n        setText: (text) => {\n          setCurrentFormula(text);\n          if (!showConfirmCancel && text !== (cellData?.rawValue?.toString() || '')) {\n            setShowConfirmCancel(true);\n          }\n        },\n        focus: () => {\n          inputRef.current?.focus();\n        },\n        getValue: () => {\n          // Prefer inputRef.current.value if available, as it's the most up-to-date during typing\n          return inputRef.current?.value ?? currentFormula;\n        }\n      };\n      formulaBarApiRef.current = api;\n    }\n    return () => {\n        if (formulaBarApiRef) { // Check if formulaBarApiRef itself is defined\n            formulaBarApiRef.current = null;\n        }\n    }\n  }, [formulaBarApiRef, showConfirmCancel, currentFormula]); // Added currentFormula for getValue freshness, showConfirmCancel\n\n  const activeSheet = spreadsheet?.sheets.find(s => s.id === spreadsheet.activeSheetId);\n  const cellData = activeCell && activeSheet ? activeSheet.cells[activeCell.rowIndex]?.[activeCell.colIndex] : null;\n\n  const { isActivelyEditingFormula: isFormulaContextEditing } = useSpreadsheet(); // Get read-only value\n\n  useEffect(() => {\n    if (!isFormulaContextEditing && cellData) {\n      setCurrentFormula(cellData.rawValue?.toString() || '');\n      setShowConfirmCancel(false); // Hide buttons if not editing formula and cell changes\n    } else if (!isFormulaContextEditing && !activeCell) {\n      setCurrentFormula('');\n      setShowConfirmCancel(false);\n    }\n  }, [activeCell, cellData, spreadsheet?.activeSheetId, isFormulaContextEditing]);\n\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCurrentFormula(e.target.value);\n    if (!showConfirmCancel) setShowConfirmCancel(true);\n    if (e.target.value.startsWith('=')) { // If user types '=', enter formula editing mode\n        setIsActivelyEditingFormula(true);\n    }\n  };\n\n  const submitFormula = useCallback(() => {\n    if (activeCell && spreadsheet && activeSheet) {\n      // Use formulaBarApiRef.current.getValue() to get the most up-to-date value from the input\n      const formulaToSubmit = formulaBarApiRef.current?.getValue() ?? currentFormula;\n      updateCell(activeSheet.id, activeCell.rowIndex, activeCell.colIndex, { rawValue: formulaToSubmit });\n    }\n    setIsActivelyEditingFormula(false);\n    setShowConfirmCancel(false);\n  }, [activeCell, spreadsheet, activeSheet, updateCell, setIsActivelyEditingFormula, currentFormula, formulaBarApiRef]);\n\n  const cancelEdit = useCallback(() => {\n    if (cellData) {\n      setCurrentFormula(cellData.rawValue?.toString() || '');\n    } else {\n      setCurrentFormula('');\n    }\n    setIsActivelyEditingFormula(false);\n    setShowConfirmCancel(false);\n    // Consider blurring the input or focusing the grid, depending on desired UX\n  }, [cellData, setIsActivelyEditingFormula]);\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      submitFormula();\n      // Focus might shift to grid or next cell after submit, handled by grid navigation later\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      cancelEdit();\n      // inputRef.current?.blur(); // Blurring might be too aggressive, let user click away\n    }\n  }, [submitFormula, cancelEdit]);\n\n  const handleFocus = useCallback(() => {\n    // When formula bar is focused, always show confirm/cancel\n    setShowConfirmCancel(true);\n    // If the content starts with '=', ensure we are in formula editing mode\n    if (inputRef.current?.value.startsWith('=')) {\n      setIsActivelyEditingFormula(true);\n    }\n  }, [setIsActivelyEditingFormula]);\n  \n  const handleBlur = useCallback((e: React.FocusEvent<HTMLInputElement>) => {\n    // Delay to allow click on confirm/cancel buttons to register\n    setTimeout(() => {\n      // Check if focus moved to a formula bar action button or if still in formula bar\n      const activeEl = document.activeElement;\n      if (activeEl !== inputRef.current && \n          !activeEl?.classList.contains('formula-bar-action-button') &&\n          !e.relatedTarget?.classList.contains('formula-bar-action-button')) {\n        // If blurred to something else, and confirm/cancel were visible (meaning an edit was in progress)\n        if (showConfirmCancel) {\n            // If value changed, submit, otherwise cancel (revert to original cell value)\n            const currentValInBar = inputRef.current?.value ?? currentFormula;\n            if (currentValInBar !== (cellData?.rawValue?.toString() || '')) {\n                // submitFormula(); // Auto-submit on blur if changed - can be aggressive\n                                 // For now, let's prefer explicit submit/cancel.\n                                 // Or, if it starts with =, assume it's a formula to be kept.\n                if (!currentValInBar.startsWith('=')) cancelEdit(); // if not a formula, and blurred, cancel if changed\n\n            } else {\n                 // No change, or was already equal. Treat as cancel to hide buttons.\n                 cancelEdit();\n            }\n        }\n        // Always set formula editing to false on blur if not to its own buttons\n        setIsActivelyEditingFormula(false);\n        // setShowConfirmCancel(false); // This is handled by cancelEdit or submitFormula\n      }\n    }, 0);\n  }, [setIsActivelyEditingFormula, showConfirmCancel, currentFormula, cellData, submitFormula, cancelEdit]);\n\n\n  const selectedCellName = activeCell && spreadsheet\n    ? getCellId(activeCell.rowIndex, activeCell.colIndex)\n    : ' '; \n\n  return (\n    <div className=\"p-2 border-b bg-card flex items-center gap-2 shadow-sm print:hidden\">\n      <Input\n        type=\"text\"\n        value={selectedCellName}\n        readOnly\n        className=\"w-20 h-10 text-sm text-center font-mono bg-muted border-r-0 rounded-r-none focus-visible:ring-0 focus-visible:ring-offset-0\"\n        aria-label=\"Selected cell name\"\n        tabIndex={-1}\n      />\n      \n      {(showConfirmCancel || isFormulaContextEditing) && ( // Show if explicitly editing or formula context says so\n         <>\n            <Button variant=\"ghost\" size=\"icon\" onClick={cancelEdit} className=\"h-10 w-10 text-destructive formula-bar-action-button\" aria-label=\"Cancel formula edit\">\n                <XIcon size={18}/>\n            </Button>\n            <Button variant=\"ghost\" size=\"icon\" onClick={submitFormula} className=\"h-10 w-10 text-green-600 formula-bar-action-button\" aria-label=\"Confirm formula edit\">\n                <Check size={18}/>\n            </Button>\n         </>\n      )}\n      \n      <Label htmlFor=\"formula-input\" className=\"font-mono text-sm p-2 bg-muted/50 rounded-l-md border h-10 flex items-center\"\n        onClick={() => inputRef.current?.focus()} \n        title=\"Formula\"\n      >\n        <FunctionSquare size={16} />\n      </Label>\n      <Input\n        ref={inputRef}\n        id=\"formula-input\"\n        type=\"text\"\n        placeholder={activeCell ? \"Enter value or formula...\" : \"Select a cell to edit...\"}\n        value={currentFormula}\n        onChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        className=\"flex-grow h-10 rounded-l-none focus-visible:ring-inset\"\n        aria-label=\"Formula input bar\"\n        disabled={!spreadsheet} // Only truly disable if no spreadsheet is loaded at all.\n                               // Allow typing even if no cell is active yet, if user wants to start formula first.\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5699, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/resizable.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport { ImperativePanelHandle, Panel, PanelGroup } from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = React.forwardRef<\n  ImperativePanelHandle,\n  React.ComponentProps<typeof PanelGroup>\n>(({ className, ...props }, ref) => (\n  <PanelGroup\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n))\nResizablePanelGroup.displayName = \"ResizablePanelGroup\"\n\nconst ResizablePanel = Panel\n\nResizablePanel.displayName = \"ResizablePanel\"\n\nconst ResizableHandle = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof PanelGroup.Handle> & {\n    withHandle?: boolean\n  }\n>(({ className, withHandle, ...props }, ref) => (\n  <PanelGroup.Handle\n    ref={ref}\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className=\"lucide lucide-grip-vertical h-2.5 w-2.5\"\n        >\n          <circle cx=\"9\" cy=\"12\" r=\"1\" />\n          <circle cx=\"9\" cy=\"5\" r=\"1\" />\n          <circle cx=\"9\" cy=\"19\" r=\"1\" />\n          <circle cx=\"15\" cy=\"12\" r=\"1\" />\n          <circle cx=\"15\" cy=\"5\" r=\"1\" />\n          <circle cx=\"15\" cy=\"19\" r=\"1\" />\n        </svg>\n      </div>\n    )}\n  </PanelGroup.Handle>\n))\nResizableHandle.displayName = \"ResizableHandle\"\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n"],"names":[],"mappings":";;;;;;AAGA;AACA;AAEA;AALA;;;;;AAOA,MAAM,oCAAsB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGzC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,wNAAA,CAAA,aAAU;QACT,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qEACA;QAED,GAAG,KAAK;;;;;;;AAGb,oBAAoB,WAAW,GAAG;AAElC,MAAM,iBAAiB,wNAAA,CAAA,QAAK;AAE5B,eAAe,WAAW,GAAG;AAE7B,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAKrC,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,GAAG,OAAO,EAAE,oBACtC,6LAAC,wNAAA,CAAA,aAAU,CAAC,MAAM;QAChB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2oBACA;QAED,GAAG,KAAK;kBAER,4BACC,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBACC,OAAM;gBACN,OAAM;gBACN,QAAO;gBACP,SAAQ;gBACR,MAAK;gBACL,QAAO;gBACP,aAAY;gBACZ,eAAc;gBACd,gBAAe;gBACf,WAAU;;kCAEV,6LAAC;wBAAO,IAAG;wBAAI,IAAG;wBAAK,GAAE;;;;;;kCACzB,6LAAC;wBAAO,IAAG;wBAAI,IAAG;wBAAI,GAAE;;;;;;kCACxB,6LAAC;wBAAO,IAAG;wBAAI,IAAG;wBAAK,GAAE;;;;;;kCACzB,6LAAC;wBAAO,IAAG;wBAAK,IAAG;wBAAK,GAAE;;;;;;kCAC1B,6LAAC;wBAAO,IAAG;wBAAK,IAAG;wBAAI,GAAE;;;;;;kCACzB,6LAAC;wBAAO,IAAG;wBAAK,IAAG;wBAAK,GAAE;;;;;;;;;;;;;;;;;;;;;;;AAMpC,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 5831, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/spreadsheet/SpreadsheetEditorLayout.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useEffect, useState } from 'react'; // Added useState, useEffect\nimport { useSpreadsheet } from '@/hooks/useSpreadsheet';\nimport Toolbar from './Toolbar';\nimport SheetTabs from './SheetTabs';\nimport Grid from './Grid';\nimport FormulaBar from './FormulaBar';\nimport { ResizablePanel, ResizablePanelGroup } from \"@/components/ui/resizable\"; // Removed ResizableHandle for now\n\nexport default function SpreadsheetEditorLayout() {\n  const { spreadsheet } = useSpreadsheet();\n  const [theme, setThemeState] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    // Get theme from localStorage on mount\n    const storedTheme = localStorage.getItem('spreadsheet-theme') || 'light';\n    setThemeState(storedTheme);\n    if (storedTheme === 'dark') {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, []);\n\n  const setTheme = (newTheme: string) => {\n    setThemeState(newTheme);\n    localStorage.setItem('spreadsheet-theme', newTheme);\n    if (newTheme === 'dark') {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  };\n\n\n  if (!spreadsheet) {\n    return <div className=\"flex items-center justify-center h-screen\">Spreadsheet data not available.</div>;\n  }\n  \n  const activeSheet = spreadsheet.sheets.find(s => s.id === spreadsheet.activeSheetId);\n\n  if (!activeSheet) {\n    return <div className=\"flex items-center justify-center h-screen\">Active sheet not found.</div>;\n  }\n\n  return (\n    <div className=\"flex flex-col h-screen bg-background overflow-hidden\">\n      <Toolbar spreadsheetName={spreadsheet.name} theme={theme} setTheme={setTheme} />\n      <FormulaBar />\n      <div className=\"flex-grow overflow-hidden\">\n        <ResizablePanelGroup direction=\"vertical\">\n          <ResizablePanel defaultSize={100} className=\"min-h-[200px]\">\n            <Grid sheet={activeSheet} />\n          </ResizablePanel>\n        </ResizablePanelGroup>\n      </div>\n      <SheetTabs sheets={spreadsheet.sheets} activeSheetId={spreadsheet.activeSheetId} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA,mRAA6C,4BAA4B;AACzE;AACA;AACA;AACA;AACA;AACA,+OAAiF,kCAAkC;;;AARnH;;;;;;;;AAUe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD;IACrC,MAAM,CAAC,OAAO,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;IAE5D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6CAAE;YACR,uCAAuC;YACvC,MAAM,cAAc,aAAa,OAAO,CAAC,wBAAwB;YACjE,cAAc;YACd,IAAI,gBAAgB,QAAQ;gBAC1B,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;YACzC,OAAO;gBACL,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;YAC5C;QACF;4CAAG,EAAE;IAEL,MAAM,WAAW,CAAC;QAChB,cAAc;QACd,aAAa,OAAO,CAAC,qBAAqB;QAC1C,IAAI,aAAa,QAAQ;YACvB,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;QACzC,OAAO;YACL,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;QAC5C;IACF;IAGA,IAAI,CAAC,aAAa;QAChB,qBAAO,6LAAC;YAAI,WAAU;sBAA4C;;;;;;IACpE;IAEA,MAAM,cAAc,YAAY,MAAM,CAAC,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,YAAY,aAAa;IAEnF,IAAI,CAAC,aAAa;QAChB,qBAAO,6LAAC;YAAI,WAAU;sBAA4C;;;;;;IACpE;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,+IAAA,CAAA,UAAO;gBAAC,iBAAiB,YAAY,IAAI;gBAAE,OAAO;gBAAO,UAAU;;;;;;0BACpE,6LAAC,kJAAA,CAAA,UAAU;;;;;0BACX,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,wIAAA,CAAA,sBAAmB;oBAAC,WAAU;8BAC7B,cAAA,6LAAC,wIAAA,CAAA,iBAAc;wBAAC,aAAa;wBAAK,WAAU;kCAC1C,cAAA,6LAAC,4IAAA,CAAA,UAAI;4BAAC,OAAO;;;;;;;;;;;;;;;;;;;;;0BAInB,6LAAC,iJAAA,CAAA,UAAS;gBAAC,QAAQ,YAAY,MAAM;gBAAE,eAAe,YAAY,aAAa;;;;;;;;;;;;AAGrF;GAlDwB;;QACE,iIAAA,CAAA,iBAAc;;;KADhB","debugId":null}},
    {"offset": {"line": 5976, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/spreadsheet/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport { SpreadsheetProvider } from '@/contexts/SpreadsheetContext';\nimport { useSpreadsheet } from '@/hooks/useSpreadsheet'; // Corrected import path\nimport SpreadsheetEditorLayout from '@/components/spreadsheet/SpreadsheetEditorLayout';\nimport { Loader2 } from 'lucide-react';\n\nfunction SpreadsheetEditorPageContents() {\n  const params = useParams();\n  const spreadsheetId = params.id as string;\n  const { spreadsheet, isLoading, loadSpreadsheet } = useSpreadsheet();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (spreadsheetId) {\n      loadSpreadsheet(spreadsheetId);\n    }\n  }, [spreadsheetId, loadSpreadsheet]);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex flex-col items-center justify-center h-full flex-grow\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n        <p className=\"mt-4 text-lg text-muted-foreground\">Loading spreadsheet...</p>\n      </div>\n    );\n  }\n\n  if (!spreadsheet && !isLoading) {\n     // Could be due to error or not found, context handles toast.\n     // Allow user to go back.\n    return (\n      <div className=\"flex flex-col items-center justify-center h-full flex-grow p-8 text-center\">\n        <h2 className=\"text-2xl font-semibold text-destructive mb-4\">Spreadsheet Not Found</h2>\n        <p className=\"text-muted-foreground mb-6\">\n          The requested spreadsheet could not be loaded. It might have been deleted or an error occurred.\n        </p>\n        <button\n          onClick={() => router.push('/')}\n          className=\"px-6 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors\"\n        >\n          Go to Dashboard\n        </button>\n      </div>\n    );\n  }\n  \n  // Spreadsheet is loaded (or still loading, covered by above)\n  return <SpreadsheetEditorLayout />;\n}\n\n\nexport default function SpreadsheetPage() {\n  return (\n    <SpreadsheetProvider>\n      <SpreadsheetEditorPageContents />\n    </SpreadsheetProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA,oOAAyD,wBAAwB;AACjF;AACA;;;AAPA;;;;;;;AASA,SAAS;;IACP,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,gBAAgB,OAAO,EAAE;IAC/B,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,iBAAc,AAAD;IACjE,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mDAAE;YACR,IAAI,eAAe;gBACjB,gBAAgB;YAClB;QACF;kDAAG;QAAC;QAAe;KAAgB;IAEnC,IAAI,WAAW;QACb,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC,oNAAA,CAAA,UAAO;oBAAC,WAAU;;;;;;8BACnB,6LAAC;oBAAE,WAAU;8BAAqC;;;;;;;;;;;;IAGxD;IAEA,IAAI,CAAC,eAAe,CAAC,WAAW;QAC7B,6DAA6D;QAC7D,yBAAyB;QAC1B,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAA+C;;;;;;8BAC7D,6LAAC;oBAAE,WAAU;8BAA6B;;;;;;8BAG1C,6LAAC;oBACC,SAAS,IAAM,OAAO,IAAI,CAAC;oBAC3B,WAAU;8BACX;;;;;;;;;;;;IAKP;IAEA,6DAA6D;IAC7D,qBAAO,6LAAC,+JAAA,CAAA,UAAuB;;;;;AACjC;GA1CS;;QACQ,qIAAA,CAAA,YAAS;QAE4B,iIAAA,CAAA,iBAAc;QACnD,qIAAA,CAAA,YAAS;;;KAJjB;AA6CM,SAAS;IACtB,qBACE,6LAAC,yIAAA,CAAA,sBAAmB;kBAClB,cAAA,6LAAC;;;;;;;;;;AAGP;MANwB","debugId":null}}]
}